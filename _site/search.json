[
  {
    "objectID": "posts/Day 5/index.html",
    "href": "posts/Day 5/index.html",
    "title": "Day 5: Groups",
    "section": "",
    "text": "Today in class we discuss groups and box-plots.\n\n\n\ninstall new package ‘palmerpenguins’\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "posts/Day 5/index.html#introduction",
    "href": "posts/Day 5/index.html#introduction",
    "title": "Day 5: Groups",
    "section": "",
    "text": "Today in class we discuss groups and box-plots.\n\n\n\ninstall new package ‘palmerpenguins’\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "posts/Day 5/index.html#examining-data",
    "href": "posts/Day 5/index.html#examining-data",
    "title": "Day 5: Groups",
    "section": "Examining Data:",
    "text": "Examining Data:\n\n## Looking at the gss wages dataset\nwages &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/gss_wages.csv\")\n\nRows: 61697 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): occrecode, wrkstat, gender, educcat, maritalcat\ndbl (7): rownames, year, realrinc, age, occ10, prestg10, childs\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n##\nwages\n\n# A tibble: 61,697 × 12\n   rownames  year realrinc   age occ10 occrecode  prestg10 childs wrkstat gender\n      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; \n 1        1  1974     4935    21  5620 Office an…       25      0 School  Male  \n 2        2  1974    43178    41  2040 Professio…       66      3 Full-T… Male  \n 3        3  1974       NA    83    NA &lt;NA&gt;             NA      2 Housek… Female\n 4        4  1974       NA    69    NA &lt;NA&gt;             NA      2 Housek… Female\n 5        5  1974    18505    58  5820 Office an…       37      0 Full-T… Female\n 6        6  1974    22206    30   910 Business/…       45      0 School  Male  \n 7        7  1974    55515    48   230 Business/…       59      2 Full-T… Male  \n 8        8  1974       NA    67  6355 Construct…       49      1 Retired Male  \n 9        9  1974       NA    51  4720 Sales            28      2 Housek… Female\n10       10  1974     4935    54  3940 Service          38      2 Full-T… Female\n# ℹ 61,687 more rows\n# ℹ 2 more variables: educcat &lt;chr&gt;, maritalcat &lt;chr&gt;\n\n\n\nwages %&gt;% glimpse()\n\nRows: 61,697\nColumns: 12\n$ rownames   &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ year       &lt;dbl&gt; 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,…\n$ realrinc   &lt;dbl&gt; 4935, 43178, NA, NA, 18505, 22206, 55515, NA, NA, 4935, NA,…\n$ age        &lt;dbl&gt; 21, 41, 83, 69, 58, 30, 48, 67, 51, 54, 89, 71, 27, 30, 22,…\n$ occ10      &lt;dbl&gt; 5620, 2040, NA, NA, 5820, 910, 230, 6355, 4720, 3940, 4810,…\n$ occrecode  &lt;chr&gt; \"Office and Administrative Support\", \"Professional\", NA, NA…\n$ prestg10   &lt;dbl&gt; 25, 66, NA, NA, 37, 45, 59, 49, 28, 38, 47, 45, 50, 29, 33,…\n$ childs     &lt;dbl&gt; 0, 3, 2, 2, 0, 0, 2, 1, 2, 2, 3, 1, 4, 3, 0, 1, 2, 3, 4, 8,…\n$ wrkstat    &lt;chr&gt; \"School\", \"Full-Time\", \"Housekeeper\", \"Housekeeper\", \"Full-…\n$ gender     &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male…\n$ educcat    &lt;chr&gt; \"High School\", \"Bachelor\", \"Less Than High School\", \"Less T…\n$ maritalcat &lt;chr&gt; \"Married\", \"Married\", \"Widowed\", \"Widowed\", \"Never Married\"…\n\n\n\nwages %&gt;% inspect()\n\n\ncategorical variables:  \n        name     class levels     n missing\n1  occrecode character     11 58136    3561\n2    wrkstat character      8 61676      21\n3     gender character      2 61697       0\n4    educcat character      5 61562     135\n5 maritalcat character      5 61670      27\n                                   distribution\n1 Professional (19%), Service (16.9%) ...      \n2 Full-Time (49.4%), Housekeeper (15.1%) ...   \n3 Female (56.1%), Male (43.9%)                 \n4 High School (51.5%) ...                      \n5 Married (51.7%), Never Married (21.8%) ...   \n\nquantitative variables:  \n      name   class  min    Q1 median    Q3      max         mean           sd\n1 rownames numeric    1 15425  30849 46273  61697.0 30849.000000 17810.534116\n2     year numeric 1974  1985   1996  2006   2018.0  1996.073715    12.794470\n3 realrinc numeric  227  8156  16563 27171 480144.5 22326.359234 28581.794499\n4      age numeric   18    32     44    59     89.0    46.176177    17.561065\n5    occ10 numeric   10  2710   4720  6230   9997.0  4695.774081  2627.724076\n6 prestg10 numeric   16    33     42    50     80.0    43.060701    12.987526\n7   childs numeric    0     0      2     3      8.0     1.923457     1.763569\n      n missing\n1 61697       0\n2 61697       0\n3 37887   23810\n4 61478     219\n5 58136    3561\n6 57511    4186\n7 61508     189"
  },
  {
    "objectID": "posts/Day 5/index.html#munging-data",
    "href": "posts/Day 5/index.html#munging-data",
    "title": "Day 5: Groups",
    "section": "Munging Data:",
    "text": "Munging Data:\n\n\nwe can remove missing data in this case as there is enough data leftover to work with.\n\n\n\nwages_clean &lt;-\n  wages %&gt;%\n  tidyr::drop_na(realrinc) # choose column or leave blank to choose all\n\n\nwages_clean &lt;- wages_clean %&gt;%\n  mutate(\n    occrecode = as_factor(occrecode),\n    wrkstat = as_factor(wrkstat),\n    gender = as_factor(gender),\n    educcat = as_factor(educcat),\n    maritalcat = as_factor(maritalcat),\n    rownames = as_factor(rownames),\n    year = as_factor(year)\n    \n  )\nwages_clean\n\n# A tibble: 37,887 × 12\n   rownames year  realrinc   age occ10 occrecode  prestg10 childs wrkstat gender\n   &lt;fct&gt;    &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt;   &lt;fct&gt; \n 1 1        1974      4935    21  5620 Office an…       25      0 School  Male  \n 2 2        1974     43178    41  2040 Professio…       66      3 Full-T… Male  \n 3 5        1974     18505    58  5820 Office an…       37      0 Full-T… Female\n 4 6        1974     22206    30   910 Business/…       45      0 School  Male  \n 5 7        1974     55515    48   230 Business/…       59      2 Full-T… Male  \n 6 10       1974      4935    54  3940 Service          38      2 Full-T… Female\n 7 15       1974      4935    22  4020 Service          33      0 Full-T… Female\n 8 16       1974     18505    23  7810 Production       28      1 Full-T… Male  \n 9 21       1974     11103    25  8640 Production       31      0 Full-T… Male  \n10 26       1974     30841    59  4710 Sales            48      1 Full-T… Male  \n# ℹ 37,877 more rows\n# ℹ 2 more variables: educcat &lt;fct&gt;, maritalcat &lt;fct&gt;\n\n\n\nwages_clean %&gt;% inspect()\n\n\ncategorical variables:  \n        name  class levels     n missing\n1   rownames factor  37887 37887       0\n2       year factor     30 37887       0\n3  occrecode factor     11 37797      90\n4    wrkstat factor      8 37887       0\n5     gender factor      2 37887       0\n6    educcat factor      5 37846      41\n7 maritalcat factor      5 37883       4\n                                   distribution\n1 1 (0%), 2 (0%), 5 (0%) ...                   \n2 2006 (7%), 1994 (5.2%) ...                   \n3 Professional (20.6%), Service (16%) ...      \n4 Full-Time (71.6%), Part-Time (13.9%) ...     \n5 Male (50.5%), Female (49.5%)                 \n6 High School (53.1%), Bachelor (17.6%) ...    \n7 Married (53.5%), Never Married (24.6%) ...   \n\nquantitative variables:  \n      name   class min   Q1 median    Q3      max         mean           sd\n1 realrinc numeric 227 8156  16563 27171 480144.5 22326.359234 28581.794499\n2      age numeric  18   30     39    51     89.0    40.948288    13.502676\n3    occ10 numeric  10 2330   4700  6220   9997.0  4568.104691  2658.871969\n4 prestg10 numeric  16   35     44    51     80.0    43.815189    13.085116\n5   childs numeric   0    0      2     3      8.0     1.693459     1.616469\n      n missing\n1 37887       0\n2 37825      62\n3 37797      90\n4 37368     519\n5 37809      78"
  },
  {
    "objectID": "posts/Day 5/index.html#q1-what-is-the-basic-distribution-of-realrinc-the-respondants-base-income",
    "href": "posts/Day 5/index.html#q1-what-is-the-basic-distribution-of-realrinc-the-respondants-base-income",
    "title": "Day 5: Groups",
    "section": "Q1: What is the basic distribution of realrinc (the respondant’s base income)?",
    "text": "Q1: What is the basic distribution of realrinc (the respondant’s base income)?\n\nwages_clean %&gt;%\n  gf_boxplot(realrinc ~ \"Income\") %&gt;% # Dummy X-axis \"variable\"\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\n\nThis graph has been plotted on a logarithmic scale (1e+05 = 1 x10^5, 2e+05 = 2x10^5 and so on) as the data spans a wide range of values\nFROM THIS GRAPH\n\nIncome is a very skewed distribution, as might be expected.\nPresence of many higher-side outliers is noted."
  },
  {
    "objectID": "posts/Day 5/index.html#q2-is-realrinc-affected-by-gender",
    "href": "posts/Day 5/index.html#q2-is-realrinc-affected-by-gender",
    "title": "Day 5: Groups",
    "section": "Q2: Is realrinc affected by gender?",
    "text": "Q2: Is realrinc affected by gender?\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 2A: Income by Gender\")\n\n\n\n\n\n\n\n\n\nconverting scalenatural log to log base 10. why??\n\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ log10(realrinc)) %&gt;%\n  gf_labs(title = \"Plot 2B: Log(Income) by Gender\")\n\n\n\n\n\n\n\n\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ realrinc, fill = ~gender) %&gt;%\n  gf_refine(scale_x_log10()) %&gt;%\n  gf_labs(title = \"Plot 2C: Income filled by Gender, log scale\")\n\n\n\n\n\n\n\n\n\n\nFROM THE GRAPHS:\n\nEven when split by gender, realincome presents a skewed set of distributions.\nThe IQR for males is smaller than the IQR for females. There is less variation in the middle ranges of realrinc for men.\nlog10 transformation helps to view and understand the regions of low realrinc.\nThere are outliers on both sides, indicating that there may be many people who make very small amounts of money and large amounts of money in both genders."
  },
  {
    "objectID": "posts/Day 3/index.html",
    "href": "posts/Day 3/index.html",
    "title": "Day 3: Counts",
    "section": "",
    "text": "Today we as a class explored Counts using a data set, taxi, about taxi rides taken in Chicago in 2022. Under the ‘Your Turn’ section of the Counts page, I chose to investigate the fertility data set.\n\n\n\nFirst install packages and call them to the document\nThen call the data set and perform glimpse(), inspect() and skim()\nIf there is anything to be munged, the data is re-organised\nLooking at the data, questions are developed that can be answered by comparing variables\nThen, plot graphs, compare and analyze them\nLastly revisit the entire process with a new dataset!\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#introduction",
    "href": "posts/Day 3/index.html#introduction",
    "title": "Day 3: Counts",
    "section": "",
    "text": "Today we as a class explored Counts using a data set, taxi, about taxi rides taken in Chicago in 2022. Under the ‘Your Turn’ section of the Counts page, I chose to investigate the fertility data set.\n\n\n\nFirst install packages and call them to the document\nThen call the data set and perform glimpse(), inspect() and skim()\nIf there is anything to be munged, the data is re-organised\nLooking at the data, questions are developed that can be answered by comparing variables\nThen, plot graphs, compare and analyze them\nLastly revisit the entire process with a new dataset!\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#reading-data",
    "href": "posts/Day 3/index.html#reading-data",
    "title": "Day 3: Counts",
    "section": "Reading Data:",
    "text": "Reading Data:\n\ntaxi &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntaxi\n\n# A tibble: 10,000 × 8\n   rownames tip   distance company                      local dow   month  hour\n      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;                        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1        1 yes      17.2  Chicago Independents         no    Thu   Feb      16\n 2        2 yes       0.88 City Service                 yes   Thu   Mar       8\n 3        3 yes      18.1  other                        no    Mon   Feb      18\n 4        4 yes      20.7  Chicago Independents         no    Mon   Apr       8\n 5        5 yes      12.2  Chicago Independents         no    Sun   Mar      21\n 6        6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23\n 7        7 yes      17.5  Flash Cab                    no    Fri   Mar      12\n 8        8 yes      17.7  other                        no    Sun   Jan       6\n 9        9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12\n10       10 yes       1.47 City Service                 no    Tue   Mar      14\n# ℹ 9,990 more rows\n\n\n\ntaxi %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;chr&gt; \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\",…\n$ dow      &lt;chr&gt; \"Thu\", \"Thu\", \"Mon\", \"Mon\", \"Sun\", \"Sat\", \"Fri\", \"Sun\", \"Fri\"…\n$ month    &lt;chr&gt; \"Feb\", \"Mar\", \"Feb\", \"Apr\", \"Mar\", \"Apr\", \"Mar\", \"Jan\", \"Apr\"…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\n##TABLE!!\ntaxi %&gt;%\n  head(20) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"SN\", \"Tip\", \"Distance\",\n      \"Company\", \"Local\", \"DOW\",\n      \"Month\", \"Hour\"\n    ),\n    caption = \"Taxi Dataset\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nTaxi Dataset\n\n\nSN\nTip\nDistance\nCompany\nLocal\nDOW\nMonth\nHour\n\n\n\n\n1\nyes\n17.19\nChicago Independents\nno\nThu\nFeb\n16\n\n\n2\nyes\n0.88\nCity Service\nyes\nThu\nMar\n8\n\n\n3\nyes\n18.11\nother\nno\nMon\nFeb\n18\n\n\n4\nyes\n20.70\nChicago Independents\nno\nMon\nApr\n8\n\n\n5\nyes\n12.23\nChicago Independents\nno\nSun\nMar\n21\n\n\n6\nyes\n0.94\nSun Taxi\nyes\nSat\nApr\n23\n\n\n7\nyes\n17.47\nFlash Cab\nno\nFri\nMar\n12\n\n\n8\nyes\n17.67\nother\nno\nSun\nJan\n6\n\n\n9\nyes\n1.85\nTaxicab Insurance Agency Llc\nno\nFri\nApr\n12\n\n\n10\nyes\n1.47\nCity Service\nno\nTue\nMar\n14\n\n\n11\nyes\n0.53\nSun Taxi\nno\nTue\nMar\n18\n\n\n12\nyes\n6.65\nTaxicab Insurance Agency Llc\nno\nSun\nApr\n11\n\n\n13\nyes\n16.82\nSun Taxi\nno\nWed\nApr\n12\n\n\n14\nyes\n1.21\nSun Taxi\nyes\nThu\nApr\n19\n\n\n15\nyes\n1.00\nother\nno\nFri\nMar\n17\n\n\n16\nyes\n0.86\nother\nno\nTue\nFeb\n13\n\n\n17\nno\n0.40\nother\nyes\nFri\nMar\n17\n\n\n18\nyes\n0.10\nTaxi Affiliation Services\nno\nSun\nApr\n10\n\n\n19\nyes\n1.00\nTaxi Affiliation Services\nno\nMon\nFeb\n18\n\n\n20\nyes\n1.60\nTaxi Affiliation Services\nno\nTue\nApr\n8\n\n\n\n\n\n\n\n\n\ntaxi %&gt;%inspect()\n\n\ncategorical variables:  \n     name     class levels     n missing\n1     tip character      2 10000       0\n2 company character      7 10000       0\n3   local character      2 10000       0\n4     dow character      7 10000       0\n5   month character      4 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n3     hour numeric   0   11.00   15.00   18.0000    23.0   14.177300\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n3    4.359904 10000       0\n\n\n\ntaxi %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n10000\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntip\n0\n1\n2\n3\n0\n2\n0\n\n\ncompany\n0\n1\n5\n28\n0\n7\n0\n\n\nlocal\n0\n1\n2\n3\n0\n2\n0\n\n\ndow\n0\n1\n3\n3\n0\n7\n0\n\n\nmonth\n0\n1\n3\n3\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1\n5000.50\n2886.90\n1\n2500.75\n5000.50\n7500.25\n10000.0\n▇▇▇▇▇\n\n\ndistance\n0\n1\n6.22\n7.38\n0\n0.94\n1.78\n15.56\n42.3\n▇▁▂▁▁\n\n\nhour\n0\n1\n14.18\n4.36\n0\n11.00\n15.00\n18.00\n23.0\n▁▃▅▇▃\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#munging-data",
    "href": "posts/Day 3/index.html#munging-data",
    "title": "Day 3: Counts",
    "section": "Munging Data",
    "text": "Munging Data\n.\n\nConverting Qualitative Variables into Factors:\n\ntaxi_modifiedA &lt;- taxi %&gt;%\n  dplyr::mutate(\n    tip = as_factor(tip),\n    local = as_factor(local),\n    month = as_factor(month),\n    dow = as_factor(dow),\n    company = as_factor(company),\n    hour = as_factor(hour)\n    \n  )\nglimpse(taxi_modifiedA)\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;fct&gt; yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, y…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;fct&gt; Chicago Independents, City Service, other, Chicago Independen…\n$ local    &lt;fct&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;fct&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;fct&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;fct&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ntaxi_modifiedA %&gt;%inspect()\n\n\ncategorical variables:  \n     name  class levels     n missing\n1     tip factor      2 10000       0\n2 company factor      7 10000       0\n3   local factor      2 10000       0\n4     dow factor      7 10000       0\n5   month factor      4 10000       0\n6    hour factor     23 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n6 17 (9%), 18 (8.5%), 16 (8.1%) ...            \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n\n\n\n\nOrdered Factors - Levels and Labels\n\n## Convert `dow`, `local`, and `month` into ordered factors\ntaxi_modifiedB &lt;- taxi_modifiedA %&gt;%\n  mutate(\n    dow = factor(dow,\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      labels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      ordered = TRUE\n    ),\n    ##\n    local = factor(local,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"yes\", \"no\"),\n      ordered = TRUE\n    ),\n    ##\n    month = factor(month,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      ordered = TRUE\n    )\n  )\ntaxi_modifiedB %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;fct&gt; yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, y…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;fct&gt; Chicago Independents, City Service, other, Chicago Independen…\n$ local    &lt;ord&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;ord&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;ord&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;fct&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\nNotes\n\nwhen ordered isn’t set to true, the labels and levels resort to alphabetical as default\n\n\n.\n.\n\ntaxi_modifiedB %&gt;% inspect()\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     tip  factor      2 10000       0\n2 company  factor      7 10000       0\n3   local ordered      2 10000       0\n4     dow ordered      7 10000       0\n5   month ordered      4 10000       0\n6    hour  factor     23 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n6 17 (9%), 18 (8.5%), 16 (8.1%) ...            \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q1.a-do-more-people-tip-than-not",
    "href": "posts/Day 3/index.html#q1.a-do-more-people-tip-than-not",
    "title": "Day 3: Counts",
    "section": "Q1.A: Do more people tip than not?",
    "text": "Q1.A: Do more people tip than not?\n\ngf_bar(~tip, data = taxi_modifiedB) %&gt;%\n  gf_labs(title = \"Plot 1: Counts of Tips\")\n\n\n\n\n\n\n\n\n.\n.\n\nNotes\n\ncolor vs fill\nwhere are the colours coming from? How can I change them\nposition: dodge vs stacked - DEFAULT IS STACKED\ngf_bar - when the y is left blank, it counts\ngf_coloumn - gives the y axis to manually input\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q2.a-does-the-tip-depend-upon-whether-the-trip-is-local-or-not",
    "href": "posts/Day 3/index.html#q2.a-does-the-tip-depend-upon-whether-the-trip-is-local-or-not",
    "title": "Day 3: Counts",
    "section": "Q2.A: Does the tip depend upon whether the trip is local or not?",
    "text": "Q2.A: Does the tip depend upon whether the trip is local or not?\n\n## using colour = ...\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    color = ~tip,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.1: Dodged Bar Chart\",\n          subtitle = \"Using Colour\")\n\n\n\n\n\n\n\n\n.\n\n## Using fill = ...\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.2: Dodged Bar Chart\",\n          subtitle = \"Using Fill\")\n\n\n\n\n\n\n\n\n.\n\n## Flipping facets\ntaxi_modifiedB %&gt;%\n  gf_bar(~tip,\n    fill = ~local,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.3: Dodged Bar Chart\",\n          subtitle = \"Flipping 'local' and 'tip' variables:\")\n\n\n\n\n\n\n\n\n.\n\n## Using stack\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"stack\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2B.1: Stacked Bar Chart\",\n    subtitle = \"Can we spot per group differences in proportions??\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## Flipping Facets\ntaxi_modifiedB %&gt;%\n  gf_bar(~tip,\n    fill = ~local,\n    position = \"stack\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2B.2: Stacked Bar Chart\",\n    subtitle = \"Flipping 'local' and 'tip' variables:\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## Using ratio proportions\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2C: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios\"\n  )\n\n\n\n\n\n\n\n\n.\n.\n\nUnderstandings from Graphs:\n\nPlot 2B. 1: People tip more often than not, regardless of if the trip is local or not.\nPlot 2B. 2: Majority of those who tip are going on trips that are not local. This may be true, but its not the whole truth.\nBECAUSE PERCENTAGS MATTER - THE NUMBER OF TRIPS THAT ARE LOCAL AND NOT LOCAL ARE NOT THE SAME.\nPlot 2C: Now we can say for sure that more people tip on trips that are not local.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q3-do-some-cab-companies-get-more-tips-than-others",
    "href": "posts/Day 3/index.html#q3-do-some-cab-companies-get-more-tips-than-others",
    "title": "Day 3: Counts",
    "section": "Q3: Do some cab companies get more tips than others?",
    "text": "Q3: Do some cab companies get more tips than others?\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ company,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 3A: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios by company\"\n  )\n\n\n\n\n\n\n\n\n.\n\nRe-Ordering the columns.\n\ntaxi_modifiedC &lt;- taxi_modifiedB %&gt;% \n  group_by(company) %&gt;%\n  summarise(tipyes_prop = prop(tip), tipno_prop= 1-prop(tip), count_tip = count(tip))%&gt;% arrange(desc(tipyes_prop))\ntaxi_modifiedC\n\n# A tibble: 7 × 4\n  company                      tipyes_prop tipno_prop count_tip\n  &lt;fct&gt;                              &lt;dbl&gt;      &lt;dbl&gt;     &lt;int&gt;\n1 Chicago Independents               0.949     0.0512       741\n2 Sun Taxi                           0.939     0.0608      1298\n3 other                              0.928     0.0722      2519\n4 City Service                       0.927     0.0733      1100\n5 Taxicab Insurance Agency Llc       0.925     0.0747      1139\n6 Taxi Affiliation Services          0.906     0.0945      1534\n7 Flash Cab                          0.869     0.131        878\n\n\n\ntaxi_modifiedC$company &lt;- factor(taxi_modifiedC$company,\n                           levels = taxi_modifiedC$company[order(-taxi_modifiedC$tipyes_prop)])\n  \ntaxi_modifiedC %&gt;% glimpse()\n\nRows: 7\nColumns: 4\n$ company     &lt;fct&gt; Chicago Independents, Sun Taxi, other, City Service, Taxic…\n$ tipyes_prop &lt;dbl&gt; 0.9487836, 0.9392185, 0.9278085, 0.9267060, 0.9252640, 0.9…\n$ tipno_prop  &lt;dbl&gt; 0.05121639, 0.06078148, 0.07219153, 0.07329402, 0.07473599…\n$ count_tip   &lt;int&gt; 741, 1298, 2519, 1100, 1139, 1534, 878\n\n\n\n##a = taxi_modifiedC$tipyes_prop\n##b = taxi_modifiedC$tipno_prop\n##tips = a+b\n##taxi_modifiedD &lt;- taxi_modifiedC %&gt;%\n  ##dplyr::mutate(\n    ##tip = factor(tip,\n                 ##levels = c(\"yes\",\"no\"),\n                 ##labels\n  ##)\n\n\ntaxi_modifiedC %&gt;%\n  gf_bar(~ company,\n    fill = ~ tipyes_prop,\n    position = \"fill\"\n  ) %&gt;% \n  gf_labs(\n    title = \"Plot 3A: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios by company\"\n  ) %&gt;% \n  \n  gf_theme(theme(\n    axis.text.x = element_text(\n      angle = 45,\n      hjust = 1\n    )\n  ))\n\n\n\n\n\n\n\n\n.\n\nNotes\n\nusing arrange(), select() and reorder()\nDon’t mix in BaseR when you have tidyverse!!\nHow can I bring back the yes and no comparison of tips within each coloumn?\n\n\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q4-does-a-tip-depend-upon-the-distance-hour-of-day-and-dow-and-month",
    "href": "posts/Day 3/index.html#q4-does-a-tip-depend-upon-the-distance-hour-of-day-and-dow-and-month",
    "title": "Day 3: Counts",
    "section": "Q4: Does a tip depend upon the distance, hour of day, and DOW and month?",
    "text": "Q4: Does a tip depend upon the distance, hour of day, and DOW and month?\n.\n\nTips by Hour\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ hour,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4A: [Tips and Hour] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ dow,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4B: [Tips and DOW] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by month\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ month,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4C: [Tips and Month] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW and Month\n\n## With position default\n taxi_modifiedB %&gt;% \n   gf_bar(~ month | dow, \n       fill = ~tip) %&gt;%\n  gf_labs(\n    title = \"Plot E: Counts of Tips by Day of Week and Month\")\n\n\n\n\n\n\n\n\n.\n\n## With position fill\n taxi_modifiedB %&gt;% \n   gf_bar(~ month | dow, \n       fill = ~tip,\n       position = \"fill\") %&gt;%\n  gf_labs(\n    title = \"Plot E: Counts of Tips by Day of Week and Month\",\n    subtitle = \"According to ratio and proportions\")\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW an Hour\n\ntaxi_modifiedB %&gt;% \n  gf_bar(~ hour | dow, \n         fill = ~tip) %&gt;%\n  gf_labs(\n    title = \"Plot G: Counts of Tips by Hour and Day of Week\",\n    \n  )\n\n\n\n\n\n\n\n## swapping facets would result in a graph that is harder to grasp\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#your-turn-fertility-data-set",
    "href": "posts/Day 3/index.html#your-turn-fertility-data-set",
    "title": "Day 3: Counts",
    "section": "‘Your Turn’: Fertility Data Set:",
    "text": "‘Your Turn’: Fertility Data Set:\n.\n\nExamining Data:\n\nfertility &lt;- read_csv( file = \"../../Data/Fertility.csv\")\n\nRows: 254654 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): morekids, gender1, gender2, afam, hispanic, other\ndbl (3): rownames, age, work\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfertility%&gt;%glimpse()\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ gender1  &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"female\",…\n$ gender2  &lt;chr&gt; \"female\", \"male\", \"female\", \"female\", \"female\", \"female\", \"ma…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;chr&gt; \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n$ hispanic &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ other    &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n\n## Table\nfertility %&gt;%\n  head(20)%&gt;%\n  kbl(\n   \n    col.names = c(\n      \"SN\", \"More\\n Children\", \"First\\n Child\",\n      \"Second\\n Child\", \"Age\", \"African\\n American\",\"Hispanic\", \"Other\", \"Work\\n in Hours\"\n      \n    ),\n    caption = \"Fertility Dataset\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nFertility Dataset\n\n\nSN\nMore Children\nFirst Child\nSecond Child\nAge\nAfrican American\nHispanic\nOther\nWork in Hours\n\n\n\n\n1\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n2\nno\nfemale\nmale\n30\nno\nno\nno\n30\n\n\n3\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n4\nno\nmale\nfemale\n35\nyes\nno\nno\n0\n\n\n5\nno\nfemale\nfemale\n30\nno\nno\nno\n22\n\n\n6\nno\nmale\nfemale\n26\nno\nno\nno\n40\n\n\n7\nno\nfemale\nmale\n29\nno\nno\nno\n0\n\n\n8\nno\nmale\nmale\n33\nno\nno\nno\n52\n\n\n9\nno\nfemale\nmale\n29\nno\nno\nno\n0\n\n\n10\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n11\nyes\nmale\nmale\n28\nno\nno\nno\n0\n\n\n12\nno\nfemale\nmale\n28\nno\nno\nno\n52\n\n\n13\nno\nmale\nmale\n35\nno\nno\nno\n52\n\n\n14\nno\nfemale\nfemale\n34\nno\nno\nno\n52\n\n\n15\nno\nfemale\nfemale\n32\nno\nno\nno\n8\n\n\n16\nno\nfemale\nmale\n26\nno\nno\nno\n7\n\n\n17\nno\nfemale\nfemale\n34\nno\nno\nno\n0\n\n\n18\nyes\nmale\nfemale\n35\nno\nno\nno\n40\n\n\n19\nyes\nfemale\nfemale\n24\nno\nno\nno\n0\n\n\n20\nno\nfemale\nmale\n33\nno\nno\nno\n0\n\n\n\n\n\n\n\n\n\nfertility %&gt;% inspect()\n\n\ncategorical variables:  \n      name     class levels      n missing\n1 morekids character      2 254654       0\n2  gender1 character      2 254654       0\n3  gender2 character      2 254654       0\n4     afam character      2 254654       0\n5 hispanic character      2 254654       0\n6    other character      2 254654       0\n                                   distribution\n1 no (61.9%), yes (38.1%)                      \n2 male (51.4%), female (48.6%)                 \n3 male (51.3%), female (48.7%)                 \n4 no (94.8%), yes (5.2%)                       \n5 no (92.6%), yes (7.4%)                       \n6 no (94.4%), yes (5.6%)                       \n\nquantitative variables:  \n      name   class min       Q1   median       Q3    max         mean\n1 rownames numeric   1 63664.25 127327.5 190990.8 254654 127327.50000\n2      age numeric  21    28.00     31.0     33.0     35     30.39327\n3     work numeric   0     0.00      5.0     44.0     52     19.01833\n            sd      n missing\n1 73512.422063 254654       0\n2     3.386447 254654       0\n3    21.867277 254654       0\n\n\n.\n.\n\n\nData Dictionary:\nI tried finding where the data set originated, but couldn’t really trace anything back. From what I could make sense of it, these are my assumptions:\n\nThere 2,54,654 participants that make up this dataset, with no missing entries.\n\n\n\nmorekids: Those who want more kids, either yes or no\ngender1: Gender of the first child\ngender2: Gender of the second child\nage: age of the participant in years\nafam: if the participant identifies as African American, either yes or no\nhispanic: if the participant identifies as Hispanic, either yes or no\nother: if the participant identifies as another minority, either yes or no\nwork: the number of hours worked in a week\n\n.\n.\n\n\nMunging Data:\n\nfertility_modified &lt;- fertility%&gt;%\n  mutate(\n    morekids = as_factor(morekids),\n    gender1 = as_factor(gender1),\n    gender2 = as_factor(gender2),\n    afam = as_factor(afam),\n    hispanic = as_factor(hispanic),\n    other = as_factor(other),\n  )\nglimpse(fertility_modified)\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, yes, no, no, no, no, …\n$ gender1  &lt;fct&gt; male, female, male, male, female, male, female, male, female,…\n$ gender2  &lt;fct&gt; female, male, female, female, female, female, male, male, mal…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;fct&gt; no, no, no, yes, no, no, no, no, no, no, no, no, no, no, no, …\n$ hispanic &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ other    &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n\nfertility_modified %&gt;%\n  dplyr::mutate(\n    morekids = factor(morekids,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n    ##\n    gender1 = factor(gender1,\n      levels = c(\"male\", \"female\"),\n      labels = c(\"Male\", \"Female\"),\n      ordered = TRUE\n    ),\n    ##\n    gender2 = factor(gender2,\n      levels = c(\"male\", \"female\"),\n      labels = c(\"Male\", \"Female\"),\n      ordered = TRUE\n    ),\n    ##\n    afam = factor(afam,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n     ##\n    hispanic = factor(hispanic,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n     ##\n    other = factor(other,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    )\n  )\n\n# A tibble: 254,654 × 9\n   rownames morekids gender1 gender2   age afam  hispanic other  work\n      &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;   &lt;ord&gt;   &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt;    &lt;ord&gt; &lt;dbl&gt;\n 1        1 No       Male    Female     27 No    No       No        0\n 2        2 No       Female  Male       30 No    No       No       30\n 3        3 No       Male    Female     27 No    No       No        0\n 4        4 No       Male    Female     35 Yes   No       No        0\n 5        5 No       Female  Female     30 No    No       No       22\n 6        6 No       Male    Female     26 No    No       No       40\n 7        7 No       Female  Male       29 No    No       No        0\n 8        8 No       Male    Male       33 No    No       No       52\n 9        9 No       Female  Male       29 No    No       No        0\n10       10 No       Male    Female     27 No    No       No        0\n# ℹ 254,644 more rows\n\nfertility_modified %&gt;% glimpse()\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, yes, no, no, no, no, …\n$ gender1  &lt;fct&gt; male, female, male, male, female, male, female, male, female,…\n$ gender2  &lt;fct&gt; female, male, female, female, female, female, male, male, mal…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;fct&gt; no, no, no, yes, no, no, no, no, no, no, no, no, no, no, no, …\n$ hispanic &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ other    &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n.\n\n\nQ0: How many participants want more kids?\n\n## Count of those who want more kids\nfertility_modified %&gt;% gf_bar(~morekids) %&gt;%\n  gf_labs(title = \"Plot 0.A: Counts of those who want More Kids\",\n          subtitle = \"fill = none\")\n\n\n\n\n\n\n\n\n.\n\n## Propotion of those who want more kids\nfertility_modified %&gt;% \n  gf_bar(~morekids,\n         fill = ~morekids,\n          position = \"stack\"           ) %&gt;%\n  gf_labs(title = \"Plot 0.B: Proportion of those who want More Kids\",\n          subtitle = \"position = 'fill'\")\n\n\n\n\n\n\n\n\n.\n\nEssentialy I wanted a graph with a single bar, but toggling with ‘position’ doesn’t seem to be doing anything. Why?\nBut moving on:\n\n.\n.\n\n\nQ1: How does the number of working hours affect the likelihood of wanting more kids?\n.\n\n## trying to use gf_col and make the y axis working hours\nfertility_modified %&gt;%\n  drop_na(work) %&gt;% \n  gf_col(work ~ morekids) %&gt;%\n  gf_labs(title = \"Plot 1.A: Those who want More Kids plotted against Working Hours\",\n          subtitle = \"fill = none\")\n\n\n\n\n\n\n\n\n\nnot really the result I was looking for; why is the y axis in a logarithmic scale??\n\n\n## trying with gf_bar and fill instead\nfertility_modified %&gt;% \n  gf_bar(~work,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 1.B: Those who want More Kids by Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\nNow that’s more like it!!\nHow would this look like as a line graph?\n\n.\n\n## work vs morekids line graph\nfertility_modified %&gt;%\n  group_by(work) %&gt;% \n  summarize(morekidsprop = mean(morekids == \"yes\")) %&gt;% \n  gf_line(morekidsprop ~ work)%&gt;%\n  gf_labs(title = \"Plot 1.C:  Proportion of Those who want More Kids by Working Hours\",\n          subtitle = \"line graph\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 0.A: In general, there are more people who do not wan;t kids.\n.\nPlot 1.B: There seems to be a gradual decline in those who want kids as the work hours per week increase\n.\nPlot 1.C: The line graph indicates that there is indeed a decline overall, though it is not a smooth one. When looking at those who work 50 hours a week, the proportion of those who want kids is definitely less than those who work 0 hours a week - However, the same graph indicates that those who work 25 hours a week have a higher proportion of those who want kids in comparison to those who work 23 hours (a lesser amount).\n\nLets plot other variables to see if there are any stronger patterns\n\n\n.\n.\n\n\nQ2: Does age affect the likelihood of wanting more kids?\n.\n\n## plotting age vs morekids\nfertility_modified %&gt;% \n  gf_bar(~age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 2: Those who want More Kids by their age\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\nWow, interestingly, the proportion of those who want more kids increases steadily with age.\n\n.\n.\n\n\nQ3: How do age and work factor into wanting more kids?\n.\n\n## plotting morekids against both age and work\nfertility_modified %&gt;%\n  gf_bar(~ work | age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 3.A: Those who want More Kids by Age and Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n\nThe readability is quite low.. what if i filter the ages to look at individually?\n\n\n## plotting morekids against both age and work - filtered\nfertility_modified %&gt;% \n  filter(age == \"21\")%&gt;%\n  gf_bar(~ work | age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 3.B: Those who are 21 vs More Kids and Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 3.A: Those who are younger seem to have more variation in terms of wanting more kids, that is, it does not seem to be related to their hours of work. Those who are older seem to be of similar opinions across different amounts of work hours, but there is still no established pattern in the relation of the two variables\n.\nPlot 3.B: The missing bars indicate that there is no data at that intersection, i.e, there is nobody in this data set who is 21 years old and works 21 hours a week, and so on.\n\n\n\n.\n.\n\n\nQ4: Do the gender of the existing children play a part in wanting more kids?\n.\n\n## plotting distribution of gender1 and gender 2\nfertility_modified %&gt;% \n  gf_bar(~ gender1 | gender2,\n         fill = ~morekids,\n         position = \"stack\") %&gt;%\n  gf_labs(title = \"Plot 4.A: morekids vs gender\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n\nHow can this graph be made more readable?\nLets try.\n\n\nfertility_modifiedA &lt;- fertility_modified %&gt;%\n  dplyr::mutate(\n    gender = paste( gender1, gender2, sep = \"_\"),\n    gender = factor(gender,\n                    levels = c(\"male_female\", \"male_male\", \"female_male\", \"female_female\", ordered = TRUE ),\n                   labels = c(\"male&female\", \"male&male\",\"male&female\", \"female&female\", ordered = TRUE )))\n \n\nfertility_modifiedA\n\n# A tibble: 254,654 × 10\n   rownames morekids gender1 gender2   age afam  hispanic other  work gender    \n      &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;   &lt;fct&gt;   &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt;     \n 1        1 no       male    female     27 no    no       no        0 male&fema…\n 2        2 no       female  male       30 no    no       no       30 male&fema…\n 3        3 no       male    female     27 no    no       no        0 male&fema…\n 4        4 no       male    female     35 yes   no       no        0 male&fema…\n 5        5 no       female  female     30 no    no       no       22 female&fe…\n 6        6 no       male    female     26 no    no       no       40 male&fema…\n 7        7 no       female  male       29 no    no       no        0 male&fema…\n 8        8 no       male    male       33 no    no       no       52 male&male \n 9        9 no       female  male       29 no    no       no        0 male&fema…\n10       10 no       male    female     27 no    no       no        0 male&fema…\n# ℹ 254,644 more rows\n\n\n\nfertility_modifiedA%&gt;% \n  gf_bar(~morekids,\n         fill = ~gender,\n         position = \"dodge\"\n         )%&gt;%\n  gf_labs(title = \"Plot 4.B: morekids vs gender\",\n          subtitle = \"fill = gender\")\n\n\n\n\n\n\n\n\n\nSuccess!\nNow in looking at proportion:\n\n\nfertility_modifiedA%&gt;% \n  gf_bar(~morekids,\n         fill = ~gender,\n         position = \"fill\"\n         )%&gt;%\n  gf_labs(title = \"Plot 4.C: morekids vs gender\",\n          subtitle = \"fill = gender\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 4.A: The three combinations of gender are the same relative to each other in both ‘yes’ and ‘no’ sections under wanting more kids. in other words, both sections have participants with male and female children as the largest proportion and participants with two female kids making up the smallest proportion\n.\nPlot 4.B: Comparing the proportions, however, can tell us that those who have two kids of the same gender already are more likely (even if by a small margin) to want more kids.\n\n\n\n.\n.\n\n\nQ5. What relation (if any) is there between ethnicity and wanting to have more kids?\n.\n\nfertility_modified %&gt;% \n  gf_bar(~morekids,\n         fill = ~afam,\n                              )%&gt;%  \ngf_labs(\n  title = \"Plot 5.A: Counts of those who want More Kids\",\n  subtitle = \"fill = afam\")\n\n\n\n\n\n\n\n\n.\n\nCalculating proportions:\n\n.\n\nfertility_modified %&gt;%\n  ##\n  group_by(morekids) %&gt;% \n  ##\n  summarise(afam_prop = prop(afam), \n            hispanic_prop = prop(hispanic), \n            other_prop = prop(other), \n            majority_prop = sum(prop(afam),prop(hispanic), prop(other))) \n\n# A tibble: 2 × 5\n  morekids afam_prop hispanic_prop other_prop majority_prop\n  &lt;fct&gt;        &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1 no           0.955         0.942      0.951          2.85\n2 yes          0.938         0.900      0.931          2.77\n\n  ## the proportions added up become more than 100%??\n\n.\n\nLaying the groundwork, splitting up categories:\n\n.\n\nfertility_modifiedB &lt;- fertility_modified %&gt;%\n  group_by(morekids) %&gt;% \n  summarise(\n    afam_prop = mean(afam == \"yes\"),          \n    hispanic_prop = mean(hispanic == \"yes\"),  \n    other_prop = mean(other == \"yes\"),        \n    \n    ## since the proportions were added together and found to be more than one, identifying the overlapping categories\n    \n    afam_hispanic = mean(afam == \"yes\" & hispanic == \"yes\"),\n    afam_other = mean(afam == \"yes\" & other == \"yes\"),\n    hispanic_other = mean(other == \"yes\" & hispanic == \"yes\"),\n    ##\n    \n    only_hispanic = hispanic_prop - sum(hispanic_other, afam_hispanic),\n    \n    only_afam = afam_prop - sum(afam_hispanic, afam_other),\n    \n    only_other = other_prop - sum(afam_other, hispanic_other),\n    \n    majority_prop = mean(afam == \"no\"& hispanic == \"no\"& other == \"no\"),\n    minority_prop = sum(only_hispanic, only_afam, only_other, afam_hispanic, afam_other, hispanic_other))  \n\nglimpse(fertility_modifiedB)\n\nRows: 2\nColumns: 12\n$ morekids       &lt;fct&gt; no, yes\n$ afam_prop      &lt;dbl&gt; 0.04520673, 0.06216980\n$ hispanic_prop  &lt;dbl&gt; 0.05824701, 0.10018367\n$ other_prop     &lt;dbl&gt; 0.04884558, 0.06854672\n$ afam_hispanic  &lt;dbl&gt; 0.0006593044, 0.0009493148\n$ afam_other     &lt;dbl&gt; 0, 0\n$ hispanic_other &lt;dbl&gt; 0.02232760, 0.04191431\n$ only_hispanic  &lt;dbl&gt; 0.03526011, 0.05732004\n$ only_afam      &lt;dbl&gt; 0.04454743, 0.06122049\n$ only_other     &lt;dbl&gt; 0.02651799, 0.02663241\n$ majority_prop  &lt;dbl&gt; 0.8706876, 0.8119634\n$ minority_prop  &lt;dbl&gt; 0.1293124, 0.1880366\n\n\n\n## Attempting to make my own data set with simply the propotions calculated after summary\nfertilitytwo &lt;- readxl::read_excel(\"../../Data/fertilitytwo.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n\nfertilitytwo\n\n# A tibble: 3 × 11\n  ...1     ethnicity       ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10 ...11\n  &lt;chr&gt;    &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 morekids afam_prop       hisp… othe… afam… afam… hisp… only… only… only… majo…\n2 no       4.520673000000… 5.82… 4.88… 6.59… 0     2.23… 3.52… 4.45… 2.65… 0.12…\n3 yes      6.216979999999… 0.10… 6.85… 9.49… 0     4.19… 5.73… 6.12… 2.66… 0.18…\n\n## Quickly realising that won't work ;-;\n\n.\n\nIdentifying the proportion of the minority, where the majority is defined by those who do not identify as Hispanic, African American or Other.\n\n.\n\n## majority vs minority\nfertility_modifiedB %&gt;%\n  select(\n    morekids, majority_prop, minority_prop\n  ) %&gt;%\n  pivot_longer(cols = c(majority_prop, minority_prop),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;%\n  mutate(\n          ethnicity = factor(ethnicity,\n                              levels = c( \"majority_prop\", \"minority_prop\"))\n               ) %&gt;% \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"fill\") %&gt;%\n  gf_labs(\n    title = \"Plot 5.B: Ethnicity: majority and minority vs morekids\",\n    subtitle = \"position = fill\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## trying pivot longer \nfertility_modifiedB %&gt;%select(-afam_prop, -hispanic_prop,-other_prop, -majority_prop)%&gt;%\n  pivot_longer(cols = c(only_hispanic, only_afam, only_other, afam_hispanic, hispanic_other),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;% \n  mutate(\n                 ethnicity = factor(ethnicity,\n                                    levels = c( \"only_afam\", \"afam_hispanic\", \"only_hispanic\", \"hispanic_other\", \"only_other\", ordered = TRUE ))\n               ) %&gt;% \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"dodge\") %&gt;%\n  gf_labs(\n    title = \"Plot 5.C: minority ethnicity vs morekids\",\n    subtitle = \"position = dodge\"\n  )\n\n\n\n\n\n\n\n\n\n## PROPORTION\nfertility_modifiedB %&gt;%select(-afam_prop, -hispanic_prop,-other_prop, -majority_prop)%&gt;%\n  pivot_longer(cols = c(only_hispanic, only_afam, only_other, afam_hispanic, hispanic_other),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;% mutate(\n                 ethnicity = factor(ethnicity,\n                                    levels = c( \"only_afam\", \"afam_hispanic\", \"only_hispanic\", \"hispanic_other\", \"only_other\", ordered = TRUE ))\n               ) %&gt;%\n   \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"fill\")%&gt;%\n  gf_labs(\n    title = \"Plot 5.D: minority ethnicity vs morekids\",\n    subtitle = \"position = fill\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from graphs:\n\nPlot 5.B: Minority ethnicities have a higher proportion of those who want more kids.\n.\nPlot 5.C: There is no strong pattern to be concerned with in this plot, as some categories bleed into one another.\n.\nPlot 5.D: Those who identify as Hispanic make up for most of those in the minority ethnicity category who want to have more kids, even if by a small margin. The ‘African American Only’ and ‘Other Only’ categories are ever so slightly smaller than their proportion in the ‘no’ more kids category.\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#conclusion",
    "href": "posts/Day 3/index.html#conclusion",
    "title": "Day 3: Counts",
    "section": "Conclusion:",
    "text": "Conclusion:"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html",
    "href": "posts/Day 1 hello-world/index.html",
    "title": "Day 1: Hello Universe",
    "section": "",
    "text": "hello universe, hello world :D\n\n\nCreating Posts:\n\nNavigate to “Data-As-Material-Class-Folder&gt;posts” and create a new folder\nlets name the folder “Day X”\nThen proceed to “File&gt;New File&gt;Quarto Document”\nTitle and Author your document\nSave the new document IN “DAY X” as index.qmd EACH TIME.\n\nThere can be only 1 index file in each folder!"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html#introduction",
    "href": "posts/Day 1 hello-world/index.html#introduction",
    "title": "Day 1: Hello Universe",
    "section": "",
    "text": "hello universe, hello world :D\n\n\nCreating Posts:\n\nNavigate to “Data-As-Material-Class-Folder&gt;posts” and create a new folder\nlets name the folder “Day X”\nThen proceed to “File&gt;New File&gt;Quarto Document”\nTitle and Author your document\nSave the new document IN “DAY X” as index.qmd EACH TIME.\n\nThere can be only 1 index file in each folder!"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html#my-first-pieces-of-r-code",
    "href": "posts/Day 1 hello-world/index.html#my-first-pieces-of-r-code",
    "title": "Day 1: Hello Universe",
    "section": "My First Piece(s) of R Code",
    "text": "My First Piece(s) of R Code\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(babynames)\n\n\nLets look at every baby name from the US starting all the way from…\n\n\n…..1880?!?!?\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n\n\n\n\nHow many “Aditi”s have existed?\n\nbabynames %&gt;% filter(name ==\"Aditi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nWhat about “Adhithi”?\n\nbabynames %&gt;% filter(name == \"Adhithi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\n“Adithi”?\n\nbabynames %&gt;% filter(name == \"Adithi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nor “Adhiti”?\n\nbabynames %&gt;% filter(name == \"Adhiti\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nIn compiling them all into a single graph….\n\nbabynames %&gt;% filter(name == \"Aditi\"|name == \"Adhithi\"|name == \"Adithi\"|name == \"Adhiti\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nWOAHH!!\n\n\nAlthough, my own name has some dissapointing results :(\n\nbabynames %&gt;% filter(name == \"Vasantha\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nMy mother’s name seems to be faring better than mine, across the world..\n\nbabynames %&gt;% filter(name == \"Meena\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nAs are her counterparts!!\n\nbabynames %&gt;% filter(name == \"Mina\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nAnd together…\n\nbabynames %&gt;% filter(name == \"Meena\"|name == \"Mina\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\n:)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data-as-Material-Class",
    "section": "",
    "text": "A2: Case Study 2\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA2 - Case Study 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA2: Case Study 1\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 1: Hello Universe\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 2: Summaries\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 3: Counts\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 4: Quantities\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 5: Groups\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 5: Change\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 6 - Stats Theory\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Day 2/index.html",
    "href": "posts/Day 2/index.html",
    "title": "Day 2: Summaries",
    "section": "",
    "text": "How do we make data sets more readable? How can we decide how to group variables and compare them against each other in terms of what we are using the data for? This is my journey of exploring these questions with the help of Data Summaries.\n\n\n\nInstall and call packages to the document\nSelect and call chosen data set\nExamining Data: Glimpse, Inspect, Skim and their different syntax\nData Munging: mutate(), as_factor(), group_by() and summarise()\nExploring babynames data set\nExploring Startrek data set\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(babynames)\n\n.\n.\n\n\n\nInstalling packages makes them available to all documents created in the future. {syntax: install.packages(““)}\nIn each document however, one must call on the packages using {library()} to “activate” them.\nDon’t forget to add { #| label: setup } in the first code chunk when calling the packages\nHave only one quarto document open in one window, as R treats a session as a single data pool and can pull libraries across documents (which could complicate things later.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#introduction",
    "href": "posts/Day 2/index.html#introduction",
    "title": "Day 2: Summaries",
    "section": "",
    "text": "How do we make data sets more readable? How can we decide how to group variables and compare them against each other in terms of what we are using the data for? This is my journey of exploring these questions with the help of Data Summaries.\n\n\n\nInstall and call packages to the document\nSelect and call chosen data set\nExamining Data: Glimpse, Inspect, Skim and their different syntax\nData Munging: mutate(), as_factor(), group_by() and summarise()\nExploring babynames data set\nExploring Startrek data set\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(babynames)\n\n.\n.\n\n\n\nInstalling packages makes them available to all documents created in the future. {syntax: install.packages(““)}\nIn each document however, one must call on the packages using {library()} to “activate” them.\nDon’t forget to add { #| label: setup } in the first code chunk when calling the packages\nHave only one quarto document open in one window, as R treats a session as a single data pool and can pull libraries across documents (which could complicate things later.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-the-mpg-data-set",
    "href": "posts/Day 2/index.html#looking-at-the-mpg-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at the ‘mpg’ Data Set:",
    "text": "Looking at the ‘mpg’ Data Set:\n\nmpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\n.\n\nmpg %&gt;%\n  head(10) %&gt;%\n  kbl(\n    # add Human Readable column names\n    col.names = c(\n      \"Manufacturer\", \"Model\", \"Engine\\nDisplacement\",\n      \"Model\\n Year\", \"Cylinders\", \"Transmission\",\n      \"Drivetrain\", \"City\\n Mileage\", \"Highway\\n Mileage\",\n      \"Fuel\", \"Class\\nOf\\nVehicle\"\n    ),\n    caption = \"MPG Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nMPG Dataset\n\n\nManufacturer\nModel\nEngine Displacement\nModel Year\nCylinders\nTransmission\nDrivetrain\nCity Mileage\nHighway Mileage\nFuel\nClass Of Vehicle\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n.\n.\n\nNotes\n\nkbl - from the kableExtra package\nmakes the data more human readable\nhead(10) indicates the table will show 10 rows.\n‘\\n’ acts as line break\nStyling (kable_styling):\n\nThe table is styled using kable_styling with several bootstrap_options for appearance:\n\n“striped”: Alternating background colors on rows.\n“hover”: Highlights rows when hovering over them.\n“condensed”: Reduces the row height to make the table more compact.\n“responsive”: Ensures the table adjusts to different screen sizes.\n\nfull_width = F ensures that the table is not stretched to fill the entire width of the page but rather centered, as specified by position = “center”.\n\n\n\n.\n.\n\nUsing Glimpse\n\nglimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\nTesting different syntax:\n\nmpg %&gt;% dplyr::glimpse()\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n.\n\nNotes\n\nsyntax essentially boils down to personal preference and readability of code.\n\n\n.\n\n\n\nUsing Inspect\n\ninspect(mpg)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n\n\n.\n\n\nUsing Skim\n\nskimr::skim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\n\nTesting different syntax:\n\nskim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#data-munging---mutating-data-according-to-your-intent",
    "href": "posts/Day 2/index.html#data-munging---mutating-data-according-to-your-intent",
    "title": "Day 2: Summaries",
    "section": "Data Munging - Mutating data according to your intent:",
    "text": "Data Munging - Mutating data according to your intent:\n\nmpg_modified &lt;- mpg %&gt;%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;fct&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;fct&gt; auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          &lt;fct&gt; f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;fct&gt; p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        &lt;fct&gt; compact, compact, compact, compact, compact, compact, com…\n\n\n\ninspect(mpg_modified)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3          cyl    factor      4 234       0\n4        trans    factor     10 234       0\n5          drv    factor      3 234       0\n6           fl    factor      5 234       0\n7        class    factor      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 4 (34.6%), 6 (33.8%), 8 (29.9%) ...          \n4 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n5 f (45.3%), 4 (44%), r (10.7%)                \n6 r (71.8%), p (22.2%), e (3.4%) ...           \n7 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n4   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n\n\n.\n\nNotes\n\nWhy make characters into factors? it better organizes the data in hand for plotting.\nSometimes qual data such as year and date are considered as quant data due to their numeric content. These variables can be turned into qual data through munging.\n\n\n.\n\nGrouping by Qualitative Variables\nHighway milage grouped by cylinder type:\n\nmpg_modified %&gt;%\n  group_by(cyl) %&gt;%\n  summarize(average_hwy = mean(hwy), count = n())\n\n# A tibble: 4 × 3\n  cyl   average_hwy count\n  &lt;fct&gt;       &lt;dbl&gt; &lt;int&gt;\n1 4            28.8    81\n2 5            28.8     4\n3 6            22.8    79\n4 8            17.6    70\n\n\nThe average milage of cars based on the cylinder type.\n\nmpg_modified %&gt;%\n  group_by(cyl, fl) %&gt;%\n  summarize(average_hwy = mean(hwy), count = n())\n\n`summarise()` has grouped output by 'cyl'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 13 × 4\n# Groups:   cyl [4]\n   cyl   fl    average_hwy count\n   &lt;fct&gt; &lt;fct&gt;       &lt;dbl&gt; &lt;int&gt;\n 1 4     p            27.8    22\n 2 4     r            28.3    55\n 3 4     d            43       3\n 4 4     c            36       1\n 5 5     r            28.8     4\n 6 6     p            25.3    17\n 7 6     r            22.2    60\n 8 6     e            17       1\n 9 6     d            22       1\n10 8     p            20.8    13\n11 8     r            17.5    49\n12 8     e            12.7     7\n13 8     d            17       1\n\n\n.\nThere should be 20 columns, but only there are only 8 as certain combinations of cars don’t exisit in this data set.\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-the-babynames-data-set",
    "href": "posts/Day 2/index.html#looking-at-the-babynames-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at the ‘babynames’ Data Set:",
    "text": "Looking at the ‘babynames’ Data Set:\n\nglimpse(babynames)\n\nRows: 1,924,665\nColumns: 5\n$ year &lt;dbl&gt; 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", …\n$ name &lt;chr&gt; \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    &lt;int&gt; 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop &lt;dbl&gt; 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n\n\n\n## readable table for dataset babynames\nbabynames %&gt;%\n  head(20) %&gt;%\n  kbl(\n    \n    col.names = c(\n      \"Year\", \"Sex\", \"Name\",\n      \"Count\", \"Proportion\"\n    ),\n    caption = \"babynames Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nbabynames Dataset\n\n\nYear\nSex\nName\nCount\nProportion\n\n\n\n\n1880\nF\nMary\n7065\n0.0723836\n\n\n1880\nF\nAnna\n2604\n0.0266790\n\n\n1880\nF\nEmma\n2003\n0.0205215\n\n\n1880\nF\nElizabeth\n1939\n0.0198658\n\n\n1880\nF\nMinnie\n1746\n0.0178884\n\n\n1880\nF\nMargaret\n1578\n0.0161672\n\n\n1880\nF\nIda\n1472\n0.0150812\n\n\n1880\nF\nAlice\n1414\n0.0144870\n\n\n1880\nF\nBertha\n1320\n0.0135239\n\n\n1880\nF\nSarah\n1288\n0.0131961\n\n\n1880\nF\nAnnie\n1258\n0.0128887\n\n\n1880\nF\nClara\n1226\n0.0125608\n\n\n1880\nF\nElla\n1156\n0.0118437\n\n\n1880\nF\nFlorence\n1063\n0.0108908\n\n\n1880\nF\nCora\n1045\n0.0107064\n\n\n1880\nF\nMartha\n1040\n0.0106552\n\n\n1880\nF\nLaura\n1012\n0.0103683\n\n\n1880\nF\nNellie\n995\n0.0101942\n\n\n1880\nF\nGrace\n982\n0.0100610\n\n\n1880\nF\nCarrie\n949\n0.0097229\n\n\n\n\n\n\n\n\n\ninspect(babynames)\n\n\ncategorical variables:  \n  name     class levels       n missing\n1  sex character      2 1924665       0\n2 name character  97310 1924665       0\n                                   distribution\n1 F (59.1%), M (40.9%)                         \n2 Francis (0%), James (0%) ...                 \n\nquantitative variables:  \n  name   class      min        Q1    median        Q3          max         mean\n1 year numeric 1.88e+03 1.951e+03 1.985e+03 2.003e+03 2.017000e+03 1.974851e+03\n2    n integer 5.00e+00 7.000e+00 1.200e+01 3.200e+01 9.968600e+04 1.808733e+02\n3 prop numeric 2.26e-06 3.870e-06 7.300e-06 2.288e-05 8.154561e-02 1.362963e-04\n            sd       n missing\n1 3.402948e+01 1924665       0\n2 1.533337e+03 1924665       0\n3 1.151693e-03 1924665       0\n\n\n\n## transforming year from a quant variable to a qual variable\nbn_modone &lt;- babynames %&gt;% \n  mutate(\n    year = as_factor(year),\n    name = as_factor(name)\n  )\n\n\n## grouping by sex to see how many names fall under each category totally (playing around with androgenous names)\n\nbn_modtwo &lt;- bn_modone %&gt;%\n  group_by(sex) %&gt;% \n  summarise(n_names = count(sex), Krishna = count(name == \"Krishna\"), Sam = count(name == \"Sam\"),Samuel = count(name == \"Samuel\"), Samantha = count(name == \"Samantha\"), Alex = count(name == \"Alex\"), Alexander = count(name == \"Alexander\"), Alexis = count(name == \"Alexis\"), Kai = count(name == \"Kai\"), Liza = count(name == \"Liza\"), Keethi_Keerti_kirthi_kirti = count(name == \"Keerthi\" | name == \"Kirti\"|name == \"Keerti\"|name == \"Kirthi\"), Manal = count(name == \"Manal\"))\n\nglimpse(bn_modtwo)\n\nRows: 2\nColumns: 13\n$ sex                        &lt;chr&gt; \"F\", \"M\"\n$ n_names                    &lt;int&gt; 1138293, 786372\n$ Krishna                    &lt;int&gt; 58, 56\n$ Sam                        &lt;int&gt; 115, 138\n$ Samuel                     &lt;int&gt; 113, 138\n$ Samantha                   &lt;int&gt; 138, 50\n$ Alex                       &lt;int&gt; 99, 138\n$ Alexander                  &lt;int&gt; 88, 138\n$ Alexis                     &lt;int&gt; 78, 110\n$ Kai                        &lt;int&gt; 62, 72\n$ Liza                       &lt;int&gt; 138, 2\n$ Keethi_Keerti_kirthi_kirti &lt;int&gt; 35, 0\n$ Manal                      &lt;int&gt; 50, 0\n\n\n\n## trying to understand what exactly count(sex) means, as there are 'M' and 'F' both...\nbn_modthree &lt;- bn_modone %&gt;%\n  group_by(year) %&gt;% \n  summarise(n_names = count(sex))\n\nglimpse(bn_modthree)\n\nRows: 138\nColumns: 2\n$ year    &lt;fct&gt; 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 18…\n$ n_names &lt;int&gt; 942, 938, 1028, 1054, 1172, 1197, 1282, 1306, 1474, 1479, 1534…\n\n\n.\n\nNotes\n\nWhat if I wanted to make ‘year’ into intervals of decades/centuries/half centuries and then make them into factors?\nArvind says “console&gt; ? case_when&gt; enter”\nWhat does the numerical output of count(sex) mean when grouped by year? Is it the count of only one sex? Or Both?\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-star-trek-data-set",
    "href": "posts/Day 2/index.html#looking-at-star-trek-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at Star Trek Data Set:",
    "text": "Looking at Star Trek Data Set:\n\nstar_trek_data &lt;- read_csv(\"../../Data/star_trek_books.csv\")\nstar_trek_data\n\n\nstar_trek_data &lt;- read_delim(file = \"../../Data/star_trek_books.csv\", delim = \";\")\n\nRows: 783 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (7): title, author, publisher, identifier, series, subseries, dedication\ndbl  (3): nchap, nword, nchar\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstar_trek_data\n\n# A tibble: 783 × 11\n   title    author date       publisher identifier series subseries nchap  nword\n   &lt;chr&gt;    &lt;chr&gt;  &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 Star Tr… Alan … 2009-05-12 Simon an… 1439163391 AV     &lt;NA&gt;         18  77035\n 2 Starfle… Rick … 2010-11-02 Simon Sp… 978144241… AV     Starflee…    14  40129\n 3 Starfle… Rudy … 2010-12-28 Simon Sp… 978144241… AV     Starflee…    31  52547\n 4 Starfle… Rick … 2011-06-28 Simon Sp… 978144241… AV     Starflee…    13  39495\n 5 Starfle… Alan … 2012-06-26 Simon Sp… 978144242… AV     Starflee…    30  62030\n 6 Star Tr… Alan … 2013-05-21 Gallery … 978147671… AV     &lt;NA&gt;         17  77438\n 7 Captain… James… 1998-06-01 Pocket B… 978143910… CT     &lt;NA&gt;         21  95110\n 8 Captain… Macke… 1998-10-01 Pocket B… 978074345… CT     &lt;NA&gt;         26  76392\n 9 Captain… Chris… 1998-10-01 Pocket B… 978143910… CT     &lt;NA&gt;         34  78678\n10 The Cap… John … 2000-03-01 Pocket B… 978074340… CT     &lt;NA&gt;        176 436682\n# ℹ 773 more rows\n# ℹ 2 more variables: nchar &lt;dbl&gt;, dedication &lt;chr&gt;\n\n\n.\n\nNotes\n\n.csv files read commas as separators.\nWhen faced with any other kind of separators, use “read_delim”, default for that is semicolon\n\n\n.\n\nstar_trek_data %&gt;% glimpse()\n\nRows: 783\nColumns: 11\n$ title      &lt;chr&gt; \"Star Trek: Star Trek Movie Tie-In\", \"Starfleet Academy: Th…\n$ author     &lt;chr&gt; \"Alan Dean Foster\", \"Rick Barba\", \"Rudy Josephs\", \"Rick Bar…\n$ date       &lt;date&gt; 2009-05-12, 2010-11-02, 2010-12-28, 2011-06-28, 2012-06-26…\n$ publisher  &lt;chr&gt; \"Simon and Schuster\", \"Simon Spotlight\", \"Simon Spotlight\",…\n$ identifier &lt;chr&gt; \"1439163391\", \"9781442414259\", \"9781442414242\", \"9781442414…\n$ series     &lt;chr&gt; \"AV\", \"AV\", \"AV\", \"AV\", \"AV\", \"AV\", \"CT\", \"CT\", \"CT\", \"CT\",…\n$ subseries  &lt;chr&gt; NA, \"Starfleet Academy\", \"Starfleet Academy\", \"Starfleet Ac…\n$ nchap      &lt;dbl&gt; 18, 14, 31, 13, 30, 17, 21, 26, 34, 176, 9, 12, 36, 23, 44,…\n$ nword      &lt;dbl&gt; 77035, 40129, 52547, 39495, 62030, 77438, 95110, 76392, 786…\n$ nchar      &lt;dbl&gt; 460097, 238567, 295829, 233095, 349595, 537472, 554915, 424…\n$ dedication &lt;chr&gt; \"For Bjo and John TrimbleBecause hospitality is forever and…\n\n\n\nMaking an easy-to-read Table:\n\n## removig the last coloumn for the sake of readability\nstartrek_data_mod &lt;- star_trek_data %&gt;%\n  select(-dedication)\n\n## formatting table for better readability\nstartrek_data_mod %&gt;%\n  head(20) %&gt;%\n  kbl(\n    # add Human Readable column names\n    col.names = c(\n      \"Title\", \"Author\", \"Date\",\n      \"Publisher\", \"Identifier\", \"Series\",\n      \"Subseries\", \"Number\\n of\\n Chapters\", \"Number\\n of\\n Words\",\n      \"Number\\n of\\n Characters\"\n    ),\n    caption = \"Startrek Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nStartrek Dataset\n\n\nTitle\nAuthor\nDate\nPublisher\nIdentifier\nSeries\nSubseries\nNumber of Chapters\nNumber of Words\nNumber of Characters\n\n\n\n\nStar Trek: Star Trek Movie Tie-In\nAlan Dean Foster\n2009-05-12\nSimon and Schuster\n1439163391\nAV\nNA\n18\n77035\n460097\n\n\nStarfleet Academy: The Delta Anomaly\nRick Barba\n2010-11-02\nSimon Spotlight\n9781442414259\nAV\nStarfleet Academy\n14\n40129\n238567\n\n\nStarfleet Academy: The Edge\nRudy Josephs\n2010-12-28\nSimon Spotlight\n9781442414242\nAV\nStarfleet Academy\n31\n52547\n295829\n\n\nStarfleet Academy: The Gemini Agent\nRick Barba\n2011-06-28\nSimon Spotlight\n9781442414266\nAV\nStarfleet Academy\n13\n39495\n233095\n\n\nStarfleet Academy: The Assassination Game\nAlan Gratz\n2012-06-26\nSimon Spotlight\n9781442420601\nAV\nStarfleet Academy\n30\n62030\n349595\n\n\nStar Trek: Into Darkness\nAlan Dean Foster\n2013-05-21\nGallery Books\n9781476716510\nAV\nNA\n17\n77438\n537472\n\n\nCaptain's Table 1: War Dragons\nJames T. Hirk\n1998-06-01\nPocket Books\n9781439108512\nCT\nNA\n21\n95110\n554915\n\n\nCaptain's Table 5: Once Burned\nMackenzie\n1998-10-01\nPocket Books\n9780743455787\nCT\nNA\n26\n76392\n424689\n\n\nCaptain's Table 6: Where Sea Meets Sky\nChristopher Pike\n1998-10-01\nPocket Books\n9781439108536\nCT\nNA\n34\n78678\n443307\n\n\nThe Captain's Table 1-6 (Omnibus)\nJohn J. Ordover and Dean Wesley Smith\n2000-03-01\nPocket Books\n9780743406703\nCT\nNA\n176\n436682\n2466047\n\n\nTales from the Captain's Table\nKeith R.A. Decandido\n2005-06-14\nPocket Books\n9781416510284\nCT\nNA\n9\n101577\n588475\n\n\nEmissary\nJ. M. Dillard\n1993-02-01\nPocket Books\n0743412206\nDS9\nNA\n12\n60903\n368047\n\n\nThe Siege\nPeter David\n1993-05-01\nSimon and Schuster\n9780743412216\nDS9\nNA\n36\n73075\n438146\n\n\nBloodletter\nK.W. Jeter\n1993-08-01\nPocket Books\n9780743412223\nDS9\nNA\n23\n69797\n404217\n\n\nThe Big Game\nSandy Schofield\n1993-11-01\nPocket Books\n9780743412230\nDS9\nNA\n44\n62085\n348583\n\n\nFallen Heroes\nDafydd Ab Hugh\n1994-02-01\nPocket Books\n9780671041144\nDS9\nNA\n20\n82087\n480570\n\n\nBetrayal\nLois Tilton\n1994-05-01\nSimon and Schuster\n9780743420341\nDS9\nNA\n30\n69441\n411458\n\n\nWarchild\nEsther Friesner\n1994-09-01\nSimon and Schuster\n9780743420389\nDS9\nNA\n17\n83047\n467694\n\n\nThe Search\nDiane Carey\n1994-10-01\nSimon and Schuster\n9780743420815\nDS9\nNA\n19\n62364\n356249\n\n\nAntimatter\nJohn Vornholt\n1994-11-01\nSimon and Schuster\n9780743420396\nDS9\nNA\n16\n70493\n415964\n\n\n\n\n\n\n\n\n\nstar_trek_data %&gt;% inspect()\n\n\ncategorical variables:  \n        name     class levels   n missing\n1      title character    781 783       0\n2     author character    277 783       0\n3  publisher character     21 772      11\n4 identifier character    783 783       0\n5     series character     28 783       0\n6  subseries character     15  56     727\n7 dedication character    372 372     411\n                                   distribution\n1 Kobayashi Maru (0.3%), Warped (0.3%) ...     \n2 Peter David (4.9%) ...                       \n3 Pocket Books (67.4%) ...                     \n4  (%) ...                                     \n5 TOS (26.8%), TNG (18.6%), SCE (10.7%) ...    \n6 Typhon Pact (16.1%) ...                      \n7  (%) ...                                     \n\nDate variables:  \n  name class      first       last min_diff max_diff   n missing\n1 date  Date 1967-01-01 2017-11-28   0 days 485 days 783       0\n\nquantitative variables:  \n   name   class  min     Q1 median       Q3     max         mean           sd\n1 nchap numeric    1     13     21     29.0     373     24.58816     21.61247\n2 nword numeric  782  52500  70730  90994.5  687175  76190.07535  52453.34633\n3 nchar numeric 4337 310520 415964 555866.5 4484069 461822.36271 326062.44928\n    n missing\n1 760      23\n2 783       0\n3 783       0\n\n\n\nstar_trek_data %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n783\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n7\n\n\nDate\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntitle\n0\n1.00\n4\n58\n0\n781\n0\n\n\nauthor\n0\n1.00\n2\n138\n0\n277\n0\n\n\npublisher\n11\n0.99\n7\n26\n0\n21\n0\n\n\nidentifier\n0\n1.00\n10\n41\n0\n783\n0\n\n\nseries\n0\n1.00\n2\n6\n0\n28\n0\n\n\nsubseries\n727\n0.07\n4\n23\n0\n15\n0\n\n\ndedication\n411\n0.48\n98\n97953\n0\n372\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ndate\n0\n1\n1967-01-01\n2017-11-28\n2001-12-14\n577\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nnchap\n23\n0.97\n24.59\n21.61\n1\n13\n21\n29.0\n373\n▇▁▁▁▁\n\n\nnword\n0\n1.00\n76190.08\n52453.35\n782\n52500\n70730\n90994.5\n687175\n▇▁▁▁▁\n\n\nnchar\n0\n1.00\n461822.36\n326062.45\n4337\n310520\n415964\n555866.5\n4484069\n▇▁▁▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#munging-star-trek-data",
    "href": "posts/Day 2/index.html#munging-star-trek-data",
    "title": "Day 2: Summaries",
    "section": "Munging Star Trek Data:",
    "text": "Munging Star Trek Data:\n\n## grouping by publisher to understand the average of certain quant variables\nstartrek_munged &lt;- star_trek_data %&gt;%\n  group_by(publisher) %&gt;%\n  summarize(avg_nchap = mean(nchap), avg_nw = mean(nword), avg_nchar = mean(nchar), count = n())\n\n## creating a readable table for this summary\nstartrek_munged %&gt;%\n  head(20) %&gt;%\n  kbl(\n    col.names = c(\n      \"Publisher\",\"Average\\n #of\\n Chapters\", \"Average\\n #of\\n Words\", \"Average\\n #of\\n Characters\",\n      \"Total\\n #of\\n Books\"\n    ),\n    caption = \"Startrek Dataset - Munged\"\n  ) %&gt;%\n  column_spec(1 , border_right = TRUE) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nStartrek Dataset - Munged\n\n\nPublisher\nAverage #of Chapters\nAverage #of Words\nAverage #of Characters\nTotal #of Books\n\n\n\n\nAbrams Publications\n373.00000\n132041.00\n898671.0\n1\n\n\nAladdin\n11.25000\n23800.71\n139129.2\n28\n\n\nAladdin Paperbacks\n24.00000\n69076.00\n390799.0\n1\n\n\nAmereon Ltd\nNA\n40804.50\n233809.0\n2\n\n\nBantam Books\nNA\n50225.20\n287110.7\n20\n\n\nDemco Media\n6.50000\n23310.50\n134614.0\n2\n\n\nDk Publishing\n1.00000\n119459.00\n1094928.0\n1\n\n\nElysium\n21.00000\n98779.00\n578010.0\n1\n\n\nGallery Books\n34.13333\n93417.67\n613744.8\n15\n\n\nHarlequin\n27.00000\n63453.00\n372682.0\n1\n\n\nInsight Editions\n43.00000\n32915.00\n239389.5\n2\n\n\nKlingon Language Institute\n14.00000\n58231.00\n417503.0\n1\n\n\nKrause Publications\nNA\n58073.00\n390642.0\n1\n\n\nPocket Books\nNA\n79750.91\n485790.7\n520\n\n\nSimon Pulse\n32.00000\n76558.00\n450457.0\n1\n\n\nSimon Spotlight\n22.00000\n48550.25\n279271.5\n4\n\n\nSimon and Schuster\nNA\n76054.30\n450020.9\n159\n\n\nSpectra\nNA\n67716.00\n391634.3\n3\n\n\nSt. Martin's Press\nNA\n273792.50\n1627148.0\n2\n\n\nTitan Books\nNA\n69734.67\n429937.3\n6\n\n\n\n\n\n\n\n\n\n##star_trek_data %&gt;% \n  ##group_by(publisher) %&gt;% \n  ##gitsummarize(author_count = sum(author))\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#conclusion",
    "href": "posts/Day 2/index.html#conclusion",
    "title": "Day 2: Summaries",
    "section": "Conclusion:",
    "text": "Conclusion:"
  },
  {
    "objectID": "posts/Day 4/index.html",
    "href": "posts/Day 4/index.html",
    "title": "Day 4: Quantities",
    "section": "",
    "text": "gf_histogram()\n\nbins\n\ngf_facet_wrap()\n\nscales\nnrow\n\ngf_themes()\nfavestats()\ndrop_na()\ncrosstable()\ncrosstable::as_flextable()\narrange(desc()) or arrange(asec())\nfilter( df %in% c())\nslice_max()\n\norder_by\n\nleft_join()\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(crosstable)\n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#setting-up",
    "href": "posts/Day 4/index.html#setting-up",
    "title": "Day 4: Quantities",
    "section": "",
    "text": "gf_histogram()\n\nbins\n\ngf_facet_wrap()\n\nscales\nnrow\n\ngf_themes()\nfavestats()\ndrop_na()\ncrosstable()\ncrosstable::as_flextable()\narrange(desc()) or arrange(asec())\nfilter( df %in% c())\nslice_max()\n\norder_by\n\nleft_join()\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(crosstable)\n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#looking-dataset-diamonds",
    "href": "posts/Day 4/index.html#looking-dataset-diamonds",
    "title": "Day 4: Quantities",
    "section": "Looking Dataset “diamonds”:",
    "text": "Looking Dataset “diamonds”:\n.\n\nNotes:\n\nbins = the number of classes\n\nthe y-axis changes when you change the bins as more the number of class groups, less the number of units within that group &gt; count scale changes\nif the number of bins = the number of rows, it would result in a line graph with the area shaded\n\nalpha = opacity, valuable for overlapping values\ngf_facet_wrap = splits the levels of a variable into their respective graphs\nnrow = changes the scale on the y axis\nfree_y = changes the scales on each graph on gf_facet_wrap\n\n\n.\n\ndiamonds\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\n.\n\ndiamonds %&gt;% glimpse()\n\nRows: 53,940\nColumns: 10\n$ carat   &lt;dbl&gt; 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     &lt;ord&gt; Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   &lt;ord&gt; E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity &lt;ord&gt; SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   &lt;dbl&gt; 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   &lt;dbl&gt; 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   &lt;int&gt; 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       &lt;dbl&gt; 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       &lt;dbl&gt; 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       &lt;dbl&gt; 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n\n\n.\n\ndiamonds %&gt;% inspect()\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     cut ordered      5 53940       0\n2   color ordered      7 53940       0\n3 clarity ordered      8 53940       0\n                                   distribution\n1 Ideal (40%), Premium (25.6%) ...             \n2 G (20.9%), E (18.2%), F (17.7%) ...          \n3 SI1 (24.2%), VS2 (22.7%), SI2 (17%) ...      \n\nquantitative variables:  \n   name   class   min     Q1  median      Q3      max         mean           sd\n1 carat numeric   0.2   0.40    0.70    1.04     5.01    0.7979397    0.4740112\n2 depth numeric  43.0  61.00   61.80   62.50    79.00   61.7494049    1.4326213\n3 table numeric  43.0  56.00   57.00   59.00    95.00   57.4571839    2.2344906\n4 price integer 326.0 950.00 2401.00 5324.25 18823.00 3932.7997219 3989.4397381\n5     x numeric   0.0   4.71    5.70    6.54    10.74    5.7311572    1.1217607\n6     y numeric   0.0   4.72    5.71    6.54    58.90    5.7345260    1.1421347\n7     z numeric   0.0   2.91    3.53    4.04    31.80    3.5387338    0.7056988\n      n missing\n1 53940       0\n2 53940       0\n3 53940       0\n4 53940       0\n5 53940       0\n6 53940       0\n7 53940       0\n\n\n.\n\ndiamonds %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n53940\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncut\n0\n1\nTRUE\n5\nIde: 21551, Pre: 13791, Ver: 12082, Goo: 4906\n\n\ncolor\n0\n1\nTRUE\n7\nG: 11292, E: 9797, F: 9542, H: 8304\n\n\nclarity\n0\n1\nTRUE\n8\nSI1: 13065, VS2: 12258, SI2: 9194, VS1: 8171\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ncarat\n0\n1\n0.80\n0.47\n0.2\n0.40\n0.70\n1.04\n5.01\n▇▂▁▁▁\n\n\ndepth\n0\n1\n61.75\n1.43\n43.0\n61.00\n61.80\n62.50\n79.00\n▁▁▇▁▁\n\n\ntable\n0\n1\n57.46\n2.23\n43.0\n56.00\n57.00\n59.00\n95.00\n▁▇▁▁▁\n\n\nprice\n0\n1\n3932.80\n3989.44\n326.0\n950.00\n2401.00\n5324.25\n18823.00\n▇▂▁▁▁\n\n\nx\n0\n1\n5.73\n1.12\n0.0\n4.71\n5.70\n6.54\n10.74\n▁▁▇▃▁\n\n\ny\n0\n1\n5.73\n1.14\n0.0\n4.72\n5.71\n6.54\n58.90\n▇▁▁▁▁\n\n\nz\n0\n1\n3.54\n0.71\n0.0\n2.91\n3.53\n4.04\n31.80\n▇▁▁▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#munging-data",
    "href": "posts/Day 4/index.html#munging-data",
    "title": "Day 4: Quantities",
    "section": "Munging Data:",
    "text": "Munging Data:\nThere’s nothing to be munged!\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#q1-price-distribution",
    "href": "posts/Day 4/index.html#q1-price-distribution",
    "title": "Day 4: Quantities",
    "section": "Q1: Price Distribution",
    "text": "Q1: Price Distribution\n.\n\n## Plotting the distribution of Diamond Prices\ndiamonds %&gt;% \n  gf_histogram(~price) %&gt;%\n  gf_labs(\n    title = \"Plot 1A: Diamond Prices\",\n    caption = \"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n.\n\n##What happens when you change the bins?\ndiamonds %&gt;% \n  gf_histogram(~price,\n               bins =100) %&gt;%\n  gf_labs(\n    title = \"Plot 1B: Diamond Prices\",\n    caption = \"bins=100\"\n  )\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#q2-carat-distribution",
    "href": "posts/Day 4/index.html#q2-carat-distribution",
    "title": "Day 4: Quantities",
    "section": "Q2: Carat Distribution",
    "text": "Q2: Carat Distribution\n.\n\n## Plotting the distribution of diamonds with different Carats\ndiamonds %&gt;% \n  gf_histogram(~carat) %&gt;%\n  gf_labs(\n    title = \"Plot 2A: Diamond Carats\",\n    caption = \"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n\n## Putting bins at 100\ndiamonds %&gt;% \n  gf_histogram(~carat,\n               bins = 100) %&gt;%\n  gf_labs(\n    title = \"Plot 2B: Diamond Carats\",\n    caption = \"bins=100\"\n  )\n\n\n\n\n\n\n\n\n\n## Putting bins at 200\ndiamonds %&gt;% \n  gf_histogram(~carat,\n               bins = 200) %&gt;%\n  gf_labs(\n    title = \"Plot 2C: Diamond Carats\",\n    caption = \"bins=200\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## What about when bins are 2000?\ndiamonds %&gt;% \n  gf_plot(~carat,\n               bins = 2000) %&gt;%\n  gf_labs(\n    title = \"Plot 2D: Diamond Carats\",\n    caption = \"bins=2000\"\n  )\n\n\n\n\n\n\n\n\n.\n\nObservations:\n\nSome towers are really high, and some are very low: this suggests that there are certain values of diamonds that are more standard than others, i.e, one is more likely to find 1, 1.5 and 2 carat diamonds than perhaps a 1.8 or 1.9 carat diamond."
  },
  {
    "objectID": "posts/Day 4/index.html#q3-price-distribution-based-on-cut-clarity-color",
    "href": "posts/Day 4/index.html#q3-price-distribution-based-on-cut-clarity-color",
    "title": "Day 4: Quantities",
    "section": "Q3: Price Distribution based on Cut, Clarity, Color",
    "text": "Q3: Price Distribution based on Cut, Clarity, Color\n\ncan you stack and dodge in histograms?\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3A: Price distribution based on Cut\",\n    caption=\"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               position = \"dodge\",\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3B: Price distribution based on Cut\",\n    caption=\"bins = 25, position = dodge\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               position = \"fill\",\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3C: Price distribution based on Cut\",\n    caption=\"bins = 25, position = fill\"\n  )\n\n\n\n\n\n\n\n\n\nPosition ‘dodge’ and ‘stacked’ act as default for gf_facet_wrap. Fill doesn’t make any sense to do as all coloumns would be 1 and filled.\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_facet_wrap(~cut) %&gt;% \n  gf_labs(\n    title=\"Plot 3B: Prices by Filled and Facetted by Cut\",\n    caption=\"bins = 25\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"violet\", alpha = 0.3) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 2) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale, nrow = 2\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      )\n  ))\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"violet\", alpha = 0.3) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 5) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale, nrow = 5\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      )\n  ))\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#looking-at-dataset-race",
    "href": "posts/Day 4/index.html#looking-at-dataset-race",
    "title": "Day 4: Quantities",
    "section": "Looking at Dataset ‘race’:",
    "text": "Looking at Dataset ‘race’:\n\nNotes:\n\nfavestats = singles out specified row and gives its stats\ncrosstables = tabling more than two variables against each other\ndrop_na() = removes all missing variables\n\n\n\nrace_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv\")\n\nRows: 1207 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): event, race, city, country, participation\ndbl  (6): race_year_id, distance, elevation_gain, elevation_loss, aid_statio...\ndate (1): date\ntime (1): start_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrank_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv\")\n\nRows: 137803 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): runner, time, gender, nationality\ndbl (4): race_year_id, rank, age, time_in_seconds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrace_df\n\n# A tibble: 1,207 × 13\n   race_year_id event    race  city  country date       start_time participation\n          &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;date&gt;     &lt;time&gt;     &lt;chr&gt;        \n 1        68140 Peak Di… Mill… Cast… United… 2021-09-03 19:00      solo         \n 2        72496 UTMB®    UTMB® Cham… France  2021-08-27 17:00      Solo         \n 3        69855 Grand R… Ultr… viel… France  2021-08-20 05:00      solo         \n 4        67856 Persenk… PERS… Asen… Bulgar… 2021-08-20 18:00      solo         \n 5        70469 Runfire… 100 … uluk… Turkey  2021-08-20 18:00      solo         \n 6        66887 Swiss A… 160KM Müns… Switze… 2021-08-15 17:00      solo         \n 7        67851 Salomon… Salo… Foll… Norway  2021-08-14 07:00      solo         \n 8        68241 Ultra T… 160KM Spa   Belgium 2021-08-14 07:00      solo         \n 9        70241 Québec … QMT-… Beau… Canada  2021-08-13 22:00      solo         \n10        69945 Bunketo… BBUT… LIND… Sweden  2021-08-07 10:00      solo         \n# ℹ 1,197 more rows\n# ℹ 5 more variables: distance &lt;dbl&gt;, elevation_gain &lt;dbl&gt;,\n#   elevation_loss &lt;dbl&gt;, aid_stations &lt;dbl&gt;, participants &lt;dbl&gt;\n\n\n\nrace_df %&gt;% glimpse()\n\nRows: 1,207\nColumns: 13\n$ race_year_id   &lt;dbl&gt; 68140, 72496, 69855, 67856, 70469, 66887, 67851, 68241,…\n$ event          &lt;chr&gt; \"Peak District Ultras\", \"UTMB®\", \"Grand Raid des Pyréné…\n$ race           &lt;chr&gt; \"Millstone 100\", \"UTMB®\", \"Ultra Tour 160\", \"PERSENK UL…\n$ city           &lt;chr&gt; \"Castleton\", \"Chamonix\", \"vielle-Aure\", \"Asenovgrad\", \"…\n$ country        &lt;chr&gt; \"United Kingdom\", \"France\", \"France\", \"Bulgaria\", \"Turk…\n$ date           &lt;date&gt; 2021-09-03, 2021-08-27, 2021-08-20, 2021-08-20, 2021-0…\n$ start_time     &lt;time&gt; 19:00:00, 17:00:00, 05:00:00, 18:00:00, 18:00:00, 17:0…\n$ participation  &lt;chr&gt; \"solo\", \"Solo\", \"solo\", \"solo\", \"solo\", \"solo\", \"solo\",…\n$ distance       &lt;dbl&gt; 166.9, 170.7, 167.0, 164.0, 159.9, 159.9, 163.8, 163.9,…\n$ elevation_gain &lt;dbl&gt; 4520, 9930, 9980, 7490, 100, 9850, 5460, 4630, 6410, 31…\n$ elevation_loss &lt;dbl&gt; -4520, -9930, -9980, -7500, -100, -9850, -5460, -4660, …\n$ aid_stations   &lt;dbl&gt; 10, 11, 13, 13, 12, 15, 5, 8, 13, 23, 13, 5, 12, 15, 0,…\n$ participants   &lt;dbl&gt; 150, 2300, 600, 150, 0, 300, 0, 200, 120, 100, 300, 50,…\n\n\n\nrank_df %&gt;%glimpse()\n\nRows: 137,803\nColumns: 8\n$ race_year_id    &lt;dbl&gt; 68140, 68140, 68140, 68140, 68140, 68140, 68140, 68140…\n$ rank            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, NA, NA, NA,…\n$ runner          &lt;chr&gt; \"VERHEUL Jasper\", \"MOULDING JON\", \"RICHARDSON Phill\", …\n$ time            &lt;chr&gt; \"26H 35M 25S\", \"27H 0M 29S\", \"28H 49M 7S\", \"30H 53M 37…\n$ age             &lt;dbl&gt; 30, 43, 38, 55, 48, 31, 55, 40, 47, 29, 48, 47, 52, 49…\n$ gender          &lt;chr&gt; \"M\", \"M\", \"M\", \"W\", \"W\", \"M\", \"W\", \"W\", \"M\", \"M\", \"M\",…\n$ nationality     &lt;chr&gt; \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\"…\n$ time_in_seconds &lt;dbl&gt; 95725, 97229, 103747, 111217, 117981, 118000, 120601, …\n\n\n\nrank_df %&gt;%skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n137803\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nrunner\n0\n1.00\n3\n52\n0\n73629\n0\n\n\ntime\n17791\n0.87\n8\n11\n0\n72840\n0\n\n\ngender\n30\n1.00\n1\n1\n0\n2\n0\n\n\nnationality\n0\n1.00\n3\n3\n0\n133\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrace_year_id\n0\n1.00\n26678.70\n20156.18\n2320\n8670\n21795\n40621\n72496\n▇▃▃▂▂\n\n\nrank\n17791\n0.87\n253.56\n390.80\n1\n31\n87\n235\n1962\n▇▁▁▁▁\n\n\nage\n0\n1.00\n46.25\n10.11\n0\n40\n46\n53\n133\n▁▇▂▁▁\n\n\ntime_in_seconds\n17791\n0.87\n122358.26\n37234.38\n3600\n96566\n114167\n148020\n296806\n▁▇▆▁▁\n\n\n\n\n\n\nUsing mosaic::favestats:\n\nrace_df %&gt;%\n  favstats(~distance, data = .)\n\n min    Q1 median     Q3   max     mean       sd    n missing\n   0 160.1  161.5 165.15 179.1 152.6187 39.87864 1207       0\n\n\n\nrace_df %&gt;%\n  favstats(~participants, data = .)\n\n min Q1 median  Q3  max     mean       sd    n missing\n   0  0     21 150 2900 120.4872 281.8337 1207       0\n\n\n\n##\nrank_df %&gt;%\n  drop_na() %&gt;%\n  favstats(time_in_seconds ~ gender, data = .)\n\n  gender  min      Q1 median       Q3    max     mean       sd      n missing\n1      M 3600 96536.5 115845 149761.5 288000 123271.1 37615.42 101643       0\n2      W 9191 96695.0 107062 131464.0 296806 117296.5 34604.26  18341       0"
  },
  {
    "objectID": "posts/Day 4/index.html#coming-up-with-questions",
    "href": "posts/Day 4/index.html#coming-up-with-questions",
    "title": "Day 4: Quantities",
    "section": "Coming up with Questions:",
    "text": "Coming up with Questions:\n\nDo gender and age affect time in seconds"
  },
  {
    "objectID": "posts/Day 4/index.html#q1",
    "href": "posts/Day 4/index.html#q1",
    "title": "Day 4: Quantities",
    "section": "Q1:",
    "text": "Q1:"
  },
  {
    "objectID": "posts/Day 4/index.html#q2",
    "href": "posts/Day 4/index.html#q2",
    "title": "Day 4: Quantities",
    "section": "Q2:",
    "text": "Q2:"
  },
  {
    "objectID": "posts/Day 4/index.html#looking-at-data-sets-race-and-rank",
    "href": "posts/Day 4/index.html#looking-at-data-sets-race-and-rank",
    "title": "Day 4: Quantities",
    "section": "Looking at Data sets ‘race’ and ‘rank’:",
    "text": "Looking at Data sets ‘race’ and ‘rank’:\n.\n\nNotes:\n\nfavestats = singles out specified row and gives its stats\ncrosstables = tabling more than two variables against each other\ndrop_na() = removes all missing variables\n\n\n.\n\n## Reading race data frame\n##\nrace_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv\")\n\nRows: 1207 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): event, race, city, country, participation\ndbl  (6): race_year_id, distance, elevation_gain, elevation_loss, aid_statio...\ndate (1): date\ntime (1): start_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n##\n##reading rank data frame\n##\nrank_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv\")\n\nRows: 137803 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): runner, time, gender, nationality\ndbl (4): race_year_id, rank, age, time_in_seconds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nrace_df %&gt;% glimpse()\n\nRows: 1,207\nColumns: 13\n$ race_year_id   &lt;dbl&gt; 68140, 72496, 69855, 67856, 70469, 66887, 67851, 68241,…\n$ event          &lt;chr&gt; \"Peak District Ultras\", \"UTMB®\", \"Grand Raid des Pyréné…\n$ race           &lt;chr&gt; \"Millstone 100\", \"UTMB®\", \"Ultra Tour 160\", \"PERSENK UL…\n$ city           &lt;chr&gt; \"Castleton\", \"Chamonix\", \"vielle-Aure\", \"Asenovgrad\", \"…\n$ country        &lt;chr&gt; \"United Kingdom\", \"France\", \"France\", \"Bulgaria\", \"Turk…\n$ date           &lt;date&gt; 2021-09-03, 2021-08-27, 2021-08-20, 2021-08-20, 2021-0…\n$ start_time     &lt;time&gt; 19:00:00, 17:00:00, 05:00:00, 18:00:00, 18:00:00, 17:0…\n$ participation  &lt;chr&gt; \"solo\", \"Solo\", \"solo\", \"solo\", \"solo\", \"solo\", \"solo\",…\n$ distance       &lt;dbl&gt; 166.9, 170.7, 167.0, 164.0, 159.9, 159.9, 163.8, 163.9,…\n$ elevation_gain &lt;dbl&gt; 4520, 9930, 9980, 7490, 100, 9850, 5460, 4630, 6410, 31…\n$ elevation_loss &lt;dbl&gt; -4520, -9930, -9980, -7500, -100, -9850, -5460, -4660, …\n$ aid_stations   &lt;dbl&gt; 10, 11, 13, 13, 12, 15, 5, 8, 13, 23, 13, 5, 12, 15, 0,…\n$ participants   &lt;dbl&gt; 150, 2300, 600, 150, 0, 300, 0, 200, 120, 100, 300, 50,…\n\n\n\nrace_df %&gt;%skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1207\n\n\nNumber of columns\n13\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nDate\n1\n\n\ndifftime\n1\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nevent\n0\n1.00\n4\n57\n0\n435\n0\n\n\nrace\n0\n1.00\n3\n63\n0\n371\n0\n\n\ncity\n172\n0.86\n2\n30\n0\n308\n0\n\n\ncountry\n4\n1.00\n4\n17\n0\n60\n0\n\n\nparticipation\n0\n1.00\n4\n5\n0\n4\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ndate\n0\n1\n2012-01-14\n2021-09-03\n2017-09-30\n711\n\n\n\nVariable type: difftime\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nstart_time\n0\n1\n0 secs\n82800 secs\n05:00:00\n39\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrace_year_id\n0\n1\n27889.65\n20689.90\n2320\n9813.5\n23565.0\n42686.00\n72496.0\n▇▃▃▂▂\n\n\ndistance\n0\n1\n152.62\n39.88\n0\n160.1\n161.5\n165.15\n179.1\n▁▁▁▁▇\n\n\nelevation_gain\n0\n1\n5294.79\n2872.29\n0\n3210.0\n5420.0\n7145.00\n14430.0\n▅▇▇▂▁\n\n\nelevation_loss\n0\n1\n-5317.01\n2899.12\n-14440\n-7206.5\n-5420.0\n-3220.00\n0.0\n▁▂▇▇▅\n\n\naid_stations\n0\n1\n8.63\n7.63\n0\n0.0\n9.0\n14.00\n56.0\n▇▆▁▁▁\n\n\nparticipants\n0\n1\n120.49\n281.83\n0\n0.0\n21.0\n150.00\n2900.0\n▇▁▁▁▁\n\n\n\n\n\n\nrank_df %&gt;%glimpse()\n\nRows: 137,803\nColumns: 8\n$ race_year_id    &lt;dbl&gt; 68140, 68140, 68140, 68140, 68140, 68140, 68140, 68140…\n$ rank            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, NA, NA, NA,…\n$ runner          &lt;chr&gt; \"VERHEUL Jasper\", \"MOULDING JON\", \"RICHARDSON Phill\", …\n$ time            &lt;chr&gt; \"26H 35M 25S\", \"27H 0M 29S\", \"28H 49M 7S\", \"30H 53M 37…\n$ age             &lt;dbl&gt; 30, 43, 38, 55, 48, 31, 55, 40, 47, 29, 48, 47, 52, 49…\n$ gender          &lt;chr&gt; \"M\", \"M\", \"M\", \"W\", \"W\", \"M\", \"W\", \"W\", \"M\", \"M\", \"M\",…\n$ nationality     &lt;chr&gt; \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\"…\n$ time_in_seconds &lt;dbl&gt; 95725, 97229, 103747, 111217, 117981, 118000, 120601, …\n\n\n\nrank_df %&gt;%skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n137803\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nrunner\n0\n1.00\n3\n52\n0\n73629\n0\n\n\ntime\n17791\n0.87\n8\n11\n0\n72840\n0\n\n\ngender\n30\n1.00\n1\n1\n0\n2\n0\n\n\nnationality\n0\n1.00\n3\n3\n0\n133\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrace_year_id\n0\n1.00\n26678.70\n20156.18\n2320\n8670\n21795\n40621\n72496\n▇▃▃▂▂\n\n\nrank\n17791\n0.87\n253.56\n390.80\n1\n31\n87\n235\n1962\n▇▁▁▁▁\n\n\nage\n0\n1.00\n46.25\n10.11\n0\n40\n46\n53\n133\n▁▇▂▁▁\n\n\ntime_in_seconds\n17791\n0.87\n122358.26\n37234.38\n3600\n96566\n114167\n148020\n296806\n▁▇▆▁▁\n\n\n\n\n\n.\n\nUsing mosaic::favestats:\n\nrace_df %&gt;%\n  favstats(~distance, data = .)\n\n min    Q1 median     Q3   max     mean       sd    n missing\n   0 160.1  161.5 165.15 179.1 152.6187 39.87864 1207       0\n\n\n\nrace_df %&gt;%\n  favstats(~participants, data = .)\n\n min Q1 median  Q3  max     mean       sd    n missing\n   0  0     21 150 2900 120.4872 281.8337 1207       0\n\n\n\n##\nrank_df %&gt;%\n  drop_na() %&gt;%\n  favstats(time_in_seconds ~ gender, data = .)\n\n  gender  min      Q1 median       Q3    max     mean       sd      n missing\n1      M 3600 96536.5 115845 149761.5 288000 123271.1 37615.42 101643       0\n2      W 9191 96695.0 107062 131464.0 296806 117296.5 34604.26  18341       0\n\n\n.\n.\n\n\nData Dictionary:"
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html",
    "href": "posts/A2- Case Study 1/index.html",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "Check out the Assignment here!\n.\n\n\nThe data set observed in this case study goes over 3310 films, discussing their domestic and worldwide gross, production budget, genre, distributor and year of release, etc.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\n.\n.\n\n\n\n\n\nmp &lt;- read_delim(file = \"../../Data/movie_profit.csv\", delim = \";\")\n\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmp %&gt;% glimpse()\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;chr&gt; \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             &lt;chr&gt; \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;dbl&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\nmp%&gt;%inspect()\n\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040903e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n\n\n\nmp %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3310\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nDate\n1\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie\n0\n1.00\n1\n35\n0\n3310\n0\n\n\ndistributor\n42\n0.99\n5\n18\n0\n6\n0\n\n\nmpaa_rating\n130\n0.96\n1\n5\n0\n4\n0\n\n\ngenre\n0\n1.00\n5\n9\n0\n5\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nrelease_date\n0\n1\n1936-02-05\n2017-12-22\n2005-06-30\n1723\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nproduction_budget\n0\n1\n3.326794e+07\n3.460741e+07\n2.50e+05\n9.500000e+06\n2.000000e+07\n4.500000e+07\n1.750000e+08\n▇▂▁▁▁\n\n\ndomestic_gross\n0\n1\n4.551509e+07\n5.852794e+07\n0.00e+00\n6.530094e+06\n2.558731e+07\n6.046695e+07\n4.745447e+08\n▇▁▁▁▁\n\n\nworldwide_gross\n0\n1\n9.384123e+07\n1.389514e+08\n4.23e+02\n1.086144e+07\n4.040903e+07\n1.184703e+08\n1.162782e+09\n▇▁▁▁▁\n\n\nprofit_ratio\n0\n1\n4.319388e+14\n1.501736e+15\n1.38e+10\n7.861269e+13\n1.962499e+14\n3.942158e+14\n4.315179e+16\n▇▁▁▁▁\n\n\ndecade\n0\n1\n1.998790e+03\n1.061000e+01\n1.93e+03\n1.990000e+03\n2.000000e+03\n2.010000e+03\n2.010000e+03\n▁▁▁▃▇\n\n\n\n\n\n.\n\n\nThere are 3310 rows and 10 columns in this data set.\n.\n\n\n\nrelease_date : When the movie was released. This data set contains movies released from 1936 through 2017.\nmovie : Tile of the film. This data set contains 3310 films.\ndistributor : Name of the company that distributed the film - there are six categories under this variable: Universal, Paramount Pictures, Warner Bros, and 20th Century Fox, Sony Pictures and Other. There are 42 missing entries.\nmpaa_rating : The age-rating of each movie. There are four categories under this variable - R, PG-13, PG and G. This coloumn also has 130 missing entries.\ngenre : Describes the genre of the film, categorized into - Action, Adventure, Comedy, Drama, and Horror.\ndecade : Describes the decade in which the movie was released, i.e 1990, 2000, 2010 and so on. Though it is considered a quant type variable in the data set, it is technically qual variable.\n\n.\n\n\n\n\nproduction_budget : The budget for the film in USD.\ndomestic_gross : The amount of money, in USD, that the film made across the US.\nworldwide_gross : The amount of money, in USD, the film made across the world.\nprofit_ratio : This variable would technically be the (worldwide_gross - production_budget)/(production_budget), but the values in this section are 17 or so digits in nature. Could this be a misplaced decimal error?\nA simple calculation using the above formula on any film, suggests that the every value under profit_ratio must be multiplied by 10^(-14).\n\n.\n\n\n\n\n\nmp_mod &lt;- mp %&gt;%\n  mutate(\n    decade = as_factor(decade),\n    movie = as_factor(movie),\n    distributor = as_factor(distributor),\n    distributor = replace(distributor, distributor == \"\", NA),\n   \n    mpaa_rating = as_factor(mpaa_rating),\n    mpaa_rating = replace(mpaa_rating, mpaa_rating == \"\", NA),\n    genre = as_factor(genre),\n    \n    profit_ratio = profit_ratio * 0.00000000000001\n  )\nglimpse(mp_mod)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;fct&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;fct&gt; Other, Other, Other, Other, Paramount Pictures, Para…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 0.76744800, 0.81253600, 2.97286400, 4.63068800, 14.9…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n.\n\n## viewing the dataset:\ndatatable(mp_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n\n\n\n.\n\n\n.\n\n## top 5 production budget:\nmp_mod %&gt;% arrange(desc(production_budget)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Production Budget - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProduction Budget - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2013-12-25\n47 Ronin\n1.75e+08\n38362475\n151716815\nUniversal\nPG-13\nAction\n0.8669532\n2010\n\n\n2017-05-12\nKing Arthur: Legend of the Sword\n1.75e+08\n39175066\n139950708\nWarner Bros.\nPG-13\nAdventure\n0.7997183\n2010\n\n\n1995-07-28\nWaterworld\n1.75e+08\n88246220\n264246220\nUniversal\nPG-13\nAction\n1.5099784\n1990\n\n\n2007-06-22\nEvan Almighty\n1.75e+08\n100289690\n174131329\nUniversal\nPG\nComedy\n0.9950362\n2000\n\n\n2016-05-27\nAlice Through the Looking Glass\n1.70e+08\n77042381\n276934087\nOther\nPG\nAdventure\n1.6290240\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 domestic gross:\nmp_mod %&gt;% arrange(desc(domestic_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Domestic Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nDomestic Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n1977-05-25\nStar Wars Ep. IV: A New Hope\n1.10e+07\n460998007\n786598007\n20th Century Fox\nPG\nAdventure\n71.508910\n1970\n\n\n2004-05-19\nShrek 2\n7.00e+07\n441226247\n937008132\nOther\nPG\nAdventure\n13.385831\n2000\n\n\n1982-06-11\nET: The Extra-Terrestrial\n1.05e+07\n435110554\n792965326\nUniversal\nPG\nDrama\n75.520507\n1980\n\n\n2013-11-22\nThe Hunger Games: Catching Fire\n1.30e+08\n424668047\n864868047\nOther\nPG-13\nAdventure\n6.652831\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 worldwide gross:\nmp_mod %&gt;% arrange(desc(worldwide_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Worldwide Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nWorldwide Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2015-07-10\nMinions\n7.40e+07\n336045770\n1162781621\nUniversal\nPG\nAdventure\n15.713265\n2010\n\n\n1993-06-11\nJurassic Park\n6.30e+07\n395708305\n1038812584\nUniversal\nPG-13\nAction\n16.489089\n1990\n\n\n2017-06-30\nDespicable Me 3\n7.50e+07\n264624300\n1034520868\nUniversal\nPG\nAdventure\n13.793612\n2010\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n2016-03-04\nZootopia\n1.50e+08\n341268248\n1019706594\nOther\nPG\nAdventure\n6.798044\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 profit ratio:\nmp_mod %&gt;% arrange(desc(profit_ratio)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Profit Ratio - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProfit Ratio - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2009-09-25\nParanormal Activity\n450000\n107918810\n194183034\nParamount Pictures\nR\nHorror\n431.5179\n2000\n\n\n1999-07-14\nThe Blair Witch Project\n600000\n140539099\n248300000\nOther\nR\nHorror\n413.8333\n1990\n\n\n1942-08-13\nBambi\n858000\n102797000\n268000000\nOther\nG\nDrama\n312.3543\n1940\n\n\n1976-11-21\nRocky\n1000000\n117235147\n225000000\nOther\nPG\nDrama\n225.0000\n1970\n\n\n1978-10-17\nHalloween\n325000\n47000000\n70000000\nOther\nR\nHorror\n215.3846\n1970\n\n\n\n\n\n\n\n\n.\n\n\nIts very interesting to note that the top 5 most expensive movies to make, The top 5 movies that made the most money worldwide and the top 5 movies that made the most in profits have not a single entry in common.\nAdventure and action films seem to make more money, as well as tend to cost more to make.\nhorror and drama films seem to have the best profit turnout.\n\n\n.\n.\n\n\n\n\n\n\n\n\nmp_mod %&gt;%\n  group_by(distributor, genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  \n  gf_col( genre  ~ median_profit_ratio ) %&gt;% \n  gf_facet_wrap(~distributor)%&gt;%\n  gf_labs(\n    title = \"Profits made by Film Distributors\",\n    subtitle = \"Ratio of Profits to Budgets\",\n    caption = \"October 2024 \"\n  )\n\n`summarise()` has grouped output by 'distributor'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n## genre alone by profit ratio\nmp_mod %&gt;%\n  gf_col(genre ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by profit ratio\nmp_mod %&gt;%\n gf_col(distributor ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(distributor) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(distributor ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n\nWhy use median?\n.\nBecause, of its effectiveness in representing the central tendency of skewed or non-normally distributed data.\n\n\n.\n.\n\n\n\n\n.\n\n\n.\n\nIdentify the type of plot\nThe above is a bar graph.\nWhat are the variables used to plot this graph?\ndistributor, genre, profit_ratio\nIf you were to invest in movie production ventures, which are the two best genres that you might decide to invest in?\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\nHorror and Drama\nWhich R command might have been used to obtain the separate plots for each distributor?\nggformula::gf_facet_wrap\nIf the original dataset had BUDGETS and PROFITS in separate columns, what preprocessing might have been done to achieve this plot?\nmp_mod &lt;- mp %&gt;% mutate( ...., profit_ratio = PROFITS/BUDGETS)\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#introduction",
    "href": "posts/A2- Case Study 1/index.html#introduction",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "The data set observed in this case study goes over 3310 films, discussing their domestic and worldwide gross, production budget, genre, distributor and year of release, etc.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#examining-data",
    "href": "posts/A2- Case Study 1/index.html#examining-data",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "mp &lt;- read_delim(file = \"../../Data/movie_profit.csv\", delim = \";\")\n\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmp %&gt;% glimpse()\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;chr&gt; \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             &lt;chr&gt; \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;dbl&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\nmp%&gt;%inspect()\n\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040903e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n\n\n\nmp %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3310\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nDate\n1\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie\n0\n1.00\n1\n35\n0\n3310\n0\n\n\ndistributor\n42\n0.99\n5\n18\n0\n6\n0\n\n\nmpaa_rating\n130\n0.96\n1\n5\n0\n4\n0\n\n\ngenre\n0\n1.00\n5\n9\n0\n5\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nrelease_date\n0\n1\n1936-02-05\n2017-12-22\n2005-06-30\n1723\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nproduction_budget\n0\n1\n3.326794e+07\n3.460741e+07\n2.50e+05\n9.500000e+06\n2.000000e+07\n4.500000e+07\n1.750000e+08\n▇▂▁▁▁\n\n\ndomestic_gross\n0\n1\n4.551509e+07\n5.852794e+07\n0.00e+00\n6.530094e+06\n2.558731e+07\n6.046695e+07\n4.745447e+08\n▇▁▁▁▁\n\n\nworldwide_gross\n0\n1\n9.384123e+07\n1.389514e+08\n4.23e+02\n1.086144e+07\n4.040903e+07\n1.184703e+08\n1.162782e+09\n▇▁▁▁▁\n\n\nprofit_ratio\n0\n1\n4.319388e+14\n1.501736e+15\n1.38e+10\n7.861269e+13\n1.962499e+14\n3.942158e+14\n4.315179e+16\n▇▁▁▁▁\n\n\ndecade\n0\n1\n1.998790e+03\n1.061000e+01\n1.93e+03\n1.990000e+03\n2.000000e+03\n2.010000e+03\n2.010000e+03\n▁▁▁▃▇\n\n\n\n\n\n.\n\n\nThere are 3310 rows and 10 columns in this data set.\n.\n\n\n\nrelease_date : When the movie was released. This data set contains movies released from 1936 through 2017.\nmovie : Tile of the film. This data set contains 3310 films.\ndistributor : Name of the company that distributed the film - there are six categories under this variable: Universal, Paramount Pictures, Warner Bros, and 20th Century Fox, Sony Pictures and Other. There are 42 missing entries.\nmpaa_rating : The age-rating of each movie. There are four categories under this variable - R, PG-13, PG and G. This coloumn also has 130 missing entries.\ngenre : Describes the genre of the film, categorized into - Action, Adventure, Comedy, Drama, and Horror.\ndecade : Describes the decade in which the movie was released, i.e 1990, 2000, 2010 and so on. Though it is considered a quant type variable in the data set, it is technically qual variable.\n\n.\n\n\n\n\nproduction_budget : The budget for the film in USD.\ndomestic_gross : The amount of money, in USD, that the film made across the US.\nworldwide_gross : The amount of money, in USD, the film made across the world.\nprofit_ratio : This variable would technically be the (worldwide_gross - production_budget)/(production_budget), but the values in this section are 17 or so digits in nature. Could this be a misplaced decimal error?\nA simple calculation using the above formula on any film, suggests that the every value under profit_ratio must be multiplied by 10^(-14).\n\n.\n\n\n\n\n\nmp_mod &lt;- mp %&gt;%\n  mutate(\n    decade = as_factor(decade),\n    movie = as_factor(movie),\n    distributor = as_factor(distributor),\n    distributor = replace(distributor, distributor == \"\", NA),\n   \n    mpaa_rating = as_factor(mpaa_rating),\n    mpaa_rating = replace(mpaa_rating, mpaa_rating == \"\", NA),\n    genre = as_factor(genre),\n    \n    profit_ratio = profit_ratio * 0.00000000000001\n  )\nglimpse(mp_mod)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;fct&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;fct&gt; Other, Other, Other, Other, Paramount Pictures, Para…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 0.76744800, 0.81253600, 2.97286400, 4.63068800, 14.9…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n.\n\n## viewing the dataset:\ndatatable(mp_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n\n\n\n.\n\n\n.\n\n## top 5 production budget:\nmp_mod %&gt;% arrange(desc(production_budget)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Production Budget - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProduction Budget - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2013-12-25\n47 Ronin\n1.75e+08\n38362475\n151716815\nUniversal\nPG-13\nAction\n0.8669532\n2010\n\n\n2017-05-12\nKing Arthur: Legend of the Sword\n1.75e+08\n39175066\n139950708\nWarner Bros.\nPG-13\nAdventure\n0.7997183\n2010\n\n\n1995-07-28\nWaterworld\n1.75e+08\n88246220\n264246220\nUniversal\nPG-13\nAction\n1.5099784\n1990\n\n\n2007-06-22\nEvan Almighty\n1.75e+08\n100289690\n174131329\nUniversal\nPG\nComedy\n0.9950362\n2000\n\n\n2016-05-27\nAlice Through the Looking Glass\n1.70e+08\n77042381\n276934087\nOther\nPG\nAdventure\n1.6290240\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 domestic gross:\nmp_mod %&gt;% arrange(desc(domestic_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Domestic Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nDomestic Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n1977-05-25\nStar Wars Ep. IV: A New Hope\n1.10e+07\n460998007\n786598007\n20th Century Fox\nPG\nAdventure\n71.508910\n1970\n\n\n2004-05-19\nShrek 2\n7.00e+07\n441226247\n937008132\nOther\nPG\nAdventure\n13.385831\n2000\n\n\n1982-06-11\nET: The Extra-Terrestrial\n1.05e+07\n435110554\n792965326\nUniversal\nPG\nDrama\n75.520507\n1980\n\n\n2013-11-22\nThe Hunger Games: Catching Fire\n1.30e+08\n424668047\n864868047\nOther\nPG-13\nAdventure\n6.652831\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 worldwide gross:\nmp_mod %&gt;% arrange(desc(worldwide_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Worldwide Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nWorldwide Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2015-07-10\nMinions\n7.40e+07\n336045770\n1162781621\nUniversal\nPG\nAdventure\n15.713265\n2010\n\n\n1993-06-11\nJurassic Park\n6.30e+07\n395708305\n1038812584\nUniversal\nPG-13\nAction\n16.489089\n1990\n\n\n2017-06-30\nDespicable Me 3\n7.50e+07\n264624300\n1034520868\nUniversal\nPG\nAdventure\n13.793612\n2010\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n2016-03-04\nZootopia\n1.50e+08\n341268248\n1019706594\nOther\nPG\nAdventure\n6.798044\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 profit ratio:\nmp_mod %&gt;% arrange(desc(profit_ratio)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Profit Ratio - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProfit Ratio - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2009-09-25\nParanormal Activity\n450000\n107918810\n194183034\nParamount Pictures\nR\nHorror\n431.5179\n2000\n\n\n1999-07-14\nThe Blair Witch Project\n600000\n140539099\n248300000\nOther\nR\nHorror\n413.8333\n1990\n\n\n1942-08-13\nBambi\n858000\n102797000\n268000000\nOther\nG\nDrama\n312.3543\n1940\n\n\n1976-11-21\nRocky\n1000000\n117235147\n225000000\nOther\nPG\nDrama\n225.0000\n1970\n\n\n1978-10-17\nHalloween\n325000\n47000000\n70000000\nOther\nR\nHorror\n215.3846\n1970\n\n\n\n\n\n\n\n\n.\n\n\nIts very interesting to note that the top 5 most expensive movies to make, The top 5 movies that made the most money worldwide and the top 5 movies that made the most in profits have not a single entry in common.\nAdventure and action films seem to make more money, as well as tend to cost more to make.\nhorror and drama films seem to have the best profit turnout.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 5.B/index.html",
    "href": "posts/Day 5.B/index.html",
    "title": "Day 5: Change",
    "section": "",
    "text": "in functions under change:\n\nselect(where())\ngf_point()\ngf_lm()\nGGgalley::ggpairs ()\n\ncoloums =\nswitch =\nprogress =\ndiag =\nlower =\nlist()\nwrap()\n\nmosaic::cor_test()\nbroom::tidy()\nknitr::kable\n\ndigits\ncaption\n\ncorrelation::correlation()\ngf_errorbar()\ngf_hline()\ngf_smooth()\nggExtra::ggMarginal"
  },
  {
    "objectID": "posts/Day 5.B/index.html#introduction",
    "href": "posts/Day 5.B/index.html#introduction",
    "title": "Day 5: Change",
    "section": "",
    "text": "in functions under change:\n\nselect(where())\ngf_point()\ngf_lm()\nGGgalley::ggpairs ()\n\ncoloums =\nswitch =\nprogress =\ndiag =\nlower =\nlist()\nwrap()\n\nmosaic::cor_test()\nbroom::tidy()\nknitr::kable\n\ndigits\ncaption\n\ncorrelation::correlation()\ngf_errorbar()\ngf_hline()\ngf_smooth()\nggExtra::ggMarginal"
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#plotting-data",
    "href": "posts/A2- Case Study 1/index.html#plotting-data",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "mp_mod %&gt;%\n  group_by(distributor, genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  \n  gf_col( genre  ~ median_profit_ratio ) %&gt;% \n  gf_facet_wrap(~distributor)%&gt;%\n  gf_labs(\n    title = \"Profits made by Film Distributors\",\n    subtitle = \"Ratio of Profits to Budgets\",\n    caption = \"October 2024 \"\n  )\n\n`summarise()` has grouped output by 'distributor'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n## genre alone by profit ratio\nmp_mod %&gt;%\n  gf_col(genre ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by profit ratio\nmp_mod %&gt;%\n gf_col(distributor ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(distributor) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(distributor ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n\nWhy use median?\n.\nBecause, of its effectiveness in representing the central tendency of skewed or non-normally distributed data.\n\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#task-and-discussion",
    "href": "posts/A2- Case Study 1/index.html#task-and-discussion",
    "title": "A2: Case Study 1",
    "section": "",
    "text": ".\n\n\n.\n\nIdentify the type of plot\nThe above is a bar graph.\nWhat are the variables used to plot this graph?\ndistributor, genre, profit_ratio\nIf you were to invest in movie production ventures, which are the two best genres that you might decide to invest in?\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\nHorror and Drama\nWhich R command might have been used to obtain the separate plots for each distributor?\nggformula::gf_facet_wrap\nIf the original dataset had BUDGETS and PROFITS in separate columns, what preprocessing might have been done to achieve this plot?\nmp_mod &lt;- mp %&gt;% mutate( ...., profit_ratio = PROFITS/BUDGETS)\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html",
    "href": "posts/A2 - Case Study 2/index.html",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "Check out the Assignment here!\n\n\nThe data set observed in this case study goes over 1339 coffee harvests, discussing their country of origin, region, owners, companies, variety, colour, and such, along with parameters such as their total cup score, aroma, sweetness, flavour, acidity, aftertaste etc. Totally, this data set has 43 columns.\n.\nLike Hansel and Gretel, I follow the breadcrumbs till the end :P\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n.\n\n\n\n\n\ncoffee &lt;- read_delim( file = \"../../Data/coffee-ratings.csv\", delim = \";\") %&gt;% glimpse()\n\nRows: 1339 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (25): species, owner, country_of_origin, farm_name, lot_number, mill, ic...\ndbl  (4): number_of_bags, category_one_defects, quakers, category_two_defects\nnum (14): total_cup_points, aroma, flavor, aftertaste, acidity, body, balanc...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 1,339\nColumns: 43\n$ total_cup_points      &lt;dbl&gt; 9058, 8992, 8975, 8900, 8883, 8883, 8875, 8867, …\n$ species               &lt;chr&gt; \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 &lt;chr&gt; \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     &lt;chr&gt; \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             &lt;chr&gt; \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  &lt;chr&gt; \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            &lt;chr&gt; \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               &lt;chr&gt; \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              &lt;chr&gt; \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                &lt;chr&gt; \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              &lt;chr&gt; \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        &lt;dbl&gt; 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            &lt;chr&gt; \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          &lt;chr&gt; \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          &lt;chr&gt; \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               &lt;chr&gt; \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               &lt;chr&gt; NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     &lt;chr&gt; \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 &lt;dbl&gt; 867, 875, 842, 817, 825, 858, 842, 825, 867, 808…\n$ flavor                &lt;dbl&gt; 883, 867, 850, 858, 850, 842, 850, 833, 867, 858…\n$ aftertaste            &lt;dbl&gt; 867, 850, 842, 842, 825, 842, 833, 850, 858, 850…\n$ acidity               &lt;dbl&gt; 875, 858, 842, 842, 850, 850, 850, 842, 842, 850…\n$ body                  &lt;dbl&gt; 850, 842, 833, 850, 842, 825, 825, 833, 833, 767…\n$ balance               &lt;dbl&gt; 842, 842, 842, 825, 833, 833, 825, 850, 842, 842…\n$ uniformity            &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ clean_cup             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ sweetness             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 933, 9…\n$ cupper_points         &lt;dbl&gt; 875, 858, 925, 867, 858, 833, 850, 900, 867, 850…\n$ moisture              &lt;chr&gt; \"0,12\", \"0,12\", \"0,00\", \"0,11\", \"0,12\", \"0,11\", …\n$ category_one_defects  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 &lt;chr&gt; \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  &lt;dbl&gt; 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            &lt;chr&gt; \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address &lt;chr&gt; \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact &lt;chr&gt; \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   &lt;chr&gt; \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   &lt;dbl&gt; 19500000, 19500000, 16000000, 18000000, 19500000…\n$ altitude_high_meters  &lt;dbl&gt; 22000000, 22000000, 18000000, 22000000, 22000000…\n$ altitude_mean_meters  &lt;dbl&gt; 20750000, 20750000, 17000000, 20000000, 20750000…\n\n\n.\n\ncoffee %&gt;% inspect()\n\n\ncategorical variables:  \n                    name     class levels    n missing\n1                species character      2 1339       0\n2                  owner character    315 1332       7\n3      country_of_origin character     36 1338       1\n4              farm_name character    571  980     359\n5             lot_number character    227  276    1063\n6                   mill character    460 1024     315\n7             ico_number character    847 1188     151\n8                company character    281 1130     209\n9               altitude character    396 1113     226\n10                region character    356 1280      59\n11              producer character    691 1108     231\n12            bag_weight character     56 1339       0\n13    in_country_partner character     27 1339       0\n14          harvest_year character     46 1292      47\n15          grading_date character    567 1339       0\n16               owner_1 character    319 1332       7\n17               variety character     29 1113     226\n18     processing_method character      5 1169     170\n19              moisture character     23 1339       0\n20                 color character      4 1121     218\n21            expiration character    566 1339       0\n22    certification_body character     26 1339       0\n23 certification_address character     32 1339       0\n24 certification_contact character     29 1339       0\n25   unit_of_measurement character      2 1339       0\n                                    distribution\n1  Arabica (97.9%), Robusta (2.1%)              \n2  juan luis alvarado romero (11.6%) ...        \n3  Mexico (17.6%), Colombia (13.7%) ...         \n4  various (4.8%), rio verde (2.3%) ...         \n5  1 (6.5%), 020/17 (2.2%) ...                  \n6  beneficio ixchel (8.8%) ...                  \n7  0 (6.5%), Taiwan (2.6%) ...                  \n8  unex guatemala, s.a. (7.6%) ...              \n9  1100 (3.9%), 1200 (3.8%) ...                 \n10 huila (8.8%), oriente (6.2%) ...             \n11 La Plata (2.7%) ...                          \n12 1 kg (24.7%), 60 kg (19.1%) ...              \n13 Specialty Coffee Association (23.4%) ...     \n14 2012 (27.4%), 2014 (18%) ...                 \n15 July 11th, 2012 (1.9%) ...                   \n16 Juan Luis Alvarado Romero (11.6%) ...        \n17 Caturra (23%), Bourbon (20.3%) ...           \n18 Washed / Wet (69.7%) ...                     \n19 0,11 (28.6%), 0,12 (22%) ...                 \n20 Green (77.6%), Bluish-Green (10.2%) ...      \n21 December 26th, 2014 (1.9%) ...               \n22 Specialty Coffee Association (23.4%) ...     \n23  (%) ...                                     \n24  (%) ...                                     \n25 m (86.4%), ft (13.6%)                        \n\nquantitative variables:  \n                   name   class   min       Q1   median       Q3        max\n1      total_cup_points numeric     0     8108     8250     8367       9058\n2        number_of_bags numeric     0       14      175      275       1062\n3                 aroma numeric     0      742      758      775        875\n4                flavor numeric     0      733      758      775        883\n5            aftertaste numeric     0      725      742      758        867\n6               acidity numeric     0      733      758      775        875\n7                  body numeric     0      733      750      767        858\n8               balance numeric     0      733      750      775        875\n9            uniformity numeric     0     1000     1000     1000       1000\n10            clean_cup numeric     0     1000     1000     1000       1000\n11            sweetness numeric     0     1000     1000     1000       1000\n12        cupper_points numeric     0      725      750      775       1000\n13 category_one_defects numeric     0        0        0        0         63\n14              quakers numeric     0        0        0        0         11\n15 category_two_defects numeric     0        0        2        4         55\n16  altitude_low_meters numeric 10000 11000000 13106400 16000000 1901640000\n17 altitude_high_meters numeric 10000 11000000 13500000 16500000 1901640000\n18 altitude_mean_meters numeric 10000 11000000 13106400 16000000 1901640000\n           mean           sd    n missing\n1  8.208985e+03 3.500575e+02 1339       0\n2  1.541830e+02 1.299872e+02 1339       0\n3  7.566706e+02 3.775600e+01 1339       0\n4  7.520426e+02 3.984421e+01 1339       0\n5  7.401083e+02 4.044634e+01 1339       0\n6  7.535706e+02 3.798267e+01 1339       0\n7  7.517498e+02 3.700639e+01 1339       0\n8  7.518013e+02 4.089433e+01 1339       0\n9  9.834877e+02 5.545906e+01 1339       0\n10 9.835108e+02 7.639459e+01 1339       0\n11 9.856692e+02 6.161020e+01 1339       0\n12 7.503376e+02 4.734643e+01 1339       0\n13 4.794623e-01 2.549683e+00 1339       0\n14 1.733931e-01 8.321210e-01 1338       1\n15 3.556385e+00 5.312541e+00 1339       0\n16 1.750713e+07 8.669441e+07 1109     230\n17 1.799348e+07 8.668806e+07 1109     230\n18 1.775031e+07 8.668626e+07 1109     230\n\n\n\ncoffee %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1339\n\n\nNumber of columns\n43\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n25\n\n\nnumeric\n18\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nspecies\n0\n1.00\n7\n7\n0\n2\n0\n\n\nowner\n7\n0.99\n3\n50\n0\n315\n0\n\n\ncountry_of_origin\n1\n1.00\n4\n28\n0\n36\n0\n\n\nfarm_name\n359\n0.73\n1\n73\n0\n571\n0\n\n\nlot_number\n1063\n0.21\n1\n71\n0\n227\n0\n\n\nmill\n315\n0.76\n1\n77\n0\n460\n0\n\n\nico_number\n151\n0.89\n1\n40\n0\n847\n0\n\n\ncompany\n209\n0.84\n3\n73\n0\n281\n0\n\n\naltitude\n226\n0.83\n1\n41\n0\n396\n0\n\n\nregion\n59\n0.96\n2\n76\n0\n356\n0\n\n\nproducer\n231\n0.83\n1\n100\n0\n691\n0\n\n\nbag_weight\n0\n1.00\n1\n8\n0\n56\n0\n\n\nin_country_partner\n0\n1.00\n7\n85\n0\n27\n0\n\n\nharvest_year\n47\n0.96\n3\n24\n0\n46\n0\n\n\ngrading_date\n0\n1.00\n13\n20\n0\n567\n0\n\n\nowner_1\n7\n0.99\n3\n50\n0\n319\n0\n\n\nvariety\n226\n0.83\n4\n21\n0\n29\n0\n\n\nprocessing_method\n170\n0.87\n5\n25\n0\n5\n0\n\n\nmoisture\n0\n1.00\n4\n4\n0\n23\n0\n\n\ncolor\n218\n0.84\n4\n12\n0\n4\n0\n\n\nexpiration\n0\n1.00\n13\n20\n0\n566\n0\n\n\ncertification_body\n0\n1.00\n7\n85\n0\n26\n0\n\n\ncertification_address\n0\n1.00\n40\n40\n0\n32\n0\n\n\ncertification_contact\n0\n1.00\n40\n40\n0\n29\n0\n\n\nunit_of_measurement\n0\n1.00\n1\n2\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal_cup_points\n0\n1.00\n8208.99\n350.06\n0\n8108\n8250\n8367\n9058\n▁▁▁▁▇\n\n\nnumber_of_bags\n0\n1.00\n154.18\n129.99\n0\n14\n175\n275\n1062\n▇▇▁▁▁\n\n\naroma\n0\n1.00\n756.67\n37.76\n0\n742\n758\n775\n875\n▁▁▁▁▇\n\n\nflavor\n0\n1.00\n752.04\n39.84\n0\n733\n758\n775\n883\n▁▁▁▁▇\n\n\naftertaste\n0\n1.00\n740.11\n40.45\n0\n725\n742\n758\n867\n▁▁▁▁▇\n\n\nacidity\n0\n1.00\n753.57\n37.98\n0\n733\n758\n775\n875\n▁▁▁▁▇\n\n\nbody\n0\n1.00\n751.75\n37.01\n0\n733\n750\n767\n858\n▁▁▁▁▇\n\n\nbalance\n0\n1.00\n751.80\n40.89\n0\n733\n750\n775\n875\n▁▁▁▁▇\n\n\nuniformity\n0\n1.00\n983.49\n55.46\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nclean_cup\n0\n1.00\n983.51\n76.39\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nsweetness\n0\n1.00\n985.67\n61.61\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\ncupper_points\n0\n1.00\n750.34\n47.35\n0\n725\n750\n775\n1000\n▁▁▁▇▁\n\n\ncategory_one_defects\n0\n1.00\n0.48\n2.55\n0\n0\n0\n0\n63\n▇▁▁▁▁\n\n\nquakers\n1\n1.00\n0.17\n0.83\n0\n0\n0\n0\n11\n▇▁▁▁▁\n\n\ncategory_two_defects\n0\n1.00\n3.56\n5.31\n0\n0\n2\n4\n55\n▇▁▁▁▁\n\n\naltitude_low_meters\n230\n0.83\n17507133.15\n86694405.45\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\naltitude_high_meters\n230\n0.83\n17993477.75\n86688057.71\n10000\n11000000\n13500000\n16500000\n1901640000\n▇▁▁▁▁\n\n\naltitude_mean_meters\n230\n0.83\n17750305.45\n86686260.80\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\n\n\n\n.\n\n\nWhich variables to choose as category to label by?\n\n## looking at just country_of_origin\ncoffee %&gt;% \n  count(country_of_origin) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 37 × 2\n   country_of_origin                n\n   &lt;chr&gt;                        &lt;int&gt;\n 1 Mexico                         236\n 2 Colombia                       183\n 3 Guatemala                      181\n 4 Brazil                         132\n 5 Taiwan                          75\n 6 United States (Hawaii)          73\n 7 Honduras                        53\n 8 Costa Rica                      51\n 9 Ethiopia                        44\n10 Tanzania, United Republic Of    40\n# ℹ 27 more rows\n\n##\n## This works as a good categorical variable to sort by, as it has a workable amount of levels and few missing entries.\n\n.\n\n## looking at just variety\ncoffee %&gt;% \n  count(variety) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 30 × 2\n   variety            n\n   &lt;chr&gt;          &lt;int&gt;\n 1 Caturra          256\n 2 Bourbon          226\n 3 &lt;NA&gt;             226\n 4 Typica           211\n 5 Other            110\n 6 Catuai            74\n 7 Hawaiian Kona     44\n 8 Yellow Bourbon    35\n 9 Mundo Novo        33\n10 Catimor           20\n# ℹ 20 more rows\n\n##\n## though this could be a describing factor, it has too many missing rows.\n\n.\n\n## looking at just moisture\ncoffee %&gt;% \n  count(moisture) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 23 × 2\n   moisture     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 0,11       383\n 2 0,12       294\n 3 0,00       264\n 4 0,10       182\n 5 0,13        76\n 6 0,09        27\n 7 0,14        23\n 8 0,08        16\n 9 0,01        15\n10 0,05         8\n# ℹ 13 more rows\n\n##\n##Though this technically works as a categorical variable, its somewhat too specific to work with. It's not as relatable as, lets say, country_of_origin.\n\n.\n\n## looking at harvest_year only\ncoffee %&gt;% \n  count(harvest_year) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 47 × 2\n   harvest_year     n\n   &lt;chr&gt;        &lt;int&gt;\n 1 2012           354\n 2 2014           233\n 3 2013           181\n 4 2015           129\n 5 2016           124\n 6 2017            70\n 7 &lt;NA&gt;            47\n 8 2013/2014       29\n 9 2015/2016       28\n10 2011            26\n# ℹ 37 more rows\n\n##\n## this would also technically work, but does it make sense? it's more of a reference. Perhaps more relavent in a universe with  time travel :p\n\n.\n\n## looking at processing_methods only\ncoffee %&gt;% \n  count(processing_method) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 6 × 2\n  processing_method             n\n  &lt;chr&gt;                     &lt;int&gt;\n1 Washed / Wet                815\n2 Natural / Dry               258\n3 &lt;NA&gt;                        170\n4 Semi-washed / Semi-pulped    56\n5 Other                        26\n6 Pulped natural / honey       14\n\n##\n## this variable works well in terms of categorization for a ranking purpose. The potential questions that can stem from this variable also make sense, i.e, How does processing method rank in terms of so-and-so flovour attributes?\n\n.\nLooking at quant variables… Any Insights?\n\nfavstats(~total_cup_points, data = coffee)\n\n min   Q1 median   Q3  max     mean       sd    n missing\n   0 8108   8250 8367 9058 8208.985 350.0575 1339       0\n\n\n.\n.\n\n\n\nThere are 43 coloumns and 1339 rows in this data set. As not all of them are relevant for the chart that is to be made, only the relevant variables (and some others) are discussed below.\n.\n\n\n\nspecies : describes the species of harvest, either Arabica, which makes up most of this data set or Robusta, which makes up only 2%.\ncountry_of_origin : describes the country in which the coffee was harvested, totally 36 in this data set, of which 60% is covered by just 5.\nharvest_year : the year in which the batch of coffee was harvested.\nvariety : 29 kinds, variety describes the subcategory under species of the coffee batch.\nprocessing_method : 5 different ways by which coffee is processed\nmoisture : A scale for measuring the moisture content of the coffee, as it plays an important role when it comes to roasting, etc.\ncolor : There are 4 kids of colours that describe the coffee in this data set, of which Green does so for the majority.\n\n.\n\n\n\n\ntotal_cup_points :  a numerical rating that indicates the overall quality of the coffee.\naroma : A key factor in how consumers perceive coffee, describes a s a scale.\nflavor : A scale to assess the flavour of the coffee as a factor of quality.\naftertaste : assesses the lenght of flavour left in the mouth after swallowing the coffee.\nacidity : assesses the pH value of the coffee.\nbody : describes and rates the mouthfeel or heaviness of a coffee on a scale.\nsweetness : describes the….drumroll please… sweetness (!?) of the coffee, and is affected by how the coffee is produced.\n\n.\n.\n\n\n\n\n.\n\ncoffee_mod &lt;- coffee %&gt;%\n  ##drop_na() %&gt;% \n  mutate (\n    country_of_origin = as_factor(country_of_origin),\n    total_cup_points = total_cup_points/100,\n    aroma = aroma/100,\n    flavor = flavor/100,\n    aftertaste = aftertaste/100,\n    acidity = acidity/100,\n    body = body/100\n  )\ncoffee_mod\n\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1             90.6 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… &lt;NA&gt;       &lt;NA&gt; \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… &lt;NA&gt;       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 6             88.8 Arabica ji-ae … Brazil             &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; \n 7             88.8 Arabica hugo v… Peru               &lt;NA&gt;     &lt;NA&gt;       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… &lt;NA&gt;       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number &lt;chr&gt;, company &lt;chr&gt;, altitude &lt;chr&gt;,\n#   region &lt;chr&gt;, producer &lt;chr&gt;, number_of_bags &lt;dbl&gt;, bag_weight &lt;chr&gt;,\n#   in_country_partner &lt;chr&gt;, harvest_year &lt;chr&gt;, grading_date &lt;chr&gt;,\n#   owner_1 &lt;chr&gt;, variety &lt;chr&gt;, processing_method &lt;chr&gt;, aroma &lt;dbl&gt;,\n#   flavor &lt;dbl&gt;, aftertaste &lt;dbl&gt;, acidity &lt;dbl&gt;, body &lt;dbl&gt;, balance &lt;dbl&gt;,\n#   uniformity &lt;dbl&gt;, clean_cup &lt;dbl&gt;, sweetness &lt;dbl&gt;, cupper_points &lt;dbl&gt;, …\n\n\n.\n\n## viewing the dataset:\ndatatable(coffee_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis is an extensive data set that covers a lot of detail, both in terms of qualitative and quantitative information.\n\n\n\nsome coloumns, such as ico_number, have as much as 847 rows missing.\nmany variables fall under broader categories, like rating, production, description etc. As a result, a lot of them seem to describe similar factors.\nHow does one assess subjective aspects such as flavor and assign it a numerical value?\n19% of the rows in country_of_origin is Mexico\nA good visualization for variables in this data set would be geometric charts for ratings and rankings!\n\n.\n\n\n\n\n.\n\n\nAmong the country_of_origin with the 5 highest average total_cup_points, how do the average ratings vary in ranks on the other coffee parameters?\n\nWhy this somewhat long-winded question? Why all this averagestuff?\nSince this data set has many variables in both qualitative and quantitative categories, the research question ends up being long-winded. The question must be specific enough for the resulting plots to be meaningful.\n.\nThe average or mean becomes important when looking at multiple distributions - it helps provide a general idea. The countries by highest total_cup_points are not those with the highest mean of total_cup_points.\nWhy country_of_origin? Are there any other options?\nAs discussed earlier while following the first breadcrumb, there are other options that would work technically - but the output produced would not be consequential in the grand scheme of things.\n\n.\n\n## Grouping and summarizing by only the variables relavent to the research question\n##\ncoffee_modA &lt;- coffee_mod %&gt;% \n  group_by(country_of_origin) %&gt;% \n  summarize( total_cup_points, aroma, flavor, aftertaste, acidity, body)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'country_of_origin'. You can override using\nthe `.groups` argument.\n\n##\ncoffee_modA\n\n# A tibble: 1,339 × 7\n# Groups:   country_of_origin [37]\n   country_of_origin total_cup_points aroma flavor aftertaste acidity  body\n   &lt;fct&gt;                        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Ethiopia                      90.6  8.67   8.83       8.67    8.75  8.5 \n 2 Ethiopia                      89.9  8.75   8.67       8.5     8.58  8.42\n 3 Ethiopia                      89    8.17   8.58       8.42    8.42  8.5 \n 4 Ethiopia                      88.8  8.25   8.5        8.25    8.5   8.42\n 5 Ethiopia                      88.7  8.25   8.33       8.5     8.42  8.33\n 6 Ethiopia                      88.4  8.67   8.67       8.58    8.42  8.33\n 7 Ethiopia                      88.2  8.08   8.58       8.5     8.5   7.67\n 8 Ethiopia                      88.1  8.17   8.67       8.25    8.5   7.75\n 9 Ethiopia                      87.8  8.25   8.33       8.5     8.25  8.58\n10 Ethiopia                      87.3  8.17   8.33       8.25    8.33  8.42\n# ℹ 1,329 more rows\n\n\n.\n\n\n\n\n## Arriving at the mean of each parameter, to get an overview by country_of_origin arranged in descending order of highest total_cup_points\n##\ncoffee_modB &lt;- coffee_mod %&gt;%\n  group_by(country_of_origin) %&gt;% \n  summarize(total_points_mean = mean(total_cup_points), \n             aroma_mean = mean(aroma), \n             flavor_mean = mean(flavor), \n             aftertaste_mean = mean(aftertaste), \n             acidity_mean = mean(acidity), \n             body_mean = mean(body)\n             ) %&gt;% \n  arrange(desc(total_points_mean)) %&gt;% head(5)\n##\ncoffee_modB\n\n# A tibble: 5 × 7\n  country_of_origin total_points_mean aroma_mean flavor_mean aftertaste_mean\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea               85.8       8.33        8.42            7.83\n2 Ethiopia                       85.5       7.90        8.01            7.89\n3 Japan                          84.7       7.75        7.75            7.75\n4 United States                  84.4       7.83        7.99            7.85\n5 Kenya                          84.3       7.79        7.78            7.71\n# ℹ 2 more variables: acidity_mean &lt;dbl&gt;, body_mean &lt;dbl&gt;\n\n\n.\n\n\n\n\n## Converting the means into ranks - assigning each parameter a value from 1-5\n##\ncoffee_modC &lt;- coffee_modB %&gt;% \n  mutate(\n    total_points_rank = rank(total_points_mean),\n    aroma_rank = rank(aroma_mean),\n    flavor_rank = rank(flavor_mean),\n    aftertaste_rank = rank(aftertaste_mean),\n    acidity_rank = rank(acidity_mean),\n    body_rank = rank(body_mean)\n  ) %&gt;% \n  select(-total_points_mean, -aroma_mean, -flavor_mean, -aftertaste_mean, -acidity_mean, -body_mean)\n##\ncoffee_modC\n\n# A tibble: 5 × 7\n  country_of_origin total_points_rank aroma_rank flavor_rank aftertaste_rank\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea                  5          5           5               3\n2 Ethiopia                          4          4           4               5\n3 Japan                             3          1           1               2\n4 United States                     2          3           3               4\n5 Kenya                             1          2           2               1\n# ℹ 2 more variables: acidity_rank &lt;dbl&gt;, body_rank &lt;dbl&gt;\n\n\n.\n\n\n\n\n## putting all the parameter ranks under the coloumn of 'parameter'\n##\ncoffee_modD &lt;- coffee_modC %&gt;% \n  pivot_longer( \n    cols = c(total_points_rank, aroma_rank, flavor_rank, aftertaste_rank, acidity_rank, body_rank),\n    cols_vary = \"fastest\",\n    names_to = \"parameter\",\n    values_to = \"ranks\")\n##\ncoffee_modD\n\n# A tibble: 30 × 3\n   country_of_origin parameter         ranks\n   &lt;fct&gt;             &lt;chr&gt;             &lt;dbl&gt;\n 1 Papua New Guinea  total_points_rank     5\n 2 Papua New Guinea  aroma_rank            5\n 3 Papua New Guinea  flavor_rank           5\n 4 Papua New Guinea  aftertaste_rank       3\n 5 Papua New Guinea  acidity_rank          5\n 6 Papua New Guinea  body_rank             4\n 7 Ethiopia          total_points_rank     4\n 8 Ethiopia          aroma_rank            4\n 9 Ethiopia          flavor_rank           4\n10 Ethiopia          aftertaste_rank       5\n# ℹ 20 more rows\n\n\n.\n\n## plotting the bump chart\n##\nggplot(coffee_modD, aes(x = parameter, y = ranks, color = country_of_origin, group = country_of_origin)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(  \"acidity_rank\", \"aftertaste_rank\",\"aroma_rank\",\"body_rank\",\"total_points_rank\", \"flavor_rank\"),\n    labels = c( \"Acidity\", \"Aftertaste\",\"Aroma\",\"Body\",\"Total\", \"Flavor\" )\n    ) + \n  labs(title = \"Coffee Parameter Ranks by Country of Origin\",\n       x = \"Coffee Parameters\",\n       y = \"Rank\",\n       color = \"Country of Origin\") +\n  theme_minimal() +  # Use a minimal theme\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n.\n\n\n.\n\nIdentify the type of charts\nBump Charts!\n.\nIdentify the variables used for various geometrical aspects (x, y, fill…). Name the variables appropriately.\n\nx  = parameter would be the coffee parameters, which include the levels of aroma, acidity, aftertaste, flavor, body and total_points\ny = ranks would be the ranks assigned to each country of origin based on their mean from each parameter. 5 would be highest and 1 would be lowest, in the case of the plot shown here.\nfill/colour/group = country_of_origin would be the variable that is being ranked. It describes where the coffee originates from.\n\n.\nWhat research activity might have been carried out to obtain the data graphed here? Provide some details.\nIn terms of a research activity, it could have possibly been some sort of survey or inspection on coffee beans from coffee estates around the world. Not only does this data set describe how the coffee was sourced and its characteristics during harvest, but also how the coffee is perceived from a consumer’s point of view. This would mean that the survey spanned right from production to consumption. Perhaps to gain insight as to which methods of production and processing work best in different regions, to make the most out of every region? It could have also been a study on how environmental factors affect the end product coffee beans.\n.\nWhat might have been the Hypothesis/Research Question to which the response was Chart?\nThe research question/hypothesis that would have prompted this chart would be something along the lines of trying to figure out how the top five countries by average total cup points rank in terms of parameters such as flavor, acidity, aroma, aftertaste and so on. See Breadcrumb 2.\n.\nWrite a 2-line story based on the chart, describing your inference/surprise.\nOne of the first things we did was count the frequency of country_of_origin, and the top 5 made up for 60% of this data set, with 807 entries. This significantly increases their chances of being in the top 5 by total_cup_points - and so, the means were calculated instead.\nWould you look at that! not a single appearance in the top 5, most surprisingly Brazil: the largest coffee producer in the world.\n\n.\n.\n\n\n\ncoffee_modC &lt;- coffee_modB %&gt;% mutate(across(ends_with(\"_mean\"), rank)) %&gt;% rename_with(~ gsub(\"mean\", \"rank\", .x), ends_with(\"mean\")) ## coffee_modC\ncoffee_modD %&gt;% ggplot(aes(x = parameter, y = ranks, color = country_of_origin)) + geom_bump(size = 2) + geom_point( size = 6 ) + xlab(\"Coffee Parameters\") + ylab(\"Ranks\") + scale_color_brewer(palette = \"RdBu\") + # Change Colour Scale scale_x_discrete(limits = c(\"aroma_rank\",\"flavor_rank\", \"aftertaste_rank\" ,\"acidity_rank\",\"body_rank\")) # Check warning here..."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#introduction",
    "href": "posts/A2 - Case Study 2/index.html#introduction",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "The data set observed in this case study goes over 1339 coffee harvests, discussing their country of origin, region, owners, companies, variety, colour, and such, along with parameters such as their total cup score, aroma, sweetness, flavour, acidity, aftertaste etc. Totally, this data set has 43 columns.\n.\nLike Hansel and Gretel, I follow the breadcrumbs till the end :P\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#examining-data",
    "href": "posts/A2 - Case Study 2/index.html#examining-data",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "coffee &lt;- read_delim( file = \"../../Data/coffee-ratings.csv\", delim = \";\") %&gt;% glimpse()\n\nRows: 1339 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (25): species, owner, country_of_origin, farm_name, lot_number, mill, ic...\ndbl  (4): number_of_bags, category_one_defects, quakers, category_two_defects\nnum (14): total_cup_points, aroma, flavor, aftertaste, acidity, body, balanc...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 1,339\nColumns: 43\n$ total_cup_points      &lt;dbl&gt; 9058, 8992, 8975, 8900, 8883, 8883, 8875, 8867, …\n$ species               &lt;chr&gt; \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 &lt;chr&gt; \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     &lt;chr&gt; \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             &lt;chr&gt; \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  &lt;chr&gt; \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            &lt;chr&gt; \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               &lt;chr&gt; \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              &lt;chr&gt; \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                &lt;chr&gt; \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              &lt;chr&gt; \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        &lt;dbl&gt; 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            &lt;chr&gt; \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          &lt;chr&gt; \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          &lt;chr&gt; \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               &lt;chr&gt; \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               &lt;chr&gt; NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     &lt;chr&gt; \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 &lt;dbl&gt; 867, 875, 842, 817, 825, 858, 842, 825, 867, 808…\n$ flavor                &lt;dbl&gt; 883, 867, 850, 858, 850, 842, 850, 833, 867, 858…\n$ aftertaste            &lt;dbl&gt; 867, 850, 842, 842, 825, 842, 833, 850, 858, 850…\n$ acidity               &lt;dbl&gt; 875, 858, 842, 842, 850, 850, 850, 842, 842, 850…\n$ body                  &lt;dbl&gt; 850, 842, 833, 850, 842, 825, 825, 833, 833, 767…\n$ balance               &lt;dbl&gt; 842, 842, 842, 825, 833, 833, 825, 850, 842, 842…\n$ uniformity            &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ clean_cup             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ sweetness             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 933, 9…\n$ cupper_points         &lt;dbl&gt; 875, 858, 925, 867, 858, 833, 850, 900, 867, 850…\n$ moisture              &lt;chr&gt; \"0,12\", \"0,12\", \"0,00\", \"0,11\", \"0,12\", \"0,11\", …\n$ category_one_defects  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 &lt;chr&gt; \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  &lt;dbl&gt; 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            &lt;chr&gt; \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address &lt;chr&gt; \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact &lt;chr&gt; \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   &lt;chr&gt; \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   &lt;dbl&gt; 19500000, 19500000, 16000000, 18000000, 19500000…\n$ altitude_high_meters  &lt;dbl&gt; 22000000, 22000000, 18000000, 22000000, 22000000…\n$ altitude_mean_meters  &lt;dbl&gt; 20750000, 20750000, 17000000, 20000000, 20750000…\n\n\n.\n\ncoffee %&gt;% inspect()\n\n\ncategorical variables:  \n                    name     class levels    n missing\n1                species character      2 1339       0\n2                  owner character    315 1332       7\n3      country_of_origin character     36 1338       1\n4              farm_name character    571  980     359\n5             lot_number character    227  276    1063\n6                   mill character    460 1024     315\n7             ico_number character    847 1188     151\n8                company character    281 1130     209\n9               altitude character    396 1113     226\n10                region character    356 1280      59\n11              producer character    691 1108     231\n12            bag_weight character     56 1339       0\n13    in_country_partner character     27 1339       0\n14          harvest_year character     46 1292      47\n15          grading_date character    567 1339       0\n16               owner_1 character    319 1332       7\n17               variety character     29 1113     226\n18     processing_method character      5 1169     170\n19              moisture character     23 1339       0\n20                 color character      4 1121     218\n21            expiration character    566 1339       0\n22    certification_body character     26 1339       0\n23 certification_address character     32 1339       0\n24 certification_contact character     29 1339       0\n25   unit_of_measurement character      2 1339       0\n                                    distribution\n1  Arabica (97.9%), Robusta (2.1%)              \n2  juan luis alvarado romero (11.6%) ...        \n3  Mexico (17.6%), Colombia (13.7%) ...         \n4  various (4.8%), rio verde (2.3%) ...         \n5  1 (6.5%), 020/17 (2.2%) ...                  \n6  beneficio ixchel (8.8%) ...                  \n7  0 (6.5%), Taiwan (2.6%) ...                  \n8  unex guatemala, s.a. (7.6%) ...              \n9  1100 (3.9%), 1200 (3.8%) ...                 \n10 huila (8.8%), oriente (6.2%) ...             \n11 La Plata (2.7%) ...                          \n12 1 kg (24.7%), 60 kg (19.1%) ...              \n13 Specialty Coffee Association (23.4%) ...     \n14 2012 (27.4%), 2014 (18%) ...                 \n15 July 11th, 2012 (1.9%) ...                   \n16 Juan Luis Alvarado Romero (11.6%) ...        \n17 Caturra (23%), Bourbon (20.3%) ...           \n18 Washed / Wet (69.7%) ...                     \n19 0,11 (28.6%), 0,12 (22%) ...                 \n20 Green (77.6%), Bluish-Green (10.2%) ...      \n21 December 26th, 2014 (1.9%) ...               \n22 Specialty Coffee Association (23.4%) ...     \n23  (%) ...                                     \n24  (%) ...                                     \n25 m (86.4%), ft (13.6%)                        \n\nquantitative variables:  \n                   name   class   min       Q1   median       Q3        max\n1      total_cup_points numeric     0     8108     8250     8367       9058\n2        number_of_bags numeric     0       14      175      275       1062\n3                 aroma numeric     0      742      758      775        875\n4                flavor numeric     0      733      758      775        883\n5            aftertaste numeric     0      725      742      758        867\n6               acidity numeric     0      733      758      775        875\n7                  body numeric     0      733      750      767        858\n8               balance numeric     0      733      750      775        875\n9            uniformity numeric     0     1000     1000     1000       1000\n10            clean_cup numeric     0     1000     1000     1000       1000\n11            sweetness numeric     0     1000     1000     1000       1000\n12        cupper_points numeric     0      725      750      775       1000\n13 category_one_defects numeric     0        0        0        0         63\n14              quakers numeric     0        0        0        0         11\n15 category_two_defects numeric     0        0        2        4         55\n16  altitude_low_meters numeric 10000 11000000 13106400 16000000 1901640000\n17 altitude_high_meters numeric 10000 11000000 13500000 16500000 1901640000\n18 altitude_mean_meters numeric 10000 11000000 13106400 16000000 1901640000\n           mean           sd    n missing\n1  8.208985e+03 3.500575e+02 1339       0\n2  1.541830e+02 1.299872e+02 1339       0\n3  7.566706e+02 3.775600e+01 1339       0\n4  7.520426e+02 3.984421e+01 1339       0\n5  7.401083e+02 4.044634e+01 1339       0\n6  7.535706e+02 3.798267e+01 1339       0\n7  7.517498e+02 3.700639e+01 1339       0\n8  7.518013e+02 4.089433e+01 1339       0\n9  9.834877e+02 5.545906e+01 1339       0\n10 9.835108e+02 7.639459e+01 1339       0\n11 9.856692e+02 6.161020e+01 1339       0\n12 7.503376e+02 4.734643e+01 1339       0\n13 4.794623e-01 2.549683e+00 1339       0\n14 1.733931e-01 8.321210e-01 1338       1\n15 3.556385e+00 5.312541e+00 1339       0\n16 1.750713e+07 8.669441e+07 1109     230\n17 1.799348e+07 8.668806e+07 1109     230\n18 1.775031e+07 8.668626e+07 1109     230\n\n\n\ncoffee %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1339\n\n\nNumber of columns\n43\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n25\n\n\nnumeric\n18\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nspecies\n0\n1.00\n7\n7\n0\n2\n0\n\n\nowner\n7\n0.99\n3\n50\n0\n315\n0\n\n\ncountry_of_origin\n1\n1.00\n4\n28\n0\n36\n0\n\n\nfarm_name\n359\n0.73\n1\n73\n0\n571\n0\n\n\nlot_number\n1063\n0.21\n1\n71\n0\n227\n0\n\n\nmill\n315\n0.76\n1\n77\n0\n460\n0\n\n\nico_number\n151\n0.89\n1\n40\n0\n847\n0\n\n\ncompany\n209\n0.84\n3\n73\n0\n281\n0\n\n\naltitude\n226\n0.83\n1\n41\n0\n396\n0\n\n\nregion\n59\n0.96\n2\n76\n0\n356\n0\n\n\nproducer\n231\n0.83\n1\n100\n0\n691\n0\n\n\nbag_weight\n0\n1.00\n1\n8\n0\n56\n0\n\n\nin_country_partner\n0\n1.00\n7\n85\n0\n27\n0\n\n\nharvest_year\n47\n0.96\n3\n24\n0\n46\n0\n\n\ngrading_date\n0\n1.00\n13\n20\n0\n567\n0\n\n\nowner_1\n7\n0.99\n3\n50\n0\n319\n0\n\n\nvariety\n226\n0.83\n4\n21\n0\n29\n0\n\n\nprocessing_method\n170\n0.87\n5\n25\n0\n5\n0\n\n\nmoisture\n0\n1.00\n4\n4\n0\n23\n0\n\n\ncolor\n218\n0.84\n4\n12\n0\n4\n0\n\n\nexpiration\n0\n1.00\n13\n20\n0\n566\n0\n\n\ncertification_body\n0\n1.00\n7\n85\n0\n26\n0\n\n\ncertification_address\n0\n1.00\n40\n40\n0\n32\n0\n\n\ncertification_contact\n0\n1.00\n40\n40\n0\n29\n0\n\n\nunit_of_measurement\n0\n1.00\n1\n2\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal_cup_points\n0\n1.00\n8208.99\n350.06\n0\n8108\n8250\n8367\n9058\n▁▁▁▁▇\n\n\nnumber_of_bags\n0\n1.00\n154.18\n129.99\n0\n14\n175\n275\n1062\n▇▇▁▁▁\n\n\naroma\n0\n1.00\n756.67\n37.76\n0\n742\n758\n775\n875\n▁▁▁▁▇\n\n\nflavor\n0\n1.00\n752.04\n39.84\n0\n733\n758\n775\n883\n▁▁▁▁▇\n\n\naftertaste\n0\n1.00\n740.11\n40.45\n0\n725\n742\n758\n867\n▁▁▁▁▇\n\n\nacidity\n0\n1.00\n753.57\n37.98\n0\n733\n758\n775\n875\n▁▁▁▁▇\n\n\nbody\n0\n1.00\n751.75\n37.01\n0\n733\n750\n767\n858\n▁▁▁▁▇\n\n\nbalance\n0\n1.00\n751.80\n40.89\n0\n733\n750\n775\n875\n▁▁▁▁▇\n\n\nuniformity\n0\n1.00\n983.49\n55.46\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nclean_cup\n0\n1.00\n983.51\n76.39\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nsweetness\n0\n1.00\n985.67\n61.61\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\ncupper_points\n0\n1.00\n750.34\n47.35\n0\n725\n750\n775\n1000\n▁▁▁▇▁\n\n\ncategory_one_defects\n0\n1.00\n0.48\n2.55\n0\n0\n0\n0\n63\n▇▁▁▁▁\n\n\nquakers\n1\n1.00\n0.17\n0.83\n0\n0\n0\n0\n11\n▇▁▁▁▁\n\n\ncategory_two_defects\n0\n1.00\n3.56\n5.31\n0\n0\n2\n4\n55\n▇▁▁▁▁\n\n\naltitude_low_meters\n230\n0.83\n17507133.15\n86694405.45\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\naltitude_high_meters\n230\n0.83\n17993477.75\n86688057.71\n10000\n11000000\n13500000\n16500000\n1901640000\n▇▁▁▁▁\n\n\naltitude_mean_meters\n230\n0.83\n17750305.45\n86686260.80\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\n\n\n\n.\n\n\nWhich variables to choose as category to label by?\n\n## looking at just country_of_origin\ncoffee %&gt;% \n  count(country_of_origin) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 37 × 2\n   country_of_origin                n\n   &lt;chr&gt;                        &lt;int&gt;\n 1 Mexico                         236\n 2 Colombia                       183\n 3 Guatemala                      181\n 4 Brazil                         132\n 5 Taiwan                          75\n 6 United States (Hawaii)          73\n 7 Honduras                        53\n 8 Costa Rica                      51\n 9 Ethiopia                        44\n10 Tanzania, United Republic Of    40\n# ℹ 27 more rows\n\n##\n## This works as a good categorical variable to sort by, as it has a workable amount of levels and few missing entries.\n\n.\n\n## looking at just variety\ncoffee %&gt;% \n  count(variety) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 30 × 2\n   variety            n\n   &lt;chr&gt;          &lt;int&gt;\n 1 Caturra          256\n 2 Bourbon          226\n 3 &lt;NA&gt;             226\n 4 Typica           211\n 5 Other            110\n 6 Catuai            74\n 7 Hawaiian Kona     44\n 8 Yellow Bourbon    35\n 9 Mundo Novo        33\n10 Catimor           20\n# ℹ 20 more rows\n\n##\n## though this could be a describing factor, it has too many missing rows.\n\n.\n\n## looking at just moisture\ncoffee %&gt;% \n  count(moisture) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 23 × 2\n   moisture     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 0,11       383\n 2 0,12       294\n 3 0,00       264\n 4 0,10       182\n 5 0,13        76\n 6 0,09        27\n 7 0,14        23\n 8 0,08        16\n 9 0,01        15\n10 0,05         8\n# ℹ 13 more rows\n\n##\n##Though this technically works as a categorical variable, its somewhat too specific to work with. It's not as relatable as, lets say, country_of_origin.\n\n.\n\n## looking at harvest_year only\ncoffee %&gt;% \n  count(harvest_year) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 47 × 2\n   harvest_year     n\n   &lt;chr&gt;        &lt;int&gt;\n 1 2012           354\n 2 2014           233\n 3 2013           181\n 4 2015           129\n 5 2016           124\n 6 2017            70\n 7 &lt;NA&gt;            47\n 8 2013/2014       29\n 9 2015/2016       28\n10 2011            26\n# ℹ 37 more rows\n\n##\n## this would also technically work, but does it make sense? it's more of a reference. Perhaps more relavent in a universe with  time travel :p\n\n.\n\n## looking at processing_methods only\ncoffee %&gt;% \n  count(processing_method) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 6 × 2\n  processing_method             n\n  &lt;chr&gt;                     &lt;int&gt;\n1 Washed / Wet                815\n2 Natural / Dry               258\n3 &lt;NA&gt;                        170\n4 Semi-washed / Semi-pulped    56\n5 Other                        26\n6 Pulped natural / honey       14\n\n##\n## this variable works well in terms of categorization for a ranking purpose. The potential questions that can stem from this variable also make sense, i.e, How does processing method rank in terms of so-and-so flovour attributes?\n\n.\nLooking at quant variables… Any Insights?\n\nfavstats(~total_cup_points, data = coffee)\n\n min   Q1 median   Q3  max     mean       sd    n missing\n   0 8108   8250 8367 9058 8208.985 350.0575 1339       0\n\n\n.\n.\n\n\n\nThere are 43 coloumns and 1339 rows in this data set. As not all of them are relevant for the chart that is to be made, only the relevant variables (and some others) are discussed below.\n.\n\n\n\nspecies : describes the species of harvest, either Arabica, which makes up most of this data set or Robusta, which makes up only 2%.\ncountry_of_origin : describes the country in which the coffee was harvested, totally 36 in this data set, of which 60% is covered by just 5.\nharvest_year : the year in which the batch of coffee was harvested.\nvariety : 29 kinds, variety describes the subcategory under species of the coffee batch.\nprocessing_method : 5 different ways by which coffee is processed\nmoisture : A scale for measuring the moisture content of the coffee, as it plays an important role when it comes to roasting, etc.\ncolor : There are 4 kids of colours that describe the coffee in this data set, of which Green does so for the majority.\n\n.\n\n\n\n\ntotal_cup_points :  a numerical rating that indicates the overall quality of the coffee.\naroma : A key factor in how consumers perceive coffee, describes a s a scale.\nflavor : A scale to assess the flavour of the coffee as a factor of quality.\naftertaste : assesses the lenght of flavour left in the mouth after swallowing the coffee.\nacidity : assesses the pH value of the coffee.\nbody : describes and rates the mouthfeel or heaviness of a coffee on a scale.\nsweetness : describes the….drumroll please… sweetness (!?) of the coffee, and is affected by how the coffee is produced.\n\n.\n.\n\n\n\n\n.\n\ncoffee_mod &lt;- coffee %&gt;%\n  ##drop_na() %&gt;% \n  mutate (\n    country_of_origin = as_factor(country_of_origin),\n    total_cup_points = total_cup_points/100,\n    aroma = aroma/100,\n    flavor = flavor/100,\n    aftertaste = aftertaste/100,\n    acidity = acidity/100,\n    body = body/100\n  )\ncoffee_mod\n\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1             90.6 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… &lt;NA&gt;       &lt;NA&gt; \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… &lt;NA&gt;       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 6             88.8 Arabica ji-ae … Brazil             &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; \n 7             88.8 Arabica hugo v… Peru               &lt;NA&gt;     &lt;NA&gt;       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… &lt;NA&gt;       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number &lt;chr&gt;, company &lt;chr&gt;, altitude &lt;chr&gt;,\n#   region &lt;chr&gt;, producer &lt;chr&gt;, number_of_bags &lt;dbl&gt;, bag_weight &lt;chr&gt;,\n#   in_country_partner &lt;chr&gt;, harvest_year &lt;chr&gt;, grading_date &lt;chr&gt;,\n#   owner_1 &lt;chr&gt;, variety &lt;chr&gt;, processing_method &lt;chr&gt;, aroma &lt;dbl&gt;,\n#   flavor &lt;dbl&gt;, aftertaste &lt;dbl&gt;, acidity &lt;dbl&gt;, body &lt;dbl&gt;, balance &lt;dbl&gt;,\n#   uniformity &lt;dbl&gt;, clean_cup &lt;dbl&gt;, sweetness &lt;dbl&gt;, cupper_points &lt;dbl&gt;, …\n\n\n.\n\n## viewing the dataset:\ndatatable(coffee_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis is an extensive data set that covers a lot of detail, both in terms of qualitative and quantitative information.\n\n\n\nsome coloumns, such as ico_number, have as much as 847 rows missing.\nmany variables fall under broader categories, like rating, production, description etc. As a result, a lot of them seem to describe similar factors.\nHow does one assess subjective aspects such as flavor and assign it a numerical value?\n19% of the rows in country_of_origin is Mexico\nA good visualization for variables in this data set would be geometric charts for ratings and rankings!\n\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html",
    "href": "posts/A2 - Case Study 3/index.html",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "Check out the Assignment here!\n.\n\n\nThe data set observed in this case study goes over 32 occupations, discussing their number of workers, total earnings, proportion of male and female workers, and their wage percentages.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(DT)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:mosaic':\n\n    rescale\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n.\n.\n\n\n\n\n\njobgender &lt;- read_delim(file = \"../../Data/job_gender_data.csv\", delim = \";\" ) %&gt;% glimpse()\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (3): occupation, major_category, minor_category\ndbl (7): year, total_workers, workers_male, workers_female, total_earnings, ...\nnum (2): percent_female, wage_percent_of_male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 32\nColumns: 12\n$ year                  &lt;dbl&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 8.855491e+14, 8.992731e+14, 5.456222e+14, 8.7135…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\njobgender %&gt;% inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1     occupation character     32 32       0\n2 major_category character      1 32       0\n3 minor_category character      1 32       0\n                                   distribution\n1 Audiologists (3.1%) ...                      \n2  (%) ...                                     \n3  (%) ...                                     \n\nquantitative variables:  \n                   name   class          min           Q1       median\n1                  year numeric 2.016000e+03 2.016000e+03 2.016000e+03\n2         total_workers numeric 4.001000e+03 3.750350e+04 8.978400e+04\n3          workers_male numeric 0.000000e+00 7.437000e+03 2.608100e+04\n4        workers_female numeric 9.530000e+02 1.375975e+04 5.753250e+04\n5        percent_female numeric 1.564090e+14 5.738413e+14 6.703936e+14\n6        total_earnings numeric 3.246600e+04 4.942325e+04 6.443150e+04\n7   total_earnings_male numeric 3.609300e+04 5.111500e+04 7.095200e+04\n8 total_earnings_female numeric 3.209300e+04 4.846225e+04 6.012800e+04\n9  wage_percent_of_male numeric 6.643337e+14 8.020231e+14 8.666381e+14\n            Q3          max         mean           sd  n missing\n1 2.016000e+03 2.016000e+03 2.016000e+03 0.000000e+00 32       0\n2 1.637307e+05 2.317493e+06 2.049671e+05 4.208274e+05 32       0\n3 6.672025e+04 4.897480e+05 5.645797e+04 9.613719e+04 32       0\n4 1.060613e+05 2.036445e+06 1.485091e+05 3.617156e+05 32       0\n5 8.657607e+14 1.000000e+15 6.517922e+14 2.274756e+14 32       0\n6 1.008672e+05 2.015420e+05 7.792281e+04 4.053443e+04 32       0\n7 1.073760e+05 2.314200e+05 8.478716e+04 4.538677e+04 31       1\n8 1.001310e+05 1.663880e+05 7.166166e+04 3.405611e+04 32       0\n9 9.106884e+14 1.051582e+15 8.581675e+14 1.008336e+14 24       8\n\n\n.\n.\n\n\nThere are 32 rows and 12 colomns in this data set.\n.\n\n\n\noccupation : Describes the occupations of the workers. There are 32 occupations in this data set.\nmajor_category : Describes the broader category in which the occupation falls under. There is only one category and that is Healthcare Practitioner and Technictians\nminor_category : Though it is stated as a different coloumn, it is the same as the above coloumn.\n\n\n\n\n\ntotal_workers : Describes the total number of workers in each occupation.\nworkers_male : Describes the total number of male workers in each occupation.\nworkers_female : Describes the total number of female workers in each occupation.\npercent_female : The percentage of female workers in each occupation.\ntotal_earnings : the total earnings of each occupation.\ntotal_earnings_male : the total earnings of male workers in each occupation.\ntotal_earnings_female : the total earnings of female workers in each occupation.\nwage_percentage_of_male : the percentage of earnings by males in each occupation.\n\n.\n.\n\n\n\n\n.\n\njobgender_mod &lt;- jobgender %&gt;% \n  mutate(\n    year = as_factor(year),\n    percent_female = percent_female*0.0000000000001\n  ) %&gt;% glimpse()\n\nRows: 32\nColumns: 12\n$ year                  &lt;fct&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 88.55491, 89.92731, 54.56222, 87.13566, 76.57634…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\ndatatable(jobgender_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis data set consists of only those who work in the health sector, in 2016.\n\n\n\nOnly one occupation has no males and 100% females that make up its workforce: Nurse midwives.\nTwo occupations, Dietitians and Nutritionists, as well as Medical Records and Health Information Technicians both have a wage_percent_of_male as more than 100%. How is that possible?\nThe total_earnings coloumn is most of the times, of not less than total_earnings_female and total_earnings_male coloumns, How is that possible? Have I misunderstood the data?\nIn fact, upon closer inspection, it seems to lie in the middle of total_earnings_female and total_earnings_male. Interesting. Perhaps the data has been modified, but labelled incorrectly? A case of total_earnings = median(total_earnings) ??\n\n.\n.\n\n\n\n\n.\n\n## Grouping by occupation, summarizing to obtain median_earnings\n##\njobgender_mod %&gt;%\n  group_by(occupation) %&gt;% \n  summarize(median_earnings = median(total_earnings),\n        percent_female, total_workers) %&gt;% \n  ##\n  ## plotting data after grouping and summarizing\n  ##\n  ggplot(aes(x = percent_female, y = median_earnings, size = total_workers)) +\n  geom_point(alpha = 0.7) + \n  scale_size(range = c(1, 10)) +\n  labs(title = \"Salaries and Gender Proportion in the Workforce\",\n       y = \"Median salary in the occupation\",\n       x = \"% of workforce reported as female\",\n       size = \"Total # of Workers\",\n       color = \"Category\") +\n  scale_x_continuous(labels = function(x) paste(x, \"%\")) +\n  scale_y_continuous(labels = function(y) paste(y/1000,\"K\"))+\n  theme_minimal() \n\n\n\n\n\n\n\n\n.\n.\n\n\n\n.\n\n\n.\n\nWhat kind of chart is used in the figure?\nA Scatter Plot!\n.\n\n\n\nWhat geometries have been used and to which variables have these geometries been mapped?\nThe circles represent clusters of workers by occupation, and their sizes represent the total number of workers within that occupation. The placement of the circle with regards to the x-axis defines the percentage of female workers within that cluster, and the placement of the circle with regards to the y-axis defines the median salary in that occupation.\n.\nBased on this graph, do you think gender plays a role in salaries? What is the trend you see?\nBased on this graph, its quite evident that gender plays a role in salaries. As the graph moves towards majority of the workforce as women, the dots cluster at the vottom rungs of the y-axis, indicating lower median incomes.\n.\nIf SALARY, NO_OF_WORKERS, GENDER, OCCUPATION were available in the original dataset, what pre-processing would have been necessary to obtain this plot?\nSteps for pre-processing in that case:\ndf %&gt;%\ngroup_by(occupation) %&gt;%\nsummarize(workers_female = count(gender == \"female\"),\npercent_female = (workers_female/no_of_workers)*100,\nmeadian_salary = median(salary)) %&gt;% ggplot(...)... and so on.\n\n.\n.\n\n\n\n.\n\nI prompted ChatGPT with “scatter plot with different sized dots in r, using tidyverse , ggformula, mosaic, skimr” and it came up with a sample data set and code chunk. After running the code and playing around with factors such as scale_size(range =c()), geom_point(alpha =), label inputs, as well as messing around with I had a pretty good idea of how things worked.\n.\n\n\n## ChatGPT:  Sample dataset\nset.seed(42)  # For reproducibility\ndata &lt;- tibble(\n  x = rnorm(100),                  # Random normal values for x-axis\n  y = rnorm(100),                  # Random normal values for y-axis\n  size = runif(100, 1, 10),        # Random sizes for the dots\n  category = sample(letters[1:3], 100, replace = TRUE)  # Random categories\n)\n\n.\n\n## Chat GPT: Create scatter plot with varying dot sizes\nggplot(data, aes(x = x, y = y, size = size, color = category)) +\n  geom_point(alpha = 0.7) +  # Adjust alpha for transparency\n  scale_size(range = c(1, 10)) +  # Control the size range\n  labs(title = \"Scatter Plot with Varying Dot Sizes\",\n       x = \"X-axis Label\",\n       y = \"Y-axis Label\",\n       size = \"Size Legend\",\n       color = \"Category\") +\n  theme_minimal()  # Use a minimal theme"
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#introduction",
    "href": "posts/A2 - Case Study 3/index.html#introduction",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "The data set observed in this case study goes over 32 occupations, discussing their number of workers, total earnings, proportion of male and female workers, and their wage percentages.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(DT)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:mosaic':\n\n    rescale\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#examining-data",
    "href": "posts/A2 - Case Study 3/index.html#examining-data",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "jobgender &lt;- read_delim(file = \"../../Data/job_gender_data.csv\", delim = \";\" ) %&gt;% glimpse()\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (3): occupation, major_category, minor_category\ndbl (7): year, total_workers, workers_male, workers_female, total_earnings, ...\nnum (2): percent_female, wage_percent_of_male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 32\nColumns: 12\n$ year                  &lt;dbl&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 8.855491e+14, 8.992731e+14, 5.456222e+14, 8.7135…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\njobgender %&gt;% inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1     occupation character     32 32       0\n2 major_category character      1 32       0\n3 minor_category character      1 32       0\n                                   distribution\n1 Audiologists (3.1%) ...                      \n2  (%) ...                                     \n3  (%) ...                                     \n\nquantitative variables:  \n                   name   class          min           Q1       median\n1                  year numeric 2.016000e+03 2.016000e+03 2.016000e+03\n2         total_workers numeric 4.001000e+03 3.750350e+04 8.978400e+04\n3          workers_male numeric 0.000000e+00 7.437000e+03 2.608100e+04\n4        workers_female numeric 9.530000e+02 1.375975e+04 5.753250e+04\n5        percent_female numeric 1.564090e+14 5.738413e+14 6.703936e+14\n6        total_earnings numeric 3.246600e+04 4.942325e+04 6.443150e+04\n7   total_earnings_male numeric 3.609300e+04 5.111500e+04 7.095200e+04\n8 total_earnings_female numeric 3.209300e+04 4.846225e+04 6.012800e+04\n9  wage_percent_of_male numeric 6.643337e+14 8.020231e+14 8.666381e+14\n            Q3          max         mean           sd  n missing\n1 2.016000e+03 2.016000e+03 2.016000e+03 0.000000e+00 32       0\n2 1.637307e+05 2.317493e+06 2.049671e+05 4.208274e+05 32       0\n3 6.672025e+04 4.897480e+05 5.645797e+04 9.613719e+04 32       0\n4 1.060613e+05 2.036445e+06 1.485091e+05 3.617156e+05 32       0\n5 8.657607e+14 1.000000e+15 6.517922e+14 2.274756e+14 32       0\n6 1.008672e+05 2.015420e+05 7.792281e+04 4.053443e+04 32       0\n7 1.073760e+05 2.314200e+05 8.478716e+04 4.538677e+04 31       1\n8 1.001310e+05 1.663880e+05 7.166166e+04 3.405611e+04 32       0\n9 9.106884e+14 1.051582e+15 8.581675e+14 1.008336e+14 24       8\n\n\n.\n.\n\n\nThere are 32 rows and 12 colomns in this data set.\n.\n\n\n\noccupation : Describes the occupations of the workers. There are 32 occupations in this data set.\nmajor_category : Describes the broader category in which the occupation falls under. There is only one category and that is Healthcare Practitioner and Technictians\nminor_category : Though it is stated as a different coloumn, it is the same as the above coloumn.\n\n\n\n\n\ntotal_workers : Describes the total number of workers in each occupation.\nworkers_male : Describes the total number of male workers in each occupation.\nworkers_female : Describes the total number of female workers in each occupation.\npercent_female : The percentage of female workers in each occupation.\ntotal_earnings : the total earnings of each occupation.\ntotal_earnings_male : the total earnings of male workers in each occupation.\ntotal_earnings_female : the total earnings of female workers in each occupation.\nwage_percentage_of_male : the percentage of earnings by males in each occupation.\n\n.\n.\n\n\n\n\n.\n\njobgender_mod &lt;- jobgender %&gt;% \n  mutate(\n    year = as_factor(year),\n    percent_female = percent_female*0.0000000000001\n  ) %&gt;% glimpse()\n\nRows: 32\nColumns: 12\n$ year                  &lt;fct&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 88.55491, 89.92731, 54.56222, 87.13566, 76.57634…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\ndatatable(jobgender_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis data set consists of only those who work in the health sector, in 2016.\n\n\n\nOnly one occupation has no males and 100% females that make up its workforce: Nurse midwives.\nTwo occupations, Dietitians and Nutritionists, as well as Medical Records and Health Information Technicians both have a wage_percent_of_male as more than 100%. How is that possible?\nThe total_earnings coloumn is most of the times, of not less than total_earnings_female and total_earnings_male coloumns, How is that possible? Have I misunderstood the data?\nIn fact, upon closer inspection, it seems to lie in the middle of total_earnings_female and total_earnings_male. Interesting. Perhaps the data has been modified, but labelled incorrectly? A case of total_earnings = median(total_earnings) ??\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#plotting-data",
    "href": "posts/A2 - Case Study 3/index.html#plotting-data",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": ".\n\n## Grouping by occupation, summarizing to obtain median_earnings\n##\njobgender_mod %&gt;%\n  group_by(occupation) %&gt;% \n  summarize(median_earnings = median(total_earnings),\n        percent_female, total_workers) %&gt;% \n  ##\n  ## plotting data after grouping and summarizing\n  ##\n  ggplot(aes(x = percent_female, y = median_earnings, size = total_workers)) +\n  geom_point(alpha = 0.7) + \n  scale_size(range = c(1, 10)) +\n  labs(title = \"Salaries and Gender Proportion in the Workforce\",\n       y = \"Median salary in the occupation\",\n       x = \"% of workforce reported as female\",\n       size = \"Total # of Workers\",\n       color = \"Category\") +\n  scale_x_continuous(labels = function(x) paste(x, \"%\")) +\n  scale_y_continuous(labels = function(y) paste(y/1000,\"K\"))+\n  theme_minimal() \n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 6/index.html",
    "href": "posts/Day 6/index.html",
    "title": "Day 6 - Stats Theory",
    "section": "",
    "text": "t.test\nintuitive\n\n\n\nset.seed() : random number generation, good for reproducability - the number is a label for the set of numbers generated.\nrnorm() : generates random numbers from a normal (Guassian) distribution.\ntibble() : constructs a data frame.\ngf_fitdistr() : provides an easy way to overlay a probability distribution curve onto a plot: assessing how well the theoritical distribution matches the empirical data.\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer)\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n\nlibrary(openintro) # More datasets\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments"
  },
  {
    "objectID": "posts/Day 6/index.html#introduction",
    "href": "posts/Day 6/index.html#introduction",
    "title": "Day 6 - Stats Theory",
    "section": "",
    "text": "t.test\nintuitive\n\n\n\nset.seed() : random number generation, good for reproducability - the number is a label for the set of numbers generated.\nrnorm() : generates random numbers from a normal (Guassian) distribution.\ntibble() : constructs a data frame.\ngf_fitdistr() : provides an easy way to overlay a probability distribution curve onto a plot: assessing how well the theoritical distribution matches the empirical data.\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer)\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n\nlibrary(openintro) # More datasets\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments"
  },
  {
    "objectID": "posts/Day 6/index.html#case-study-1---toy-data",
    "href": "posts/Day 6/index.html#case-study-1---toy-data",
    "title": "Day 6 - Stats Theory",
    "section": "Case Study 1 - Toy Data",
    "text": "Case Study 1 - Toy Data\n\nset.seed(40)  # for replication\n# Data as individual vectors ( for t.tests etc)\ny &lt;- rnorm(50, mean = 2, sd = 2)\n\n# And as tibble too\nmydata &lt;- tibble(y = y)\nmydata\n\n# A tibble: 50 × 1\n        y\n    &lt;dbl&gt;\n 1  2.96 \n 2  2.99 \n 3  0.281\n 4  0.342\n 5  1.36 \n 6 -0.608\n 7 -0.843\n 8  5.49 \n 9  1.42 \n10 -0.618\n# ℹ 40 more rows\n\n\n."
  },
  {
    "objectID": "posts/Day 6/index.html#inspecting-and-charting-data",
    "href": "posts/Day 6/index.html#inspecting-and-charting-data",
    "title": "Day 6 - Stats Theory",
    "section": "Inspecting and Charting Data:",
    "text": "Inspecting and Charting Data:\n.\n\n##\nmydata %&gt;%\n    gf_density(~y) %&gt;%\n    gf_fitdistr(dist = \"dnorm\") %&gt;%\n    gf_labs(title = \"Densities of Original Data Variables\", subtitle = \"Compared with Normal Density\")\n\n\n\n\n\n\n\n\n.\n\nObservations:\n\nThe variable y appear to be centred around 2\nIt does not seem to be normally distributed…\n\n."
  },
  {
    "objectID": "posts/Day 6/index.html#research-question",
    "href": "posts/Day 6/index.html#research-question",
    "title": "Day 6 - Stats Theory",
    "section": "Research Question",
    "text": "Research Question\nCould the mean of the population μ, from which y has been drawn, be zero?"
  },
  {
    "objectID": "posts/Day 6/index.html#assumptions",
    "href": "posts/Day 6/index.html#assumptions",
    "title": "Day 6 - Stats Theory",
    "section": "Assumptions",
    "text": "Assumptions"
  },
  {
    "objectID": "posts/Day 6/index.html#inference",
    "href": "posts/Day 6/index.html#inference",
    "title": "Day 6 - Stats Theory",
    "section": "Inference",
    "text": "Inference"
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#plotting-data",
    "href": "posts/A2 - Case Study 2/index.html#plotting-data",
    "title": "A2: Case Study 2",
    "section": "",
    "text": ".\n\n\nAmong the country_of_origin with the 5 highest average total_cup_points, how do the average ratings vary in ranks on the other coffee parameters?\n\nWhy this somewhat long-winded question? Why all this averagestuff?\nSince this data set has many variables in both qualitative and quantitative categories, the research question ends up being long-winded. The question must be specific enough for the resulting plots to be meaningful.\n.\nThe average or mean becomes important when looking at multiple distributions - it helps provide a general idea. The countries by highest total_cup_points are not those with the highest mean of total_cup_points.\nWhy country_of_origin? Are there any other options?\nAs discussed earlier while following the first breadcrumb, there are other options that would work technically - but the output produced would not be consequential in the grand scheme of things.\n\n.\n\n## Grouping and summarizing by only the variables relavent to the research question\n##\ncoffee_modA &lt;- coffee_mod %&gt;% \n  group_by(country_of_origin) %&gt;% \n  summarize( total_cup_points, aroma, flavor, aftertaste, acidity, body)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'country_of_origin'. You can override using\nthe `.groups` argument.\n\n##\ncoffee_modA\n\n# A tibble: 1,339 × 7\n# Groups:   country_of_origin [37]\n   country_of_origin total_cup_points aroma flavor aftertaste acidity  body\n   &lt;fct&gt;                        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Ethiopia                      90.6  8.67   8.83       8.67    8.75  8.5 \n 2 Ethiopia                      89.9  8.75   8.67       8.5     8.58  8.42\n 3 Ethiopia                      89    8.17   8.58       8.42    8.42  8.5 \n 4 Ethiopia                      88.8  8.25   8.5        8.25    8.5   8.42\n 5 Ethiopia                      88.7  8.25   8.33       8.5     8.42  8.33\n 6 Ethiopia                      88.4  8.67   8.67       8.58    8.42  8.33\n 7 Ethiopia                      88.2  8.08   8.58       8.5     8.5   7.67\n 8 Ethiopia                      88.1  8.17   8.67       8.25    8.5   7.75\n 9 Ethiopia                      87.8  8.25   8.33       8.5     8.25  8.58\n10 Ethiopia                      87.3  8.17   8.33       8.25    8.33  8.42\n# ℹ 1,329 more rows\n\n\n.\n\n\n\n\n## Arriving at the mean of each parameter, to get an overview by country_of_origin arranged in descending order of highest total_cup_points\n##\ncoffee_modB &lt;- coffee_mod %&gt;%\n  group_by(country_of_origin) %&gt;% \n  summarize(total_points_mean = mean(total_cup_points), \n             aroma_mean = mean(aroma), \n             flavor_mean = mean(flavor), \n             aftertaste_mean = mean(aftertaste), \n             acidity_mean = mean(acidity), \n             body_mean = mean(body)\n             ) %&gt;% \n  arrange(desc(total_points_mean)) %&gt;% head(5)\n##\ncoffee_modB\n\n# A tibble: 5 × 7\n  country_of_origin total_points_mean aroma_mean flavor_mean aftertaste_mean\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea               85.8       8.33        8.42            7.83\n2 Ethiopia                       85.5       7.90        8.01            7.89\n3 Japan                          84.7       7.75        7.75            7.75\n4 United States                  84.4       7.83        7.99            7.85\n5 Kenya                          84.3       7.79        7.78            7.71\n# ℹ 2 more variables: acidity_mean &lt;dbl&gt;, body_mean &lt;dbl&gt;\n\n\n.\n\n\n\n\n## Converting the means into ranks - assigning each parameter a value from 1-5\n##\ncoffee_modC &lt;- coffee_modB %&gt;% \n  mutate(\n    total_points_rank = rank(total_points_mean),\n    aroma_rank = rank(aroma_mean),\n    flavor_rank = rank(flavor_mean),\n    aftertaste_rank = rank(aftertaste_mean),\n    acidity_rank = rank(acidity_mean),\n    body_rank = rank(body_mean)\n  ) %&gt;% \n  select(-total_points_mean, -aroma_mean, -flavor_mean, -aftertaste_mean, -acidity_mean, -body_mean)\n##\ncoffee_modC\n\n# A tibble: 5 × 7\n  country_of_origin total_points_rank aroma_rank flavor_rank aftertaste_rank\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea                  5          5           5               3\n2 Ethiopia                          4          4           4               5\n3 Japan                             3          1           1               2\n4 United States                     2          3           3               4\n5 Kenya                             1          2           2               1\n# ℹ 2 more variables: acidity_rank &lt;dbl&gt;, body_rank &lt;dbl&gt;\n\n\n.\n\n\n\n\n## putting all the parameter ranks under the coloumn of 'parameter'\n##\ncoffee_modD &lt;- coffee_modC %&gt;% \n  pivot_longer( \n    cols = c(total_points_rank, aroma_rank, flavor_rank, aftertaste_rank, acidity_rank, body_rank),\n    cols_vary = \"fastest\",\n    names_to = \"parameter\",\n    values_to = \"ranks\")\n##\ncoffee_modD\n\n# A tibble: 30 × 3\n   country_of_origin parameter         ranks\n   &lt;fct&gt;             &lt;chr&gt;             &lt;dbl&gt;\n 1 Papua New Guinea  total_points_rank     5\n 2 Papua New Guinea  aroma_rank            5\n 3 Papua New Guinea  flavor_rank           5\n 4 Papua New Guinea  aftertaste_rank       3\n 5 Papua New Guinea  acidity_rank          5\n 6 Papua New Guinea  body_rank             4\n 7 Ethiopia          total_points_rank     4\n 8 Ethiopia          aroma_rank            4\n 9 Ethiopia          flavor_rank           4\n10 Ethiopia          aftertaste_rank       5\n# ℹ 20 more rows\n\n\n.\n\n## plotting the bump chart\n##\nggplot(coffee_modD, aes(x = parameter, y = ranks, color = country_of_origin, group = country_of_origin)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(  \"acidity_rank\", \"aftertaste_rank\",\"aroma_rank\",\"body_rank\",\"total_points_rank\", \"flavor_rank\"),\n    labels = c( \"Acidity\", \"Aftertaste\",\"Aroma\",\"Body\",\"Total\", \"Flavor\" )\n    ) + \n  labs(title = \"Coffee Parameter Ranks by Country of Origin\",\n       x = \"Coffee Parameters\",\n       y = \"Rank\",\n       color = \"Country of Origin\") +\n  theme_minimal() +  # Use a minimal theme\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#task-and-discussion",
    "href": "posts/A2 - Case Study 2/index.html#task-and-discussion",
    "title": "A2: Case Study 2",
    "section": "",
    "text": ".\n\n\n.\n\nIdentify the type of charts\nBump Charts!\n.\nIdentify the variables used for various geometrical aspects (x, y, fill…). Name the variables appropriately.\n\nx  = parameter would be the coffee parameters, which include the levels of aroma, acidity, aftertaste, flavor, body and total_points\ny = ranks would be the ranks assigned to each country of origin based on their mean from each parameter. 5 would be highest and 1 would be lowest, in the case of the plot shown here.\nfill/colour/group = country_of_origin would be the variable that is being ranked. It describes where the coffee originates from.\n\n.\nWhat research activity might have been carried out to obtain the data graphed here? Provide some details.\nIn terms of a research activity, it could have possibly been some sort of survey or inspection on coffee beans from coffee estates around the world. Not only does this data set describe how the coffee was sourced and its characteristics during harvest, but also how the coffee is perceived from a consumer’s point of view. This would mean that the survey spanned right from production to consumption. Perhaps to gain insight as to which methods of production and processing work best in different regions, to make the most out of every region? It could have also been a study on how environmental factors affect the end product coffee beans.\n.\nWhat might have been the Hypothesis/Research Question to which the response was Chart?\nThe research question/hypothesis that would have prompted this chart would be something along the lines of trying to figure out how the top five countries by average total cup points rank in terms of parameters such as flavor, acidity, aroma, aftertaste and so on. See Breadcrumb 2.\n.\nWrite a 2-line story based on the chart, describing your inference/surprise.\nOne of the first things we did was count the frequency of country_of_origin, and the top 5 made up for 60% of this data set, with 807 entries. This significantly increases their chances of being in the top 5 by total_cup_points - and so, the means were calculated instead.\nWould you look at that! not a single appearance in the top 5, most surprisingly Brazil: the largest coffee producer in the world.\n\n.\n.\n\n\n\ncoffee_modC &lt;- coffee_modB %&gt;% mutate(across(ends_with(\"_mean\"), rank)) %&gt;% rename_with(~ gsub(\"mean\", \"rank\", .x), ends_with(\"mean\")) ## coffee_modC\ncoffee_modD %&gt;% ggplot(aes(x = parameter, y = ranks, color = country_of_origin)) + geom_bump(size = 2) + geom_point( size = 6 ) + xlab(\"Coffee Parameters\") + ylab(\"Ranks\") + scale_color_brewer(palette = \"RdBu\") + # Change Colour Scale scale_x_discrete(limits = c(\"aroma_rank\",\"flavor_rank\", \"aftertaste_rank\" ,\"acidity_rank\",\"body_rank\")) # Check warning here..."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#task-and-discussion",
    "href": "posts/A2 - Case Study 3/index.html#task-and-discussion",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": ".\n\n\n.\n\nWhat kind of chart is used in the figure?\nA Scatter Plot!\n.\n\n\n\nWhat geometries have been used and to which variables have these geometries been mapped?\nThe circles represent clusters of workers by occupation, and their sizes represent the total number of workers within that occupation. The placement of the circle with regards to the x-axis defines the percentage of female workers within that cluster, and the placement of the circle with regards to the y-axis defines the median salary in that occupation.\n.\nBased on this graph, do you think gender plays a role in salaries? What is the trend you see?\nBased on this graph, its quite evident that gender plays a role in salaries. As the graph moves towards majority of the workforce as women, the dots cluster at the vottom rungs of the y-axis, indicating lower median incomes.\n.\nIf SALARY, NO_OF_WORKERS, GENDER, OCCUPATION were available in the original dataset, what pre-processing would have been necessary to obtain this plot?\nSteps for pre-processing in that case:\ndf %&gt;%\ngroup_by(occupation) %&gt;%\nsummarize(workers_female = count(gender == \"female\"),\npercent_female = (workers_female/no_of_workers)*100,\nmeadian_salary = median(salary)) %&gt;% ggplot(...)... and so on.\n\n.\n.\n\n\n\n.\n\nI prompted ChatGPT with “scatter plot with different sized dots in r, using tidyverse , ggformula, mosaic, skimr” and it came up with a sample data set and code chunk. After running the code and playing around with factors such as scale_size(range =c()), geom_point(alpha =), label inputs, as well as messing around with I had a pretty good idea of how things worked.\n.\n\n\n## ChatGPT:  Sample dataset\nset.seed(42)  # For reproducibility\ndata &lt;- tibble(\n  x = rnorm(100),                  # Random normal values for x-axis\n  y = rnorm(100),                  # Random normal values for y-axis\n  size = runif(100, 1, 10),        # Random sizes for the dots\n  category = sample(letters[1:3], 100, replace = TRUE)  # Random categories\n)\n\n.\n\n## Chat GPT: Create scatter plot with varying dot sizes\nggplot(data, aes(x = x, y = y, size = size, color = category)) +\n  geom_point(alpha = 0.7) +  # Adjust alpha for transparency\n  scale_size(range = c(1, 10)) +  # Control the size range\n  labs(title = \"Scatter Plot with Varying Dot Sizes\",\n       x = \"X-axis Label\",\n       y = \"Y-axis Label\",\n       size = \"Size Legend\",\n       color = \"Category\") +\n  theme_minimal()  # Use a minimal theme"
  }
]