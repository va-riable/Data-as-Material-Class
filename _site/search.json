[
  {
    "objectID": "posts/Day 6/index.html",
    "href": "posts/Day 6/index.html",
    "title": "Day 6: Stats Theory",
    "section": "",
    "text": "t.test\nintuitive\n\n\n\nset.seed() : random number generation, good for reproducability - the number is a label for the set of numbers generated.\nrnorm() : generates random numbers from a normal (Guassian) distribution.\ntibble() : constructs a data frame.\ngf_fitdistr() : provides an easy way to overlay a probability distribution curve onto a plot: assessing how well the theoritical distribution matches the empirical data.\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer)\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n\nlibrary(openintro) # More datasets\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments"
  },
  {
    "objectID": "posts/Day 6/index.html#introduction",
    "href": "posts/Day 6/index.html#introduction",
    "title": "Day 6: Stats Theory",
    "section": "",
    "text": "t.test\nintuitive\n\n\n\nset.seed() : random number generation, good for reproducability - the number is a label for the set of numbers generated.\nrnorm() : generates random numbers from a normal (Guassian) distribution.\ntibble() : constructs a data frame.\ngf_fitdistr() : provides an easy way to overlay a probability distribution curve onto a plot: assessing how well the theoritical distribution matches the empirical data.\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer)\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n\nlibrary(openintro) # More datasets\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments"
  },
  {
    "objectID": "posts/Day 6/index.html#case-study-1---toy-data",
    "href": "posts/Day 6/index.html#case-study-1---toy-data",
    "title": "Day 6: Stats Theory",
    "section": "Case Study 1 - Toy Data",
    "text": "Case Study 1 - Toy Data\n\nset.seed(40)  # for replication\n# Data as individual vectors ( for t.tests etc)\ny &lt;- rnorm(50, mean = 2, sd = 2)\n\n# And as tibble too\nmydata &lt;- tibble(y = y)\nmydata\n\n# A tibble: 50 × 1\n        y\n    &lt;dbl&gt;\n 1  2.96 \n 2  2.99 \n 3  0.281\n 4  0.342\n 5  1.36 \n 6 -0.608\n 7 -0.843\n 8  5.49 \n 9  1.42 \n10 -0.618\n# ℹ 40 more rows\n\n\n."
  },
  {
    "objectID": "posts/Day 6/index.html#inspecting-and-charting-data",
    "href": "posts/Day 6/index.html#inspecting-and-charting-data",
    "title": "Day 6: Stats Theory",
    "section": "Inspecting and Charting Data:",
    "text": "Inspecting and Charting Data:\n.\n\n##\nmydata %&gt;%\n    gf_density(~y) %&gt;%\n    gf_fitdistr(dist = \"dnorm\") %&gt;%\n    gf_labs(title = \"Densities of Original Data Variables\", subtitle = \"Compared with Normal Density\")\n\n\n\n\n\n\n\n\n.\n\nObservations:\n\nThe variable y appear to be centered around 2\nIt does not seem to be normally distributed…\n\n."
  },
  {
    "objectID": "posts/Day 6/index.html#research-question",
    "href": "posts/Day 6/index.html#research-question",
    "title": "Day 6: Stats Theory",
    "section": "Research Question",
    "text": "Research Question\nCould the mean of the population μ, from which y has been drawn, be zero?"
  },
  {
    "objectID": "posts/Day 6/index.html#assumptions",
    "href": "posts/Day 6/index.html#assumptions",
    "title": "Day 6: Stats Theory",
    "section": "Assumptions",
    "text": "Assumptions"
  },
  {
    "objectID": "posts/Day 6/index.html#inference",
    "href": "posts/Day 6/index.html#inference",
    "title": "Day 6: Stats Theory",
    "section": "Inference",
    "text": "Inference"
  },
  {
    "objectID": "posts/Day 5/index.html",
    "href": "posts/Day 5/index.html",
    "title": "Day 5: Groups",
    "section": "",
    "text": "Today in class we discuss groups and box-plots.\n\n\n\ninstall new package ‘palmerpenguins’\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "posts/Day 5/index.html#introduction",
    "href": "posts/Day 5/index.html#introduction",
    "title": "Day 5: Groups",
    "section": "",
    "text": "Today in class we discuss groups and box-plots.\n\n\n\ninstall new package ‘palmerpenguins’\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "posts/Day 5/index.html#examining-data",
    "href": "posts/Day 5/index.html#examining-data",
    "title": "Day 5: Groups",
    "section": "Examining Data:",
    "text": "Examining Data:\n\n## Looking at the gss wages dataset\nwages &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/gss_wages.csv\")\n\nRows: 61697 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): occrecode, wrkstat, gender, educcat, maritalcat\ndbl (7): rownames, year, realrinc, age, occ10, prestg10, childs\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n##\nwages\n\n# A tibble: 61,697 × 12\n   rownames  year realrinc   age occ10 occrecode  prestg10 childs wrkstat gender\n      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; \n 1        1  1974     4935    21  5620 Office an…       25      0 School  Male  \n 2        2  1974    43178    41  2040 Professio…       66      3 Full-T… Male  \n 3        3  1974       NA    83    NA &lt;NA&gt;             NA      2 Housek… Female\n 4        4  1974       NA    69    NA &lt;NA&gt;             NA      2 Housek… Female\n 5        5  1974    18505    58  5820 Office an…       37      0 Full-T… Female\n 6        6  1974    22206    30   910 Business/…       45      0 School  Male  \n 7        7  1974    55515    48   230 Business/…       59      2 Full-T… Male  \n 8        8  1974       NA    67  6355 Construct…       49      1 Retired Male  \n 9        9  1974       NA    51  4720 Sales            28      2 Housek… Female\n10       10  1974     4935    54  3940 Service          38      2 Full-T… Female\n# ℹ 61,687 more rows\n# ℹ 2 more variables: educcat &lt;chr&gt;, maritalcat &lt;chr&gt;\n\n\n\nwages %&gt;% glimpse()\n\nRows: 61,697\nColumns: 12\n$ rownames   &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ year       &lt;dbl&gt; 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,…\n$ realrinc   &lt;dbl&gt; 4935, 43178, NA, NA, 18505, 22206, 55515, NA, NA, 4935, NA,…\n$ age        &lt;dbl&gt; 21, 41, 83, 69, 58, 30, 48, 67, 51, 54, 89, 71, 27, 30, 22,…\n$ occ10      &lt;dbl&gt; 5620, 2040, NA, NA, 5820, 910, 230, 6355, 4720, 3940, 4810,…\n$ occrecode  &lt;chr&gt; \"Office and Administrative Support\", \"Professional\", NA, NA…\n$ prestg10   &lt;dbl&gt; 25, 66, NA, NA, 37, 45, 59, 49, 28, 38, 47, 45, 50, 29, 33,…\n$ childs     &lt;dbl&gt; 0, 3, 2, 2, 0, 0, 2, 1, 2, 2, 3, 1, 4, 3, 0, 1, 2, 3, 4, 8,…\n$ wrkstat    &lt;chr&gt; \"School\", \"Full-Time\", \"Housekeeper\", \"Housekeeper\", \"Full-…\n$ gender     &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male…\n$ educcat    &lt;chr&gt; \"High School\", \"Bachelor\", \"Less Than High School\", \"Less T…\n$ maritalcat &lt;chr&gt; \"Married\", \"Married\", \"Widowed\", \"Widowed\", \"Never Married\"…\n\n\n\nwages %&gt;% inspect()\n\n\ncategorical variables:  \n        name     class levels     n missing\n1  occrecode character     11 58136    3561\n2    wrkstat character      8 61676      21\n3     gender character      2 61697       0\n4    educcat character      5 61562     135\n5 maritalcat character      5 61670      27\n                                   distribution\n1 Professional (19%), Service (16.9%) ...      \n2 Full-Time (49.4%), Housekeeper (15.1%) ...   \n3 Female (56.1%), Male (43.9%)                 \n4 High School (51.5%) ...                      \n5 Married (51.7%), Never Married (21.8%) ...   \n\nquantitative variables:  \n      name   class  min    Q1 median    Q3      max         mean           sd\n1 rownames numeric    1 15425  30849 46273  61697.0 30849.000000 17810.534116\n2     year numeric 1974  1985   1996  2006   2018.0  1996.073715    12.794470\n3 realrinc numeric  227  8156  16563 27171 480144.5 22326.359234 28581.794499\n4      age numeric   18    32     44    59     89.0    46.176177    17.561065\n5    occ10 numeric   10  2710   4720  6230   9997.0  4695.774081  2627.724076\n6 prestg10 numeric   16    33     42    50     80.0    43.060701    12.987526\n7   childs numeric    0     0      2     3      8.0     1.923457     1.763569\n      n missing\n1 61697       0\n2 61697       0\n3 37887   23810\n4 61478     219\n5 58136    3561\n6 57511    4186\n7 61508     189"
  },
  {
    "objectID": "posts/Day 5/index.html#munging-data",
    "href": "posts/Day 5/index.html#munging-data",
    "title": "Day 5: Groups",
    "section": "Munging Data:",
    "text": "Munging Data:\n\n\nwe can remove missing data in this case as there is enough data leftover to work with.\n\n\n\nwages_clean &lt;-\n  wages %&gt;%\n  tidyr::drop_na(realrinc) # choose column or leave blank to choose all\n\n\nwages_clean &lt;- wages_clean %&gt;%\n  mutate(\n    occrecode = as_factor(occrecode),\n    wrkstat = as_factor(wrkstat),\n    gender = as_factor(gender),\n    educcat = as_factor(educcat),\n    maritalcat = as_factor(maritalcat),\n    rownames = as_factor(rownames),\n    year = as_factor(year)\n    \n  )\nwages_clean\n\n# A tibble: 37,887 × 12\n   rownames year  realrinc   age occ10 occrecode  prestg10 childs wrkstat gender\n   &lt;fct&gt;    &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt;   &lt;fct&gt; \n 1 1        1974      4935    21  5620 Office an…       25      0 School  Male  \n 2 2        1974     43178    41  2040 Professio…       66      3 Full-T… Male  \n 3 5        1974     18505    58  5820 Office an…       37      0 Full-T… Female\n 4 6        1974     22206    30   910 Business/…       45      0 School  Male  \n 5 7        1974     55515    48   230 Business/…       59      2 Full-T… Male  \n 6 10       1974      4935    54  3940 Service          38      2 Full-T… Female\n 7 15       1974      4935    22  4020 Service          33      0 Full-T… Female\n 8 16       1974     18505    23  7810 Production       28      1 Full-T… Male  \n 9 21       1974     11103    25  8640 Production       31      0 Full-T… Male  \n10 26       1974     30841    59  4710 Sales            48      1 Full-T… Male  \n# ℹ 37,877 more rows\n# ℹ 2 more variables: educcat &lt;fct&gt;, maritalcat &lt;fct&gt;\n\n\n\nwages_clean %&gt;% inspect()\n\n\ncategorical variables:  \n        name  class levels     n missing\n1   rownames factor  37887 37887       0\n2       year factor     30 37887       0\n3  occrecode factor     11 37797      90\n4    wrkstat factor      8 37887       0\n5     gender factor      2 37887       0\n6    educcat factor      5 37846      41\n7 maritalcat factor      5 37883       4\n                                   distribution\n1 1 (0%), 2 (0%), 5 (0%) ...                   \n2 2006 (7%), 1994 (5.2%) ...                   \n3 Professional (20.6%), Service (16%) ...      \n4 Full-Time (71.6%), Part-Time (13.9%) ...     \n5 Male (50.5%), Female (49.5%)                 \n6 High School (53.1%), Bachelor (17.6%) ...    \n7 Married (53.5%), Never Married (24.6%) ...   \n\nquantitative variables:  \n      name   class min   Q1 median    Q3      max         mean           sd\n1 realrinc numeric 227 8156  16563 27171 480144.5 22326.359234 28581.794499\n2      age numeric  18   30     39    51     89.0    40.948288    13.502676\n3    occ10 numeric  10 2330   4700  6220   9997.0  4568.104691  2658.871969\n4 prestg10 numeric  16   35     44    51     80.0    43.815189    13.085116\n5   childs numeric   0    0      2     3      8.0     1.693459     1.616469\n      n missing\n1 37887       0\n2 37825      62\n3 37797      90\n4 37368     519\n5 37809      78"
  },
  {
    "objectID": "posts/Day 5/index.html#q1-what-is-the-basic-distribution-of-realrinc-the-respondants-base-income",
    "href": "posts/Day 5/index.html#q1-what-is-the-basic-distribution-of-realrinc-the-respondants-base-income",
    "title": "Day 5: Groups",
    "section": "Q1: What is the basic distribution of realrinc (the respondant’s base income)?",
    "text": "Q1: What is the basic distribution of realrinc (the respondant’s base income)?\n\nwages_clean %&gt;%\n  gf_boxplot(realrinc ~ \"Income\") %&gt;% # Dummy X-axis \"variable\"\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\n\nThis graph has been plotted on a logarithmic scale (1e+05 = 1 x10^5, 2e+05 = 2x10^5 and so on) as the data spans a wide range of values\nFROM THIS GRAPH\n\nIncome is a very skewed distribution, as might be expected.\nPresence of many higher-side outliers is noted."
  },
  {
    "objectID": "posts/Day 5/index.html#q2-is-realrinc-affected-by-gender",
    "href": "posts/Day 5/index.html#q2-is-realrinc-affected-by-gender",
    "title": "Day 5: Groups",
    "section": "Q2: Is realrinc affected by gender?",
    "text": "Q2: Is realrinc affected by gender?\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 2A: Income by Gender\")\n\n\n\n\n\n\n\n\n\nconverting scalenatural log to log base 10. why??\n\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ log10(realrinc)) %&gt;%\n  gf_labs(title = \"Plot 2B: Log(Income) by Gender\")\n\n\n\n\n\n\n\n\n\nwages_clean %&gt;%\n  gf_boxplot(gender ~ realrinc, fill = ~gender) %&gt;%\n  gf_refine(scale_x_log10()) %&gt;%\n  gf_labs(title = \"Plot 2C: Income filled by Gender, log scale\")\n\n\n\n\n\n\n\n\n\n\nFROM THE GRAPHS:\n\nEven when split by gender, realincome presents a skewed set of distributions.\nThe IQR for males is smaller than the IQR for females. There is less variation in the middle ranges of realrinc for men.\nlog10 transformation helps to view and understand the regions of low realrinc.\nThere are outliers on both sides, indicating that there may be many people who make very small amounts of money and large amounts of money in both genders."
  },
  {
    "objectID": "posts/Day 3/index.html",
    "href": "posts/Day 3/index.html",
    "title": "Day 3: Counts",
    "section": "",
    "text": "Today we as a class explored Counts using a data set, taxi, about taxi rides taken in Chicago in 2022. Under the ‘Your Turn’ section of the Counts page, I chose to investigate the fertility data set.\n\n\n\nFirst install packages and call them to the document\nThen call the data set and perform glimpse(), inspect() and skim()\nIf there is anything to be munged, the data is re-organised\nLooking at the data, questions are developed that can be answered by comparing variables\nThen, plot graphs, compare and analyze them\nLastly revisit the entire process with a new dataset!\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#introduction",
    "href": "posts/Day 3/index.html#introduction",
    "title": "Day 3: Counts",
    "section": "",
    "text": "Today we as a class explored Counts using a data set, taxi, about taxi rides taken in Chicago in 2022. Under the ‘Your Turn’ section of the Counts page, I chose to investigate the fertility data set.\n\n\n\nFirst install packages and call them to the document\nThen call the data set and perform glimpse(), inspect() and skim()\nIf there is anything to be munged, the data is re-organised\nLooking at the data, questions are developed that can be answered by comparing variables\nThen, plot graphs, compare and analyze them\nLastly revisit the entire process with a new dataset!\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#reading-data",
    "href": "posts/Day 3/index.html#reading-data",
    "title": "Day 3: Counts",
    "section": "Reading Data:",
    "text": "Reading Data:\n\ntaxi &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntaxi\n\n# A tibble: 10,000 × 8\n   rownames tip   distance company                      local dow   month  hour\n      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;                        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1        1 yes      17.2  Chicago Independents         no    Thu   Feb      16\n 2        2 yes       0.88 City Service                 yes   Thu   Mar       8\n 3        3 yes      18.1  other                        no    Mon   Feb      18\n 4        4 yes      20.7  Chicago Independents         no    Mon   Apr       8\n 5        5 yes      12.2  Chicago Independents         no    Sun   Mar      21\n 6        6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23\n 7        7 yes      17.5  Flash Cab                    no    Fri   Mar      12\n 8        8 yes      17.7  other                        no    Sun   Jan       6\n 9        9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12\n10       10 yes       1.47 City Service                 no    Tue   Mar      14\n# ℹ 9,990 more rows\n\n\n\ntaxi %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;chr&gt; \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\",…\n$ dow      &lt;chr&gt; \"Thu\", \"Thu\", \"Mon\", \"Mon\", \"Sun\", \"Sat\", \"Fri\", \"Sun\", \"Fri\"…\n$ month    &lt;chr&gt; \"Feb\", \"Mar\", \"Feb\", \"Apr\", \"Mar\", \"Apr\", \"Mar\", \"Jan\", \"Apr\"…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\n##TABLE!!\ntaxi %&gt;%\n  head(20) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"SN\", \"Tip\", \"Distance\",\n      \"Company\", \"Local\", \"DOW\",\n      \"Month\", \"Hour\"\n    ),\n    caption = \"Taxi Dataset\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nTaxi Dataset\n\n\nSN\nTip\nDistance\nCompany\nLocal\nDOW\nMonth\nHour\n\n\n\n\n1\nyes\n17.19\nChicago Independents\nno\nThu\nFeb\n16\n\n\n2\nyes\n0.88\nCity Service\nyes\nThu\nMar\n8\n\n\n3\nyes\n18.11\nother\nno\nMon\nFeb\n18\n\n\n4\nyes\n20.70\nChicago Independents\nno\nMon\nApr\n8\n\n\n5\nyes\n12.23\nChicago Independents\nno\nSun\nMar\n21\n\n\n6\nyes\n0.94\nSun Taxi\nyes\nSat\nApr\n23\n\n\n7\nyes\n17.47\nFlash Cab\nno\nFri\nMar\n12\n\n\n8\nyes\n17.67\nother\nno\nSun\nJan\n6\n\n\n9\nyes\n1.85\nTaxicab Insurance Agency Llc\nno\nFri\nApr\n12\n\n\n10\nyes\n1.47\nCity Service\nno\nTue\nMar\n14\n\n\n11\nyes\n0.53\nSun Taxi\nno\nTue\nMar\n18\n\n\n12\nyes\n6.65\nTaxicab Insurance Agency Llc\nno\nSun\nApr\n11\n\n\n13\nyes\n16.82\nSun Taxi\nno\nWed\nApr\n12\n\n\n14\nyes\n1.21\nSun Taxi\nyes\nThu\nApr\n19\n\n\n15\nyes\n1.00\nother\nno\nFri\nMar\n17\n\n\n16\nyes\n0.86\nother\nno\nTue\nFeb\n13\n\n\n17\nno\n0.40\nother\nyes\nFri\nMar\n17\n\n\n18\nyes\n0.10\nTaxi Affiliation Services\nno\nSun\nApr\n10\n\n\n19\nyes\n1.00\nTaxi Affiliation Services\nno\nMon\nFeb\n18\n\n\n20\nyes\n1.60\nTaxi Affiliation Services\nno\nTue\nApr\n8\n\n\n\n\n\n\n\n\n\ntaxi %&gt;%inspect()\n\n\ncategorical variables:  \n     name     class levels     n missing\n1     tip character      2 10000       0\n2 company character      7 10000       0\n3   local character      2 10000       0\n4     dow character      7 10000       0\n5   month character      4 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n3     hour numeric   0   11.00   15.00   18.0000    23.0   14.177300\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n3    4.359904 10000       0\n\n\n\ntaxi %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n10000\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntip\n0\n1\n2\n3\n0\n2\n0\n\n\ncompany\n0\n1\n5\n28\n0\n7\n0\n\n\nlocal\n0\n1\n2\n3\n0\n2\n0\n\n\ndow\n0\n1\n3\n3\n0\n7\n0\n\n\nmonth\n0\n1\n3\n3\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1\n5000.50\n2886.90\n1\n2500.75\n5000.50\n7500.25\n10000.0\n▇▇▇▇▇\n\n\ndistance\n0\n1\n6.22\n7.38\n0\n0.94\n1.78\n15.56\n42.3\n▇▁▂▁▁\n\n\nhour\n0\n1\n14.18\n4.36\n0\n11.00\n15.00\n18.00\n23.0\n▁▃▅▇▃\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#munging-data",
    "href": "posts/Day 3/index.html#munging-data",
    "title": "Day 3: Counts",
    "section": "Munging Data",
    "text": "Munging Data\n.\n\nConverting Qualitative Variables into Factors:\n\ntaxi_modifiedA &lt;- taxi %&gt;%\n  dplyr::mutate(\n    tip = as_factor(tip),\n    local = as_factor(local),\n    month = as_factor(month),\n    dow = as_factor(dow),\n    company = as_factor(company),\n    hour = as_factor(hour)\n    \n  )\nglimpse(taxi_modifiedA)\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;fct&gt; yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, y…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;fct&gt; Chicago Independents, City Service, other, Chicago Independen…\n$ local    &lt;fct&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;fct&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;fct&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;fct&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ntaxi_modifiedA %&gt;%inspect()\n\n\ncategorical variables:  \n     name  class levels     n missing\n1     tip factor      2 10000       0\n2 company factor      7 10000       0\n3   local factor      2 10000       0\n4     dow factor      7 10000       0\n5   month factor      4 10000       0\n6    hour factor     23 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n6 17 (9%), 18 (8.5%), 16 (8.1%) ...            \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n\n\n\n\nOrdered Factors - Levels and Labels\n\n## Convert `dow`, `local`, and `month` into ordered factors\ntaxi_modifiedB &lt;- taxi_modifiedA %&gt;%\n  mutate(\n    dow = factor(dow,\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      labels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      ordered = TRUE\n    ),\n    ##\n    local = factor(local,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"yes\", \"no\"),\n      ordered = TRUE\n    ),\n    ##\n    month = factor(month,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      ordered = TRUE\n    )\n  )\ntaxi_modifiedB %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;fct&gt; yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, y…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;fct&gt; Chicago Independents, City Service, other, Chicago Independen…\n$ local    &lt;ord&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;ord&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;ord&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;fct&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\nNotes\n\nwhen ordered isn’t set to true, the labels and levels resort to alphabetical as default\n\n\n.\n.\n\ntaxi_modifiedB %&gt;% inspect()\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     tip  factor      2 10000       0\n2 company  factor      7 10000       0\n3   local ordered      2 10000       0\n4     dow ordered      7 10000       0\n5   month ordered      4 10000       0\n6    hour  factor     23 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n6 17 (9%), 18 (8.5%), 16 (8.1%) ...            \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q1.a-do-more-people-tip-than-not",
    "href": "posts/Day 3/index.html#q1.a-do-more-people-tip-than-not",
    "title": "Day 3: Counts",
    "section": "Q1.A: Do more people tip than not?",
    "text": "Q1.A: Do more people tip than not?\n\ngf_bar(~tip, data = taxi_modifiedB) %&gt;%\n  gf_labs(title = \"Plot 1: Counts of Tips\")\n\n\n\n\n\n\n\n\n.\n.\n\nNotes\n\ncolor vs fill\nwhere are the colours coming from? How can I change them\nposition: dodge vs stacked - DEFAULT IS STACKED\ngf_bar - when the y is left blank, it counts\ngf_coloumn - gives the y axis to manually input\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q2.a-does-the-tip-depend-upon-whether-the-trip-is-local-or-not",
    "href": "posts/Day 3/index.html#q2.a-does-the-tip-depend-upon-whether-the-trip-is-local-or-not",
    "title": "Day 3: Counts",
    "section": "Q2.A: Does the tip depend upon whether the trip is local or not?",
    "text": "Q2.A: Does the tip depend upon whether the trip is local or not?\n\n## using colour = ...\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    color = ~tip,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.1: Dodged Bar Chart\",\n          subtitle = \"Using Colour\")\n\n\n\n\n\n\n\n\n.\n\n## Using fill = ...\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.2: Dodged Bar Chart\",\n          subtitle = \"Using Fill\")\n\n\n\n\n\n\n\n\n.\n\n## Flipping facets\ntaxi_modifiedB %&gt;%\n  gf_bar(~tip,\n    fill = ~local,\n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A.3: Dodged Bar Chart\",\n          subtitle = \"Flipping 'local' and 'tip' variables:\")\n\n\n\n\n\n\n\n\n.\n\n## Using stack\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"stack\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2B.1: Stacked Bar Chart\",\n    subtitle = \"Can we spot per group differences in proportions??\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## Flipping Facets\ntaxi_modifiedB %&gt;%\n  gf_bar(~tip,\n    fill = ~local,\n    position = \"stack\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2B.2: Stacked Bar Chart\",\n    subtitle = \"Flipping 'local' and 'tip' variables:\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## Using ratio proportions\ntaxi_modifiedB %&gt;%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 2C: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios\"\n  )\n\n\n\n\n\n\n\n\n.\n.\n\nUnderstandings from Graphs:\n\nPlot 2B. 1: People tip more often than not, regardless of if the trip is local or not.\nPlot 2B. 2: Majority of those who tip are going on trips that are not local. This may be true, but its not the whole truth.\nBECAUSE PERCENTAGS MATTER - THE NUMBER OF TRIPS THAT ARE LOCAL AND NOT LOCAL ARE NOT THE SAME.\nPlot 2C: Now we can say for sure that more people tip on trips that are not local.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q3-do-some-cab-companies-get-more-tips-than-others",
    "href": "posts/Day 3/index.html#q3-do-some-cab-companies-get-more-tips-than-others",
    "title": "Day 3: Counts",
    "section": "Q3: Do some cab companies get more tips than others?",
    "text": "Q3: Do some cab companies get more tips than others?\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ company,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 3A: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios by company\"\n  )\n\n\n\n\n\n\n\n\n.\n\nRe-Ordering the columns.\n\ntaxi_modifiedC &lt;- taxi_modifiedB %&gt;% \n  group_by(company) %&gt;%\n  summarise(tipyes_prop = prop(tip), tipno_prop= 1-prop(tip), count_tip = count(tip))%&gt;% arrange(desc(tipyes_prop))\ntaxi_modifiedC\n\n# A tibble: 7 × 4\n  company                      tipyes_prop tipno_prop count_tip\n  &lt;fct&gt;                              &lt;dbl&gt;      &lt;dbl&gt;     &lt;int&gt;\n1 Chicago Independents               0.949     0.0512       741\n2 Sun Taxi                           0.939     0.0608      1298\n3 other                              0.928     0.0722      2519\n4 City Service                       0.927     0.0733      1100\n5 Taxicab Insurance Agency Llc       0.925     0.0747      1139\n6 Taxi Affiliation Services          0.906     0.0945      1534\n7 Flash Cab                          0.869     0.131        878\n\n\n\ntaxi_modifiedC$company &lt;- factor(taxi_modifiedC$company,\n                           levels = taxi_modifiedC$company[order(-taxi_modifiedC$tipyes_prop)])\n  \ntaxi_modifiedC %&gt;% glimpse()\n\nRows: 7\nColumns: 4\n$ company     &lt;fct&gt; Chicago Independents, Sun Taxi, other, City Service, Taxic…\n$ tipyes_prop &lt;dbl&gt; 0.9487836, 0.9392185, 0.9278085, 0.9267060, 0.9252640, 0.9…\n$ tipno_prop  &lt;dbl&gt; 0.05121639, 0.06078148, 0.07219153, 0.07329402, 0.07473599…\n$ count_tip   &lt;int&gt; 741, 1298, 2519, 1100, 1139, 1534, 878\n\n\n\n##a = taxi_modifiedC$tipyes_prop\n##b = taxi_modifiedC$tipno_prop\n##tips = a+b\n##taxi_modifiedD &lt;- taxi_modifiedC %&gt;%\n  ##dplyr::mutate(\n    ##tip = factor(tip,\n                 ##levels = c(\"yes\",\"no\"),\n                 ##labels\n  ##)\n\n\ntaxi_modifiedC %&gt;%\n  gf_bar(~ company,\n    fill = ~ tipyes_prop,\n    position = \"fill\"\n  ) %&gt;% \n  gf_labs(\n    title = \"Plot 3A: Filled Bar Chart\",\n    subtitle = \"Comparing using perecentages and ratios by company\"\n  ) %&gt;% \n  \n  gf_theme(theme(\n    axis.text.x = element_text(\n      angle = 45,\n      hjust = 1\n    )\n  ))\n\n\n\n\n\n\n\n\n.\n\nNotes\n\nusing arrange(), select() and reorder()\nDon’t mix in BaseR when you have tidyverse!!\nHow can I bring back the yes and no comparison of tips within each coloumn?\n\n\n."
  },
  {
    "objectID": "posts/Day 3/index.html#q4-does-a-tip-depend-upon-the-distance-hour-of-day-and-dow-and-month",
    "href": "posts/Day 3/index.html#q4-does-a-tip-depend-upon-the-distance-hour-of-day-and-dow-and-month",
    "title": "Day 3: Counts",
    "section": "Q4: Does a tip depend upon the distance, hour of day, and DOW and month?",
    "text": "Q4: Does a tip depend upon the distance, hour of day, and DOW and month?\n.\n\nTips by Hour\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ hour,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4A: [Tips and Hour] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ dow,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4B: [Tips and DOW] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by month\n\ntaxi_modifiedB %&gt;%\n  gf_bar(~ month,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(\n    title = \"Plot 4C: [Tips and Month] Filled Bar Chart\",\n    subtitle = \"..\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW and Month\n\n## With position default\n taxi_modifiedB %&gt;% \n   gf_bar(~ month | dow, \n       fill = ~tip) %&gt;%\n  gf_labs(\n    title = \"Plot E: Counts of Tips by Day of Week and Month\")\n\n\n\n\n\n\n\n\n.\n\n## With position fill\n taxi_modifiedB %&gt;% \n   gf_bar(~ month | dow, \n       fill = ~tip,\n       position = \"fill\") %&gt;%\n  gf_labs(\n    title = \"Plot E: Counts of Tips by Day of Week and Month\",\n    subtitle = \"According to ratio and proportions\")\n\n\n\n\n\n\n\n\n.\n\n\nTips by DOW an Hour\n\ntaxi_modifiedB %&gt;% \n  gf_bar(~ hour | dow, \n         fill = ~tip) %&gt;%\n  gf_labs(\n    title = \"Plot G: Counts of Tips by Hour and Day of Week\",\n    \n  )\n\n\n\n\n\n\n\n## swapping facets would result in a graph that is harder to grasp\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#your-turn-fertility-data-set",
    "href": "posts/Day 3/index.html#your-turn-fertility-data-set",
    "title": "Day 3: Counts",
    "section": "‘Your Turn’: Fertility Data Set:",
    "text": "‘Your Turn’: Fertility Data Set:\n.\n\nExamining Data:\n\nfertility &lt;- read_csv( file = \"../../Data/Fertility.csv\")\n\nRows: 254654 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): morekids, gender1, gender2, afam, hispanic, other\ndbl (3): rownames, age, work\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfertility%&gt;%glimpse()\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ gender1  &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"female\",…\n$ gender2  &lt;chr&gt; \"female\", \"male\", \"female\", \"female\", \"female\", \"female\", \"ma…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;chr&gt; \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n$ hispanic &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ other    &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n\n## Table\nfertility %&gt;%\n  head(20)%&gt;%\n  kbl(\n   \n    col.names = c(\n      \"SN\", \"More\\n Children\", \"First\\n Child\",\n      \"Second\\n Child\", \"Age\", \"African\\n American\",\"Hispanic\", \"Other\", \"Work\\n in Hours\"\n      \n    ),\n    caption = \"Fertility Dataset\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nFertility Dataset\n\n\nSN\nMore Children\nFirst Child\nSecond Child\nAge\nAfrican American\nHispanic\nOther\nWork in Hours\n\n\n\n\n1\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n2\nno\nfemale\nmale\n30\nno\nno\nno\n30\n\n\n3\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n4\nno\nmale\nfemale\n35\nyes\nno\nno\n0\n\n\n5\nno\nfemale\nfemale\n30\nno\nno\nno\n22\n\n\n6\nno\nmale\nfemale\n26\nno\nno\nno\n40\n\n\n7\nno\nfemale\nmale\n29\nno\nno\nno\n0\n\n\n8\nno\nmale\nmale\n33\nno\nno\nno\n52\n\n\n9\nno\nfemale\nmale\n29\nno\nno\nno\n0\n\n\n10\nno\nmale\nfemale\n27\nno\nno\nno\n0\n\n\n11\nyes\nmale\nmale\n28\nno\nno\nno\n0\n\n\n12\nno\nfemale\nmale\n28\nno\nno\nno\n52\n\n\n13\nno\nmale\nmale\n35\nno\nno\nno\n52\n\n\n14\nno\nfemale\nfemale\n34\nno\nno\nno\n52\n\n\n15\nno\nfemale\nfemale\n32\nno\nno\nno\n8\n\n\n16\nno\nfemale\nmale\n26\nno\nno\nno\n7\n\n\n17\nno\nfemale\nfemale\n34\nno\nno\nno\n0\n\n\n18\nyes\nmale\nfemale\n35\nno\nno\nno\n40\n\n\n19\nyes\nfemale\nfemale\n24\nno\nno\nno\n0\n\n\n20\nno\nfemale\nmale\n33\nno\nno\nno\n0\n\n\n\n\n\n\n\n\n\nfertility %&gt;% inspect()\n\n\ncategorical variables:  \n      name     class levels      n missing\n1 morekids character      2 254654       0\n2  gender1 character      2 254654       0\n3  gender2 character      2 254654       0\n4     afam character      2 254654       0\n5 hispanic character      2 254654       0\n6    other character      2 254654       0\n                                   distribution\n1 no (61.9%), yes (38.1%)                      \n2 male (51.4%), female (48.6%)                 \n3 male (51.3%), female (48.7%)                 \n4 no (94.8%), yes (5.2%)                       \n5 no (92.6%), yes (7.4%)                       \n6 no (94.4%), yes (5.6%)                       \n\nquantitative variables:  \n      name   class min       Q1   median       Q3    max         mean\n1 rownames numeric   1 63664.25 127327.5 190990.8 254654 127327.50000\n2      age numeric  21    28.00     31.0     33.0     35     30.39327\n3     work numeric   0     0.00      5.0     44.0     52     19.01833\n            sd      n missing\n1 73512.422063 254654       0\n2     3.386447 254654       0\n3    21.867277 254654       0\n\n\n.\n.\n\n\nData Dictionary:\nI tried finding where the data set originated, but couldn’t really trace anything back. From what I could make sense of it, these are my assumptions:\n\nThere 2,54,654 participants that make up this dataset, with no missing entries.\n\n\n\nmorekids: Those who want more kids, either yes or no\ngender1: Gender of the first child\ngender2: Gender of the second child\nage: age of the participant in years\nafam: if the participant identifies as African American, either yes or no\nhispanic: if the participant identifies as Hispanic, either yes or no\nother: if the participant identifies as another minority, either yes or no\nwork: the number of hours worked in a week\n\n.\n.\n\n\nMunging Data:\n\nfertility_modified &lt;- fertility%&gt;%\n  mutate(\n    morekids = as_factor(morekids),\n    gender1 = as_factor(gender1),\n    gender2 = as_factor(gender2),\n    afam = as_factor(afam),\n    hispanic = as_factor(hispanic),\n    other = as_factor(other),\n  )\nglimpse(fertility_modified)\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, yes, no, no, no, no, …\n$ gender1  &lt;fct&gt; male, female, male, male, female, male, female, male, female,…\n$ gender2  &lt;fct&gt; female, male, female, female, female, female, male, male, mal…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;fct&gt; no, no, no, yes, no, no, no, no, no, no, no, no, no, no, no, …\n$ hispanic &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ other    &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n\nfertility_modified %&gt;%\n  dplyr::mutate(\n    morekids = factor(morekids,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n    ##\n    gender1 = factor(gender1,\n      levels = c(\"male\", \"female\"),\n      labels = c(\"Male\", \"Female\"),\n      ordered = TRUE\n    ),\n    ##\n    gender2 = factor(gender2,\n      levels = c(\"male\", \"female\"),\n      labels = c(\"Male\", \"Female\"),\n      ordered = TRUE\n    ),\n    ##\n    afam = factor(afam,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n     ##\n    hispanic = factor(hispanic,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    ),\n     ##\n    other = factor(other,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"Yes\", \"No\"),\n      ordered = TRUE\n    )\n  )\n\n# A tibble: 254,654 × 9\n   rownames morekids gender1 gender2   age afam  hispanic other  work\n      &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;   &lt;ord&gt;   &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt;    &lt;ord&gt; &lt;dbl&gt;\n 1        1 No       Male    Female     27 No    No       No        0\n 2        2 No       Female  Male       30 No    No       No       30\n 3        3 No       Male    Female     27 No    No       No        0\n 4        4 No       Male    Female     35 Yes   No       No        0\n 5        5 No       Female  Female     30 No    No       No       22\n 6        6 No       Male    Female     26 No    No       No       40\n 7        7 No       Female  Male       29 No    No       No        0\n 8        8 No       Male    Male       33 No    No       No       52\n 9        9 No       Female  Male       29 No    No       No        0\n10       10 No       Male    Female     27 No    No       No        0\n# ℹ 254,644 more rows\n\nfertility_modified %&gt;% glimpse()\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, yes, no, no, no, no, …\n$ gender1  &lt;fct&gt; male, female, male, male, female, male, female, male, female,…\n$ gender2  &lt;fct&gt; female, male, female, female, female, female, male, male, mal…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;fct&gt; no, no, no, yes, no, no, no, no, no, no, no, no, no, no, no, …\n$ hispanic &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ other    &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n.\n\n\nQ0: How many participants want more kids?\n\n## Count of those who want more kids\nfertility_modified %&gt;% gf_bar(~morekids) %&gt;%\n  gf_labs(title = \"Plot 0.A: Counts of those who want More Kids\",\n          subtitle = \"fill = none\")\n\n\n\n\n\n\n\n\n.\n\n## Propotion of those who want more kids\nfertility_modified %&gt;% \n  gf_bar(~morekids,\n         fill = ~morekids,\n          position = \"stack\"           ) %&gt;%\n  gf_labs(title = \"Plot 0.B: Proportion of those who want More Kids\",\n          subtitle = \"position = 'fill'\")\n\n\n\n\n\n\n\n\n.\n\nEssentialy I wanted a graph with a single bar, but toggling with ‘position’ doesn’t seem to be doing anything. Why?\nBut moving on:\n\n.\n.\n\n\nQ1: How does the number of working hours affect the likelihood of wanting more kids?\n.\n\n## trying to use gf_col and make the y axis working hours\nfertility_modified %&gt;%\n  drop_na(work) %&gt;% \n  gf_col(work ~ morekids) %&gt;%\n  gf_labs(title = \"Plot 1.A: Those who want More Kids plotted against Working Hours\",\n          subtitle = \"fill = none\")\n\n\n\n\n\n\n\n\n\nnot really the result I was looking for; why is the y axis in a logarithmic scale??\n\n\n## trying with gf_bar and fill instead\nfertility_modified %&gt;% \n  gf_bar(~work,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 1.B: Those who want More Kids by Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\nNow that’s more like it!!\nHow would this look like as a line graph?\n\n.\n\n## work vs morekids line graph\nfertility_modified %&gt;%\n  group_by(work) %&gt;% \n  summarize(morekidsprop = mean(morekids == \"yes\")) %&gt;% \n  gf_line(morekidsprop ~ work)%&gt;%\n  gf_labs(title = \"Plot 1.C:  Proportion of Those who want More Kids by Working Hours\",\n          subtitle = \"line graph\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 0.A: In general, there are more people who do not wan;t kids.\n.\nPlot 1.B: There seems to be a gradual decline in those who want kids as the work hours per week increase\n.\nPlot 1.C: The line graph indicates that there is indeed a decline overall, though it is not a smooth one. When looking at those who work 50 hours a week, the proportion of those who want kids is definitely less than those who work 0 hours a week - However, the same graph indicates that those who work 25 hours a week have a higher proportion of those who want kids in comparison to those who work 23 hours (a lesser amount).\n\nLets plot other variables to see if there are any stronger patterns\n\n\n.\n.\n\n\nQ2: Does age affect the likelihood of wanting more kids?\n.\n\n## plotting age vs morekids\nfertility_modified %&gt;% \n  gf_bar(~age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 2: Those who want More Kids by their age\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\nWow, interestingly, the proportion of those who want more kids increases steadily with age.\n\n.\n.\n\n\nQ3: How do age and work factor into wanting more kids?\n.\n\n## plotting morekids against both age and work\nfertility_modified %&gt;%\n  gf_bar(~ work | age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 3.A: Those who want More Kids by Age and Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n\nThe readability is quite low.. what if i filter the ages to look at individually?\n\n\n## plotting morekids against both age and work - filtered\nfertility_modified %&gt;% \n  filter(age == \"21\")%&gt;%\n  gf_bar(~ work | age,\n         fill = ~morekids,\n         position = \"fill\") %&gt;%\n  gf_labs(title = \"Plot 3.B: Those who are 21 vs More Kids and Working Hours\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 3.A: Those who are younger seem to have more variation in terms of wanting more kids, that is, it does not seem to be related to their hours of work. Those who are older seem to be of similar opinions across different amounts of work hours, but there is still no established pattern in the relation of the two variables\n.\nPlot 3.B: The missing bars indicate that there is no data at that intersection, i.e, there is nobody in this data set who is 21 years old and works 21 hours a week, and so on.\n\n\n\n.\n.\n\n\nQ4: Do the gender of the existing children play a part in wanting more kids?\n.\n\n## plotting distribution of gender1 and gender 2\nfertility_modified %&gt;% \n  gf_bar(~ gender1 | gender2,\n         fill = ~morekids,\n         position = \"stack\") %&gt;%\n  gf_labs(title = \"Plot 4.A: morekids vs gender\",\n          subtitle = \"fill = morekids\")\n\n\n\n\n\n\n\n\n\nHow can this graph be made more readable?\nLets try.\n\n\nfertility_modifiedA &lt;- fertility_modified %&gt;%\n  dplyr::mutate(\n    gender = paste( gender1, gender2, sep = \"_\"),\n    gender = factor(gender,\n                    levels = c(\"male_female\", \"male_male\", \"female_male\", \"female_female\", ordered = TRUE ),\n                   labels = c(\"male&female\", \"male&male\",\"male&female\", \"female&female\", ordered = TRUE )))\n \n\nfertility_modifiedA\n\n# A tibble: 254,654 × 10\n   rownames morekids gender1 gender2   age afam  hispanic other  work gender    \n      &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;   &lt;fct&gt;   &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt;     \n 1        1 no       male    female     27 no    no       no        0 male&fema…\n 2        2 no       female  male       30 no    no       no       30 male&fema…\n 3        3 no       male    female     27 no    no       no        0 male&fema…\n 4        4 no       male    female     35 yes   no       no        0 male&fema…\n 5        5 no       female  female     30 no    no       no       22 female&fe…\n 6        6 no       male    female     26 no    no       no       40 male&fema…\n 7        7 no       female  male       29 no    no       no        0 male&fema…\n 8        8 no       male    male       33 no    no       no       52 male&male \n 9        9 no       female  male       29 no    no       no        0 male&fema…\n10       10 no       male    female     27 no    no       no        0 male&fema…\n# ℹ 254,644 more rows\n\n\n\nfertility_modifiedA%&gt;% \n  gf_bar(~morekids,\n         fill = ~gender,\n         position = \"dodge\"\n         )%&gt;%\n  gf_labs(title = \"Plot 4.B: morekids vs gender\",\n          subtitle = \"fill = gender\")\n\n\n\n\n\n\n\n\n\nSuccess!\nNow in looking at proportion:\n\n\nfertility_modifiedA%&gt;% \n  gf_bar(~morekids,\n         fill = ~gender,\n         position = \"fill\"\n         )%&gt;%\n  gf_labs(title = \"Plot 4.C: morekids vs gender\",\n          subtitle = \"fill = gender\")\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from the Graphs:\n\nPlot 4.A: The three combinations of gender are the same relative to each other in both ‘yes’ and ‘no’ sections under wanting more kids. in other words, both sections have participants with male and female children as the largest proportion and participants with two female kids making up the smallest proportion\n.\nPlot 4.B: Comparing the proportions, however, can tell us that those who have two kids of the same gender already are more likely (even if by a small margin) to want more kids.\n\n\n\n.\n.\n\n\nQ5. What relation (if any) is there between ethnicity and wanting to have more kids?\n.\n\nfertility_modified %&gt;% \n  gf_bar(~morekids,\n         fill = ~afam,\n                              )%&gt;%  \ngf_labs(\n  title = \"Plot 5.A: Counts of those who want More Kids\",\n  subtitle = \"fill = afam\")\n\n\n\n\n\n\n\n\n.\n\nCalculating proportions:\n\n.\n\nfertility_modified %&gt;%\n  ##\n  group_by(morekids) %&gt;% \n  ##\n  summarise(afam_prop = prop(afam), \n            hispanic_prop = prop(hispanic), \n            other_prop = prop(other), \n            majority_prop = sum(prop(afam),prop(hispanic), prop(other))) \n\n# A tibble: 2 × 5\n  morekids afam_prop hispanic_prop other_prop majority_prop\n  &lt;fct&gt;        &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1 no           0.955         0.942      0.951          2.85\n2 yes          0.938         0.900      0.931          2.77\n\n  ## the proportions added up become more than 100%??\n\n.\n\nLaying the groundwork, splitting up categories:\n\n.\n\nfertility_modifiedB &lt;- fertility_modified %&gt;%\n  group_by(morekids) %&gt;% \n  summarise(\n    afam_prop = mean(afam == \"yes\"),          \n    hispanic_prop = mean(hispanic == \"yes\"),  \n    other_prop = mean(other == \"yes\"),        \n    \n    ## since the proportions were added together and found to be more than one, identifying the overlapping categories\n    \n    afam_hispanic = mean(afam == \"yes\" & hispanic == \"yes\"),\n    afam_other = mean(afam == \"yes\" & other == \"yes\"),\n    hispanic_other = mean(other == \"yes\" & hispanic == \"yes\"),\n    ##\n    \n    only_hispanic = hispanic_prop - sum(hispanic_other, afam_hispanic),\n    \n    only_afam = afam_prop - sum(afam_hispanic, afam_other),\n    \n    only_other = other_prop - sum(afam_other, hispanic_other),\n    \n    majority_prop = mean(afam == \"no\"& hispanic == \"no\"& other == \"no\"),\n    minority_prop = sum(only_hispanic, only_afam, only_other, afam_hispanic, afam_other, hispanic_other))  \n\nglimpse(fertility_modifiedB)\n\nRows: 2\nColumns: 12\n$ morekids       &lt;fct&gt; no, yes\n$ afam_prop      &lt;dbl&gt; 0.04520673, 0.06216980\n$ hispanic_prop  &lt;dbl&gt; 0.05824701, 0.10018367\n$ other_prop     &lt;dbl&gt; 0.04884558, 0.06854672\n$ afam_hispanic  &lt;dbl&gt; 0.0006593044, 0.0009493148\n$ afam_other     &lt;dbl&gt; 0, 0\n$ hispanic_other &lt;dbl&gt; 0.02232760, 0.04191431\n$ only_hispanic  &lt;dbl&gt; 0.03526011, 0.05732004\n$ only_afam      &lt;dbl&gt; 0.04454743, 0.06122049\n$ only_other     &lt;dbl&gt; 0.02651799, 0.02663241\n$ majority_prop  &lt;dbl&gt; 0.8706876, 0.8119634\n$ minority_prop  &lt;dbl&gt; 0.1293124, 0.1880366\n\n\n\n## Attempting to make my own data set with simply the propotions calculated after summary\nfertilitytwo &lt;- readxl::read_excel(\"../../Data/fertilitytwo.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n\nfertilitytwo\n\n# A tibble: 3 × 11\n  ...1     ethnicity       ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10 ...11\n  &lt;chr&gt;    &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 morekids afam_prop       hisp… othe… afam… afam… hisp… only… only… only… majo…\n2 no       4.520673000000… 5.82… 4.88… 6.59… 0     2.23… 3.52… 4.45… 2.65… 0.12…\n3 yes      6.216979999999… 0.10… 6.85… 9.49… 0     4.19… 5.73… 6.12… 2.66… 0.18…\n\n## Quickly realising that won't work ;-;\n\n.\n\nIdentifying the proportion of the minority, where the majority is defined by those who do not identify as Hispanic, African American or Other.\n\n.\n\n## majority vs minority\nfertility_modifiedB %&gt;%\n  select(\n    morekids, majority_prop, minority_prop\n  ) %&gt;%\n  pivot_longer(cols = c(majority_prop, minority_prop),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;%\n  mutate(\n          ethnicity = factor(ethnicity,\n                              levels = c( \"majority_prop\", \"minority_prop\"))\n               ) %&gt;% \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"fill\") %&gt;%\n  gf_labs(\n    title = \"Plot 5.B: Ethnicity: majority and minority vs morekids\",\n    subtitle = \"position = fill\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## trying pivot longer \nfertility_modifiedB %&gt;%select(-afam_prop, -hispanic_prop,-other_prop, -majority_prop)%&gt;%\n  pivot_longer(cols = c(only_hispanic, only_afam, only_other, afam_hispanic, hispanic_other),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;% \n  mutate(\n                 ethnicity = factor(ethnicity,\n                                    levels = c( \"only_afam\", \"afam_hispanic\", \"only_hispanic\", \"hispanic_other\", \"only_other\", ordered = TRUE ))\n               ) %&gt;% \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"dodge\") %&gt;%\n  gf_labs(\n    title = \"Plot 5.C: minority ethnicity vs morekids\",\n    subtitle = \"position = dodge\"\n  )\n\n\n\n\n\n\n\n\n\n## PROPORTION\nfertility_modifiedB %&gt;%select(-afam_prop, -hispanic_prop,-other_prop, -majority_prop)%&gt;%\n  pivot_longer(cols = c(only_hispanic, only_afam, only_other, afam_hispanic, hispanic_other),\n               cols_vary = \"fastest\",\n               names_to = \"ethnicity\") %&gt;% mutate(\n                 ethnicity = factor(ethnicity,\n                                    levels = c( \"only_afam\", \"afam_hispanic\", \"only_hispanic\", \"hispanic_other\", \"only_other\", ordered = TRUE ))\n               ) %&gt;%\n   \n  gf_col(value ~ morekids,\n         fill = ~ethnicity,\n         position = \"fill\")%&gt;%\n  gf_labs(\n    title = \"Plot 5.D: minority ethnicity vs morekids\",\n    subtitle = \"position = fill\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nUnderstandings from graphs:\n\nPlot 5.B: Minority ethnicities have a higher proportion of those who want more kids.\n.\nPlot 5.C: There is no strong pattern to be concerned with in this plot, as some categories bleed into one another.\n.\nPlot 5.D: Those who identify as Hispanic make up for most of those in the minority ethnicity category who want to have more kids, even if by a small margin. The ‘African American Only’ and ‘Other Only’ categories are ever so slightly smaller than their proportion in the ‘no’ more kids category.\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 3/index.html#conclusion",
    "href": "posts/Day 3/index.html#conclusion",
    "title": "Day 3: Counts",
    "section": "Conclusion:",
    "text": "Conclusion:"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html",
    "href": "posts/Day 1 hello-world/index.html",
    "title": "Day 1: Hello Universe",
    "section": "",
    "text": "hello universe, hello world :D\n\n\nCreating Posts:\n\nNavigate to “Data-As-Material-Class-Folder&gt;posts” and create a new folder\nlets name the folder “Day X”\nThen proceed to “File&gt;New File&gt;Quarto Document”\nTitle and Author your document\nSave the new document IN “DAY X” as index.qmd EACH TIME.\n\nThere can be only 1 index file in each folder!"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html#introduction",
    "href": "posts/Day 1 hello-world/index.html#introduction",
    "title": "Day 1: Hello Universe",
    "section": "",
    "text": "hello universe, hello world :D\n\n\nCreating Posts:\n\nNavigate to “Data-As-Material-Class-Folder&gt;posts” and create a new folder\nlets name the folder “Day X”\nThen proceed to “File&gt;New File&gt;Quarto Document”\nTitle and Author your document\nSave the new document IN “DAY X” as index.qmd EACH TIME.\n\nThere can be only 1 index file in each folder!"
  },
  {
    "objectID": "posts/Day 1 hello-world/index.html#my-first-pieces-of-r-code",
    "href": "posts/Day 1 hello-world/index.html#my-first-pieces-of-r-code",
    "title": "Day 1: Hello Universe",
    "section": "My First Piece(s) of R Code",
    "text": "My First Piece(s) of R Code\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(babynames)\n\n\nLets look at every baby name from the US starting all the way from…\n\n\n…..1880?!?!?\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n\n\n\n\nHow many “Aditi”s have existed?\n\nbabynames %&gt;% filter(name ==\"Aditi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nWhat about “Adhithi”?\n\nbabynames %&gt;% filter(name == \"Adhithi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\n“Adithi”?\n\nbabynames %&gt;% filter(name == \"Adithi\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nor “Adhiti”?\n\nbabynames %&gt;% filter(name == \"Adhiti\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nIn compiling them all into a single graph….\n\nbabynames %&gt;% filter(name == \"Aditi\"|name == \"Adhithi\"|name == \"Adithi\"|name == \"Adhiti\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nWOAHH!!\n\n\nAlthough, my own name has some dissapointing results :(\n\nbabynames %&gt;% filter(name == \"Vasantha\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nMy mother’s name seems to be faring better than mine, across the world..\n\nbabynames %&gt;% filter(name == \"Meena\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nAs are her counterparts!!\n\nbabynames %&gt;% filter(name == \"Mina\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\nAnd together…\n\nbabynames %&gt;% filter(name == \"Meena\"|name == \"Mina\") %&gt;% \n  gf_line(n~year)\n\n\n\n\n\n\n\n\n\n\n:)"
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html",
    "href": "posts/A2 - Case Study 3/index.html",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "Check out the Assignment here!\n.\n\n\nThe data set observed in this case study goes over 32 occupations, discussing their number of workers, total earnings, proportion of male and female workers, and their wage percentages.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(DT)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:mosaic':\n\n    rescale\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n.\n.\n\n\n\n\n\njobgender &lt;- read_delim(file = \"../../Data/job_gender_data.csv\", delim = \";\" ) %&gt;% glimpse()\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (3): occupation, major_category, minor_category\ndbl (7): year, total_workers, workers_male, workers_female, total_earnings, ...\nnum (2): percent_female, wage_percent_of_male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 32\nColumns: 12\n$ year                  &lt;dbl&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 8.855491e+14, 8.992731e+14, 5.456222e+14, 8.7135…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\njobgender %&gt;% inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1     occupation character     32 32       0\n2 major_category character      1 32       0\n3 minor_category character      1 32       0\n                                   distribution\n1 Audiologists (3.1%) ...                      \n2  (%) ...                                     \n3  (%) ...                                     \n\nquantitative variables:  \n                   name   class          min           Q1       median\n1                  year numeric 2.016000e+03 2.016000e+03 2.016000e+03\n2         total_workers numeric 4.001000e+03 3.750350e+04 8.978400e+04\n3          workers_male numeric 0.000000e+00 7.437000e+03 2.608100e+04\n4        workers_female numeric 9.530000e+02 1.375975e+04 5.753250e+04\n5        percent_female numeric 1.564090e+14 5.738413e+14 6.703936e+14\n6        total_earnings numeric 3.246600e+04 4.942325e+04 6.443150e+04\n7   total_earnings_male numeric 3.609300e+04 5.111500e+04 7.095200e+04\n8 total_earnings_female numeric 3.209300e+04 4.846225e+04 6.012800e+04\n9  wage_percent_of_male numeric 6.643337e+14 8.020231e+14 8.666381e+14\n            Q3          max         mean           sd  n missing\n1 2.016000e+03 2.016000e+03 2.016000e+03 0.000000e+00 32       0\n2 1.637307e+05 2.317493e+06 2.049671e+05 4.208274e+05 32       0\n3 6.672025e+04 4.897480e+05 5.645797e+04 9.613719e+04 32       0\n4 1.060613e+05 2.036445e+06 1.485091e+05 3.617156e+05 32       0\n5 8.657607e+14 1.000000e+15 6.517922e+14 2.274756e+14 32       0\n6 1.008672e+05 2.015420e+05 7.792281e+04 4.053443e+04 32       0\n7 1.073760e+05 2.314200e+05 8.478716e+04 4.538677e+04 31       1\n8 1.001310e+05 1.663880e+05 7.166166e+04 3.405611e+04 32       0\n9 9.106884e+14 1.051582e+15 8.581675e+14 1.008336e+14 24       8\n\n\n.\n.\n\n\nThere are 32 rows and 12 colomns in this data set.\n.\n\n\n\noccupation : Describes the occupations of the workers. There are 32 occupations in this data set.\nmajor_category : Describes the broader category in which the occupation falls under. There is only one category and that is Healthcare Practitioner and Technictians\nminor_category : Though it is stated as a different coloumn, it is the same as the above coloumn.\n\n\n\n\n\ntotal_workers : Describes the total number of workers in each occupation.\nworkers_male : Describes the total number of male workers in each occupation.\nworkers_female : Describes the total number of female workers in each occupation.\npercent_female : The percentage of female workers in each occupation.\ntotal_earnings : the total earnings of each occupation.\ntotal_earnings_male : the total earnings of male workers in each occupation.\ntotal_earnings_female : the total earnings of female workers in each occupation.\nwage_percentage_of_male : the percentage of earnings by males in each occupation.\n\n.\n.\n\n\n\n\n.\n\njobgender_mod &lt;- jobgender %&gt;% \n  mutate(\n    year = as_factor(year),\n    percent_female = percent_female*0.0000000000001\n  ) %&gt;% glimpse()\n\nRows: 32\nColumns: 12\n$ year                  &lt;fct&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 88.55491, 89.92731, 54.56222, 87.13566, 76.57634…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\ndatatable(jobgender_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis data set consists of only those who work in the health sector, in 2016.\n\n\n\nOnly one occupation has no males and 100% females that make up its workforce: Nurse midwives.\nTwo occupations, Dietitians and Nutritionists, as well as Medical Records and Health Information Technicians both have a wage_percent_of_male as more than 100%. How is that possible?\nThe total_earnings coloumn is most of the times, of not less than total_earnings_female and total_earnings_male coloumns, How is that possible? Have I misunderstood the data?\nIn fact, upon closer inspection, it seems to lie in the middle of total_earnings_female and total_earnings_male. Interesting. Perhaps the data has been modified, but labelled incorrectly? A case of total_earnings = median(total_earnings) ??\n\n.\n.\n\n\n\n\n.\n\n## Grouping by occupation, summarizing to obtain median_earnings\n##\njobgender_mod %&gt;%\n  group_by(occupation) %&gt;% \n  summarize(median_earnings = median(total_earnings),\n        percent_female, total_workers) %&gt;% \n  ##\n  ## plotting data after grouping and summarizing\n  ##\n  ggplot(aes(x = percent_female, y = median_earnings, size = total_workers)) +\n  geom_point(alpha = 0.7) + \n  scale_size(range = c(1, 10)) +\n  labs(title = \"Salaries and Gender Proportion in the Workforce\",\n       y = \"Median salary in the occupation\",\n       x = \"% of workforce reported as female\",\n       size = \"Total # of Workers\",\n       color = \"Category\") +\n  scale_x_continuous(labels = function(x) paste(x, \"%\")) +\n  scale_y_continuous(labels = function(y) paste(y/1000,\"K\"))+\n  theme_minimal() \n\n\n\n\n\n\n\n\n.\n.\n\n\n\n.\n\n\n.\n\nWhat kind of chart is used in the figure?\nA Scatter Plot!\n.\n\n\n\nWhat geometries have been used and to which variables have these geometries been mapped?\nThe circles represent clusters of workers by occupation, and their sizes represent the total number of workers within that occupation. The placement of the circle with regards to the x-axis defines the percentage of female workers within that cluster, and the placement of the circle with regards to the y-axis defines the median salary in that occupation.\n.\nBased on this graph, do you think gender plays a role in salaries? What is the trend you see?\nBased on this graph, its quite evident that gender plays a role in salaries. As the graph moves towards majority of the workforce as women, the dots cluster at the vottom rungs of the y-axis, indicating lower median incomes.\n.\nIf SALARY, NO_OF_WORKERS, GENDER, OCCUPATION were available in the original dataset, what pre-processing would have been necessary to obtain this plot?\nSteps for pre-processing in that case:\ndf %&gt;%\ngroup_by(occupation) %&gt;%\nsummarize(workers_female = count(gender == \"female\"),\npercent_female = (workers_female/no_of_workers)*100,\nmeadian_salary = median(salary)) %&gt;% ggplot(...)... and so on.\n\n.\n.\n\n\n\n.\n\nI prompted ChatGPT with “scatter plot with different sized dots in r, using tidyverse , ggformula, mosaic, skimr” and it came up with a sample data set and code chunk. After running the code and playing around with factors such as scale_size(range =c()), geom_point(alpha =), label inputs, as well as messing around with I had a pretty good idea of how things worked.\n.\n\n\n## ChatGPT:  Sample dataset\nset.seed(42)  # For reproducibility\ndata &lt;- tibble(\n  x = rnorm(100),                  # Random normal values for x-axis\n  y = rnorm(100),                  # Random normal values for y-axis\n  size = runif(100, 1, 10),        # Random sizes for the dots\n  category = sample(letters[1:3], 100, replace = TRUE)  # Random categories\n)\n\n.\n\n## Chat GPT: Create scatter plot with varying dot sizes\nggplot(data, aes(x = x, y = y, size = size, color = category)) +\n  geom_point(alpha = 0.7) +  # Adjust alpha for transparency\n  scale_size(range = c(1, 10)) +  # Control the size range\n  labs(title = \"Scatter Plot with Varying Dot Sizes\",\n       x = \"X-axis Label\",\n       y = \"Y-axis Label\",\n       size = \"Size Legend\",\n       color = \"Category\") +\n  theme_minimal()  # Use a minimal theme"
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#introduction",
    "href": "posts/A2 - Case Study 3/index.html#introduction",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "The data set observed in this case study goes over 32 occupations, discussing their number of workers, total earnings, proportion of male and female workers, and their wage percentages.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(DT)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:mosaic':\n\n    rescale\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#examining-data",
    "href": "posts/A2 - Case Study 3/index.html#examining-data",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": "jobgender &lt;- read_delim(file = \"../../Data/job_gender_data.csv\", delim = \";\" ) %&gt;% glimpse()\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (3): occupation, major_category, minor_category\ndbl (7): year, total_workers, workers_male, workers_female, total_earnings, ...\nnum (2): percent_female, wage_percent_of_male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 32\nColumns: 12\n$ year                  &lt;dbl&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 8.855491e+14, 8.992731e+14, 5.456222e+14, 8.7135…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\njobgender %&gt;% inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1     occupation character     32 32       0\n2 major_category character      1 32       0\n3 minor_category character      1 32       0\n                                   distribution\n1 Audiologists (3.1%) ...                      \n2  (%) ...                                     \n3  (%) ...                                     \n\nquantitative variables:  \n                   name   class          min           Q1       median\n1                  year numeric 2.016000e+03 2.016000e+03 2.016000e+03\n2         total_workers numeric 4.001000e+03 3.750350e+04 8.978400e+04\n3          workers_male numeric 0.000000e+00 7.437000e+03 2.608100e+04\n4        workers_female numeric 9.530000e+02 1.375975e+04 5.753250e+04\n5        percent_female numeric 1.564090e+14 5.738413e+14 6.703936e+14\n6        total_earnings numeric 3.246600e+04 4.942325e+04 6.443150e+04\n7   total_earnings_male numeric 3.609300e+04 5.111500e+04 7.095200e+04\n8 total_earnings_female numeric 3.209300e+04 4.846225e+04 6.012800e+04\n9  wage_percent_of_male numeric 6.643337e+14 8.020231e+14 8.666381e+14\n            Q3          max         mean           sd  n missing\n1 2.016000e+03 2.016000e+03 2.016000e+03 0.000000e+00 32       0\n2 1.637307e+05 2.317493e+06 2.049671e+05 4.208274e+05 32       0\n3 6.672025e+04 4.897480e+05 5.645797e+04 9.613719e+04 32       0\n4 1.060613e+05 2.036445e+06 1.485091e+05 3.617156e+05 32       0\n5 8.657607e+14 1.000000e+15 6.517922e+14 2.274756e+14 32       0\n6 1.008672e+05 2.015420e+05 7.792281e+04 4.053443e+04 32       0\n7 1.073760e+05 2.314200e+05 8.478716e+04 4.538677e+04 31       1\n8 1.001310e+05 1.663880e+05 7.166166e+04 3.405611e+04 32       0\n9 9.106884e+14 1.051582e+15 8.581675e+14 1.008336e+14 24       8\n\n\n.\n.\n\n\nThere are 32 rows and 12 colomns in this data set.\n.\n\n\n\noccupation : Describes the occupations of the workers. There are 32 occupations in this data set.\nmajor_category : Describes the broader category in which the occupation falls under. There is only one category and that is Healthcare Practitioner and Technictians\nminor_category : Though it is stated as a different coloumn, it is the same as the above coloumn.\n\n\n\n\n\ntotal_workers : Describes the total number of workers in each occupation.\nworkers_male : Describes the total number of male workers in each occupation.\nworkers_female : Describes the total number of female workers in each occupation.\npercent_female : The percentage of female workers in each occupation.\ntotal_earnings : the total earnings of each occupation.\ntotal_earnings_male : the total earnings of male workers in each occupation.\ntotal_earnings_female : the total earnings of female workers in each occupation.\nwage_percentage_of_male : the percentage of earnings by males in each occupation.\n\n.\n.\n\n\n\n\n.\n\njobgender_mod &lt;- jobgender %&gt;% \n  mutate(\n    year = as_factor(year),\n    percent_female = percent_female*0.0000000000001\n  ) %&gt;% glimpse()\n\nRows: 32\nColumns: 12\n$ year                  &lt;fct&gt; 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, …\n$ occupation            &lt;chr&gt; \"Dietitians and nutritionists\", \"Medical records…\n$ major_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ minor_category        &lt;chr&gt; \"Healthcare Practitioners and Technical\", \"Healt…\n$ total_workers         &lt;dbl&gt; 70729, 148302, 214665, 602316, 107797, 245278, 2…\n$ workers_male          &lt;dbl&gt; 8095, 14938, 97539, 77484, 25250, 68887, 281048,…\n$ workers_female        &lt;dbl&gt; 62634, 133364, 117126, 524832, 82547, 176391, 20…\n$ percent_female        &lt;dbl&gt; 88.55491, 89.92731, 54.56222, 87.13566, 76.57634…\n$ total_earnings        &lt;dbl&gt; 49841, 38273, 120878, 38946, 50208, 48170, 65331…\n$ total_earnings_male   &lt;dbl&gt; 47439, 37208, 122351, 40939, 52202, 51112, 70952…\n$ total_earnings_female &lt;dbl&gt; 49886, 38404, 118461, 38523, 48955, 46984, 64413…\n$ wage_percent_of_male  &lt;dbl&gt; 1.051582e+15, 1.032144e+15, 9.682062e+14, 9.4098…\n\n\n.\n\ndatatable(jobgender_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis data set consists of only those who work in the health sector, in 2016.\n\n\n\nOnly one occupation has no males and 100% females that make up its workforce: Nurse midwives.\nTwo occupations, Dietitians and Nutritionists, as well as Medical Records and Health Information Technicians both have a wage_percent_of_male as more than 100%. How is that possible?\nThe total_earnings coloumn is most of the times, of not less than total_earnings_female and total_earnings_male coloumns, How is that possible? Have I misunderstood the data?\nIn fact, upon closer inspection, it seems to lie in the middle of total_earnings_female and total_earnings_male. Interesting. Perhaps the data has been modified, but labelled incorrectly? A case of total_earnings = median(total_earnings) ??\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#plotting-data",
    "href": "posts/A2 - Case Study 3/index.html#plotting-data",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": ".\n\n## Grouping by occupation, summarizing to obtain median_earnings\n##\njobgender_mod %&gt;%\n  group_by(occupation) %&gt;% \n  summarize(median_earnings = median(total_earnings),\n        percent_female, total_workers) %&gt;% \n  ##\n  ## plotting data after grouping and summarizing\n  ##\n  ggplot(aes(x = percent_female, y = median_earnings, size = total_workers)) +\n  geom_point(alpha = 0.7) + \n  scale_size(range = c(1, 10)) +\n  labs(title = \"Salaries and Gender Proportion in the Workforce\",\n       y = \"Median salary in the occupation\",\n       x = \"% of workforce reported as female\",\n       size = \"Total # of Workers\",\n       color = \"Category\") +\n  scale_x_continuous(labels = function(x) paste(x, \"%\")) +\n  scale_y_continuous(labels = function(y) paste(y/1000,\"K\"))+\n  theme_minimal() \n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 3/index.html#task-and-discussion",
    "href": "posts/A2 - Case Study 3/index.html#task-and-discussion",
    "title": "A2 - Case Study 3",
    "section": "",
    "text": ".\n\n\n.\n\nWhat kind of chart is used in the figure?\nA Scatter Plot!\n.\n\n\n\nWhat geometries have been used and to which variables have these geometries been mapped?\nThe circles represent clusters of workers by occupation, and their sizes represent the total number of workers within that occupation. The placement of the circle with regards to the x-axis defines the percentage of female workers within that cluster, and the placement of the circle with regards to the y-axis defines the median salary in that occupation.\n.\nBased on this graph, do you think gender plays a role in salaries? What is the trend you see?\nBased on this graph, its quite evident that gender plays a role in salaries. As the graph moves towards majority of the workforce as women, the dots cluster at the vottom rungs of the y-axis, indicating lower median incomes.\n.\nIf SALARY, NO_OF_WORKERS, GENDER, OCCUPATION were available in the original dataset, what pre-processing would have been necessary to obtain this plot?\nSteps for pre-processing in that case:\ndf %&gt;%\ngroup_by(occupation) %&gt;%\nsummarize(workers_female = count(gender == \"female\"),\npercent_female = (workers_female/no_of_workers)*100,\nmeadian_salary = median(salary)) %&gt;% ggplot(...)... and so on.\n\n.\n.\n\n\n\n.\n\nI prompted ChatGPT with “scatter plot with different sized dots in r, using tidyverse , ggformula, mosaic, skimr” and it came up with a sample data set and code chunk. After running the code and playing around with factors such as scale_size(range =c()), geom_point(alpha =), label inputs, as well as messing around with I had a pretty good idea of how things worked.\n.\n\n\n## ChatGPT:  Sample dataset\nset.seed(42)  # For reproducibility\ndata &lt;- tibble(\n  x = rnorm(100),                  # Random normal values for x-axis\n  y = rnorm(100),                  # Random normal values for y-axis\n  size = runif(100, 1, 10),        # Random sizes for the dots\n  category = sample(letters[1:3], 100, replace = TRUE)  # Random categories\n)\n\n.\n\n## Chat GPT: Create scatter plot with varying dot sizes\nggplot(data, aes(x = x, y = y, size = size, color = category)) +\n  geom_point(alpha = 0.7) +  # Adjust alpha for transparency\n  scale_size(range = c(1, 10)) +  # Control the size range\n  labs(title = \"Scatter Plot with Varying Dot Sizes\",\n       x = \"X-axis Label\",\n       y = \"Y-axis Label\",\n       size = \"Size Legend\",\n       color = \"Category\") +\n  theme_minimal()  # Use a minimal theme"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data-as-Material-Class",
    "section": "",
    "text": "A2: Case Study 2\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA2 - Case Study 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA2 - Case Study 1\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA3 - B.FA vs B.Des vs B.Voc\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA3 - Chhota Bheem vs Doremon vs Dragon Tales\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA3 - Gals vs Guys in Spending\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nA3 - Veg vs Non-Veg in Tips\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 1: Hello Universe\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 2: Summaries\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 3: Counts\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 4: Quantities\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 5: Groups\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 5: Change\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 6: Stats Theory\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 7: Comparing Multiple Means with ANOVA\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nDay 8: Stats Theory Proportions\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nAnd Finally…..\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\n\n\n\n\n\n\nOnline Session - Maps\n\n\n\n\n\n\n\n\n\n\n\nVasantha M\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html",
    "href": "posts/A2 - Case Study 2/index.html",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "Check out the Assignment here!\n\n\nThe data set observed in this case study goes over 1339 coffee harvests, discussing their country of origin, region, owners, companies, variety, colour, and such, along with parameters such as their total cup score, aroma, sweetness, flavour, acidity, aftertaste etc. Totally, this data set has 43 columns.\n.\nLike Hansel and Gretel, I follow the breadcrumbs till the end :P\n.\n\n\nTBA\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n.\n\n\n\n\n\ncoffee &lt;- read_delim( file = \"../../Data/coffee-ratings.csv\", delim = \";\") %&gt;% glimpse()\n\nRows: 1339 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (25): species, owner, country_of_origin, farm_name, lot_number, mill, ic...\ndbl  (4): number_of_bags, category_one_defects, quakers, category_two_defects\nnum (14): total_cup_points, aroma, flavor, aftertaste, acidity, body, balanc...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 1,339\nColumns: 43\n$ total_cup_points      &lt;dbl&gt; 9058, 8992, 8975, 8900, 8883, 8883, 8875, 8867, …\n$ species               &lt;chr&gt; \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 &lt;chr&gt; \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     &lt;chr&gt; \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             &lt;chr&gt; \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  &lt;chr&gt; \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            &lt;chr&gt; \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               &lt;chr&gt; \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              &lt;chr&gt; \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                &lt;chr&gt; \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              &lt;chr&gt; \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        &lt;dbl&gt; 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            &lt;chr&gt; \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          &lt;chr&gt; \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          &lt;chr&gt; \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               &lt;chr&gt; \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               &lt;chr&gt; NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     &lt;chr&gt; \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 &lt;dbl&gt; 867, 875, 842, 817, 825, 858, 842, 825, 867, 808…\n$ flavor                &lt;dbl&gt; 883, 867, 850, 858, 850, 842, 850, 833, 867, 858…\n$ aftertaste            &lt;dbl&gt; 867, 850, 842, 842, 825, 842, 833, 850, 858, 850…\n$ acidity               &lt;dbl&gt; 875, 858, 842, 842, 850, 850, 850, 842, 842, 850…\n$ body                  &lt;dbl&gt; 850, 842, 833, 850, 842, 825, 825, 833, 833, 767…\n$ balance               &lt;dbl&gt; 842, 842, 842, 825, 833, 833, 825, 850, 842, 842…\n$ uniformity            &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ clean_cup             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ sweetness             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 933, 9…\n$ cupper_points         &lt;dbl&gt; 875, 858, 925, 867, 858, 833, 850, 900, 867, 850…\n$ moisture              &lt;chr&gt; \"0,12\", \"0,12\", \"0,00\", \"0,11\", \"0,12\", \"0,11\", …\n$ category_one_defects  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 &lt;chr&gt; \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  &lt;dbl&gt; 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            &lt;chr&gt; \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address &lt;chr&gt; \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact &lt;chr&gt; \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   &lt;chr&gt; \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   &lt;dbl&gt; 19500000, 19500000, 16000000, 18000000, 19500000…\n$ altitude_high_meters  &lt;dbl&gt; 22000000, 22000000, 18000000, 22000000, 22000000…\n$ altitude_mean_meters  &lt;dbl&gt; 20750000, 20750000, 17000000, 20000000, 20750000…\n\n\n.\n\ncoffee %&gt;% inspect()\n\n\ncategorical variables:  \n                    name     class levels    n missing\n1                species character      2 1339       0\n2                  owner character    315 1332       7\n3      country_of_origin character     36 1338       1\n4              farm_name character    571  980     359\n5             lot_number character    227  276    1063\n6                   mill character    460 1024     315\n7             ico_number character    847 1188     151\n8                company character    281 1130     209\n9               altitude character    396 1113     226\n10                region character    356 1280      59\n11              producer character    691 1108     231\n12            bag_weight character     56 1339       0\n13    in_country_partner character     27 1339       0\n14          harvest_year character     46 1292      47\n15          grading_date character    567 1339       0\n16               owner_1 character    319 1332       7\n17               variety character     29 1113     226\n18     processing_method character      5 1169     170\n19              moisture character     23 1339       0\n20                 color character      4 1121     218\n21            expiration character    566 1339       0\n22    certification_body character     26 1339       0\n23 certification_address character     32 1339       0\n24 certification_contact character     29 1339       0\n25   unit_of_measurement character      2 1339       0\n                                    distribution\n1  Arabica (97.9%), Robusta (2.1%)              \n2  juan luis alvarado romero (11.6%) ...        \n3  Mexico (17.6%), Colombia (13.7%) ...         \n4  various (4.8%), rio verde (2.3%) ...         \n5  1 (6.5%), 020/17 (2.2%) ...                  \n6  beneficio ixchel (8.8%) ...                  \n7  0 (6.5%), Taiwan (2.6%) ...                  \n8  unex guatemala, s.a. (7.6%) ...              \n9  1100 (3.9%), 1200 (3.8%) ...                 \n10 huila (8.8%), oriente (6.2%) ...             \n11 La Plata (2.7%) ...                          \n12 1 kg (24.7%), 60 kg (19.1%) ...              \n13 Specialty Coffee Association (23.4%) ...     \n14 2012 (27.4%), 2014 (18%) ...                 \n15 July 11th, 2012 (1.9%) ...                   \n16 Juan Luis Alvarado Romero (11.6%) ...        \n17 Caturra (23%), Bourbon (20.3%) ...           \n18 Washed / Wet (69.7%) ...                     \n19 0,11 (28.6%), 0,12 (22%) ...                 \n20 Green (77.6%), Bluish-Green (10.2%) ...      \n21 December 26th, 2014 (1.9%) ...               \n22 Specialty Coffee Association (23.4%) ...     \n23  (%) ...                                     \n24  (%) ...                                     \n25 m (86.4%), ft (13.6%)                        \n\nquantitative variables:  \n                   name   class   min       Q1   median       Q3        max\n1      total_cup_points numeric     0     8108     8250     8367       9058\n2        number_of_bags numeric     0       14      175      275       1062\n3                 aroma numeric     0      742      758      775        875\n4                flavor numeric     0      733      758      775        883\n5            aftertaste numeric     0      725      742      758        867\n6               acidity numeric     0      733      758      775        875\n7                  body numeric     0      733      750      767        858\n8               balance numeric     0      733      750      775        875\n9            uniformity numeric     0     1000     1000     1000       1000\n10            clean_cup numeric     0     1000     1000     1000       1000\n11            sweetness numeric     0     1000     1000     1000       1000\n12        cupper_points numeric     0      725      750      775       1000\n13 category_one_defects numeric     0        0        0        0         63\n14              quakers numeric     0        0        0        0         11\n15 category_two_defects numeric     0        0        2        4         55\n16  altitude_low_meters numeric 10000 11000000 13106400 16000000 1901640000\n17 altitude_high_meters numeric 10000 11000000 13500000 16500000 1901640000\n18 altitude_mean_meters numeric 10000 11000000 13106400 16000000 1901640000\n           mean           sd    n missing\n1  8.208985e+03 3.500575e+02 1339       0\n2  1.541830e+02 1.299872e+02 1339       0\n3  7.566706e+02 3.775600e+01 1339       0\n4  7.520426e+02 3.984421e+01 1339       0\n5  7.401083e+02 4.044634e+01 1339       0\n6  7.535706e+02 3.798267e+01 1339       0\n7  7.517498e+02 3.700639e+01 1339       0\n8  7.518013e+02 4.089433e+01 1339       0\n9  9.834877e+02 5.545906e+01 1339       0\n10 9.835108e+02 7.639459e+01 1339       0\n11 9.856692e+02 6.161020e+01 1339       0\n12 7.503376e+02 4.734643e+01 1339       0\n13 4.794623e-01 2.549683e+00 1339       0\n14 1.733931e-01 8.321210e-01 1338       1\n15 3.556385e+00 5.312541e+00 1339       0\n16 1.750713e+07 8.669441e+07 1109     230\n17 1.799348e+07 8.668806e+07 1109     230\n18 1.775031e+07 8.668626e+07 1109     230\n\n\n\ncoffee %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1339\n\n\nNumber of columns\n43\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n25\n\n\nnumeric\n18\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nspecies\n0\n1.00\n7\n7\n0\n2\n0\n\n\nowner\n7\n0.99\n3\n50\n0\n315\n0\n\n\ncountry_of_origin\n1\n1.00\n4\n28\n0\n36\n0\n\n\nfarm_name\n359\n0.73\n1\n73\n0\n571\n0\n\n\nlot_number\n1063\n0.21\n1\n71\n0\n227\n0\n\n\nmill\n315\n0.76\n1\n77\n0\n460\n0\n\n\nico_number\n151\n0.89\n1\n40\n0\n847\n0\n\n\ncompany\n209\n0.84\n3\n73\n0\n281\n0\n\n\naltitude\n226\n0.83\n1\n41\n0\n396\n0\n\n\nregion\n59\n0.96\n2\n76\n0\n356\n0\n\n\nproducer\n231\n0.83\n1\n100\n0\n691\n0\n\n\nbag_weight\n0\n1.00\n1\n8\n0\n56\n0\n\n\nin_country_partner\n0\n1.00\n7\n85\n0\n27\n0\n\n\nharvest_year\n47\n0.96\n3\n24\n0\n46\n0\n\n\ngrading_date\n0\n1.00\n13\n20\n0\n567\n0\n\n\nowner_1\n7\n0.99\n3\n50\n0\n319\n0\n\n\nvariety\n226\n0.83\n4\n21\n0\n29\n0\n\n\nprocessing_method\n170\n0.87\n5\n25\n0\n5\n0\n\n\nmoisture\n0\n1.00\n4\n4\n0\n23\n0\n\n\ncolor\n218\n0.84\n4\n12\n0\n4\n0\n\n\nexpiration\n0\n1.00\n13\n20\n0\n566\n0\n\n\ncertification_body\n0\n1.00\n7\n85\n0\n26\n0\n\n\ncertification_address\n0\n1.00\n40\n40\n0\n32\n0\n\n\ncertification_contact\n0\n1.00\n40\n40\n0\n29\n0\n\n\nunit_of_measurement\n0\n1.00\n1\n2\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal_cup_points\n0\n1.00\n8208.99\n350.06\n0\n8108\n8250\n8367\n9058\n▁▁▁▁▇\n\n\nnumber_of_bags\n0\n1.00\n154.18\n129.99\n0\n14\n175\n275\n1062\n▇▇▁▁▁\n\n\naroma\n0\n1.00\n756.67\n37.76\n0\n742\n758\n775\n875\n▁▁▁▁▇\n\n\nflavor\n0\n1.00\n752.04\n39.84\n0\n733\n758\n775\n883\n▁▁▁▁▇\n\n\naftertaste\n0\n1.00\n740.11\n40.45\n0\n725\n742\n758\n867\n▁▁▁▁▇\n\n\nacidity\n0\n1.00\n753.57\n37.98\n0\n733\n758\n775\n875\n▁▁▁▁▇\n\n\nbody\n0\n1.00\n751.75\n37.01\n0\n733\n750\n767\n858\n▁▁▁▁▇\n\n\nbalance\n0\n1.00\n751.80\n40.89\n0\n733\n750\n775\n875\n▁▁▁▁▇\n\n\nuniformity\n0\n1.00\n983.49\n55.46\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nclean_cup\n0\n1.00\n983.51\n76.39\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nsweetness\n0\n1.00\n985.67\n61.61\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\ncupper_points\n0\n1.00\n750.34\n47.35\n0\n725\n750\n775\n1000\n▁▁▁▇▁\n\n\ncategory_one_defects\n0\n1.00\n0.48\n2.55\n0\n0\n0\n0\n63\n▇▁▁▁▁\n\n\nquakers\n1\n1.00\n0.17\n0.83\n0\n0\n0\n0\n11\n▇▁▁▁▁\n\n\ncategory_two_defects\n0\n1.00\n3.56\n5.31\n0\n0\n2\n4\n55\n▇▁▁▁▁\n\n\naltitude_low_meters\n230\n0.83\n17507133.15\n86694405.45\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\naltitude_high_meters\n230\n0.83\n17993477.75\n86688057.71\n10000\n11000000\n13500000\n16500000\n1901640000\n▇▁▁▁▁\n\n\naltitude_mean_meters\n230\n0.83\n17750305.45\n86686260.80\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\n\n\n\n.\n\n\nWhich variables to choose as category to label by?\n\n## looking at just country_of_origin\ncoffee %&gt;% \n  count(country_of_origin) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 37 × 2\n   country_of_origin                n\n   &lt;chr&gt;                        &lt;int&gt;\n 1 Mexico                         236\n 2 Colombia                       183\n 3 Guatemala                      181\n 4 Brazil                         132\n 5 Taiwan                          75\n 6 United States (Hawaii)          73\n 7 Honduras                        53\n 8 Costa Rica                      51\n 9 Ethiopia                        44\n10 Tanzania, United Republic Of    40\n# ℹ 27 more rows\n\n##\n## This works as a good categorical variable to sort by, as it has a workable amount of levels and few missing entries.\n\n.\n\n## looking at just variety\ncoffee %&gt;% \n  count(variety) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 30 × 2\n   variety            n\n   &lt;chr&gt;          &lt;int&gt;\n 1 Caturra          256\n 2 Bourbon          226\n 3 &lt;NA&gt;             226\n 4 Typica           211\n 5 Other            110\n 6 Catuai            74\n 7 Hawaiian Kona     44\n 8 Yellow Bourbon    35\n 9 Mundo Novo        33\n10 Catimor           20\n# ℹ 20 more rows\n\n##\n## though this could be a describing factor, it has too many missing rows.\n\n.\n\n## looking at just moisture\ncoffee %&gt;% \n  count(moisture) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 23 × 2\n   moisture     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 0,11       383\n 2 0,12       294\n 3 0,00       264\n 4 0,10       182\n 5 0,13        76\n 6 0,09        27\n 7 0,14        23\n 8 0,08        16\n 9 0,01        15\n10 0,05         8\n# ℹ 13 more rows\n\n##\n##Though this technically works as a categorical variable, its somewhat too specific to work with. It's not as relatable as, lets say, country_of_origin.\n\n.\n\n## looking at harvest_year only\ncoffee %&gt;% \n  count(harvest_year) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 47 × 2\n   harvest_year     n\n   &lt;chr&gt;        &lt;int&gt;\n 1 2012           354\n 2 2014           233\n 3 2013           181\n 4 2015           129\n 5 2016           124\n 6 2017            70\n 7 &lt;NA&gt;            47\n 8 2013/2014       29\n 9 2015/2016       28\n10 2011            26\n# ℹ 37 more rows\n\n##\n## this would also technically work, but does it make sense? it's more of a reference. Perhaps more relavent in a universe with  time travel :p\n\n.\n\n## looking at processing_methods only\ncoffee %&gt;% \n  count(processing_method) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 6 × 2\n  processing_method             n\n  &lt;chr&gt;                     &lt;int&gt;\n1 Washed / Wet                815\n2 Natural / Dry               258\n3 &lt;NA&gt;                        170\n4 Semi-washed / Semi-pulped    56\n5 Other                        26\n6 Pulped natural / honey       14\n\n##\n## this variable works well in terms of categorization for a ranking purpose. The potential questions that can stem from this variable also make sense, i.e, How does processing method rank in terms of so-and-so flovour attributes?\n\n.\nLooking at quant variables… Any Insights?\n\nfavstats(~total_cup_points, data = coffee)\n\n min   Q1 median   Q3  max     mean       sd    n missing\n   0 8108   8250 8367 9058 8208.985 350.0575 1339       0\n\n\n.\n.\n\n\n\nThere are 43 coloumns and 1339 rows in this data set. As not all of them are relevant for the chart that is to be made, only the relevant variables (and some others) are discussed below.\n.\n\n\n\nspecies : describes the species of harvest, either Arabica, which makes up most of this data set or Robusta, which makes up only 2%.\ncountry_of_origin : describes the country in which the coffee was harvested, totally 36 in this data set, of which 60% is covered by just 5.\nharvest_year : the year in which the batch of coffee was harvested.\nvariety : 29 kinds, variety describes the subcategory under species of the coffee batch.\nprocessing_method : 5 different ways by which coffee is processed\nmoisture : A scale for measuring the moisture content of the coffee, as it plays an important role when it comes to roasting, etc.\ncolor : There are 4 kids of colours that describe the coffee in this data set, of which Green does so for the majority.\n\n.\n\n\n\n\ntotal_cup_points :  a numerical rating that indicates the overall quality of the coffee.\naroma : A key factor in how consumers perceive coffee, describes a s a scale.\nflavor : A scale to assess the flavour of the coffee as a factor of quality.\naftertaste : assesses the lenght of flavour left in the mouth after swallowing the coffee.\nacidity : assesses the pH value of the coffee.\nbody : describes and rates the mouthfeel or heaviness of a coffee on a scale.\nsweetness : describes the….drumroll please… sweetness (!?) of the coffee, and is affected by how the coffee is produced.\n\n.\n.\n\n\n\n\n.\n\ncoffee_mod &lt;- coffee %&gt;%\n  ##drop_na() %&gt;% \n  mutate (\n    country_of_origin = as_factor(country_of_origin),\n    total_cup_points = total_cup_points/100,\n    aroma = aroma/100,\n    flavor = flavor/100,\n    aftertaste = aftertaste/100,\n    acidity = acidity/100,\n    body = body/100\n  )\ncoffee_mod\n\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1             90.6 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… &lt;NA&gt;       &lt;NA&gt; \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… &lt;NA&gt;       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 6             88.8 Arabica ji-ae … Brazil             &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; \n 7             88.8 Arabica hugo v… Peru               &lt;NA&gt;     &lt;NA&gt;       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… &lt;NA&gt;       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number &lt;chr&gt;, company &lt;chr&gt;, altitude &lt;chr&gt;,\n#   region &lt;chr&gt;, producer &lt;chr&gt;, number_of_bags &lt;dbl&gt;, bag_weight &lt;chr&gt;,\n#   in_country_partner &lt;chr&gt;, harvest_year &lt;chr&gt;, grading_date &lt;chr&gt;,\n#   owner_1 &lt;chr&gt;, variety &lt;chr&gt;, processing_method &lt;chr&gt;, aroma &lt;dbl&gt;,\n#   flavor &lt;dbl&gt;, aftertaste &lt;dbl&gt;, acidity &lt;dbl&gt;, body &lt;dbl&gt;, balance &lt;dbl&gt;,\n#   uniformity &lt;dbl&gt;, clean_cup &lt;dbl&gt;, sweetness &lt;dbl&gt;, cupper_points &lt;dbl&gt;, …\n\n\n.\n\n## viewing the dataset:\ndatatable(coffee_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis is an extensive data set that covers a lot of detail, both in terms of qualitative and quantitative information.\n\n\n\nsome coloumns, such as ico_number, have as much as 847 rows missing.\nmany variables fall under broader categories, like rating, production, description etc. As a result, a lot of them seem to describe similar factors.\nHow does one assess subjective aspects such as flavor and assign it a numerical value?\n19% of the rows in country_of_origin is Mexico\nA good visualization for variables in this data set would be geometric charts for ratings and rankings!\n\n.\n\n\n\n\n.\n\n\nAmong the country_of_origin with the 5 highest average total_cup_points, how do the average ratings vary in ranks on the other coffee parameters?\n\nWhy this somewhat long-winded question? Why all this averagestuff?\nSince this data set has many variables in both qualitative and quantitative categories, the research question ends up being long-winded. The question must be specific enough for the resulting plots to be meaningful.\n.\nThe average or mean becomes important when looking at multiple distributions - it helps provide a general idea. The countries by highest total_cup_points are not those with the highest mean of total_cup_points.\nWhy country_of_origin? Are there any other options?\nAs discussed earlier while following the first breadcrumb, there are other options that would work technically - but the output produced would not be consequential in the grand scheme of things.\n\n.\n\n## Grouping and summarizing by only the variables relavent to the research question\n##\ncoffee_modA &lt;- coffee_mod %&gt;% \n  group_by(country_of_origin) %&gt;% \n  summarize( total_cup_points, aroma, flavor, aftertaste, acidity, body)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'country_of_origin'. You can override using\nthe `.groups` argument.\n\n##\ncoffee_modA\n\n# A tibble: 1,339 × 7\n# Groups:   country_of_origin [37]\n   country_of_origin total_cup_points aroma flavor aftertaste acidity  body\n   &lt;fct&gt;                        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Ethiopia                      90.6  8.67   8.83       8.67    8.75  8.5 \n 2 Ethiopia                      89.9  8.75   8.67       8.5     8.58  8.42\n 3 Ethiopia                      89    8.17   8.58       8.42    8.42  8.5 \n 4 Ethiopia                      88.8  8.25   8.5        8.25    8.5   8.42\n 5 Ethiopia                      88.7  8.25   8.33       8.5     8.42  8.33\n 6 Ethiopia                      88.4  8.67   8.67       8.58    8.42  8.33\n 7 Ethiopia                      88.2  8.08   8.58       8.5     8.5   7.67\n 8 Ethiopia                      88.1  8.17   8.67       8.25    8.5   7.75\n 9 Ethiopia                      87.8  8.25   8.33       8.5     8.25  8.58\n10 Ethiopia                      87.3  8.17   8.33       8.25    8.33  8.42\n# ℹ 1,329 more rows\n\n\n.\n\n\n\n\n## Arriving at the mean of each parameter, to get an overview by country_of_origin arranged in descending order of highest total_cup_points\n##\ncoffee_modB &lt;- coffee_mod %&gt;%\n  group_by(country_of_origin) %&gt;% \n  summarize(total_points_mean = mean(total_cup_points), \n             aroma_mean = mean(aroma), \n             flavor_mean = mean(flavor), \n             aftertaste_mean = mean(aftertaste), \n             acidity_mean = mean(acidity), \n             body_mean = mean(body)\n             ) %&gt;% \n  arrange(desc(total_points_mean)) %&gt;% head(5)\n##\ncoffee_modB\n\n# A tibble: 5 × 7\n  country_of_origin total_points_mean aroma_mean flavor_mean aftertaste_mean\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea               85.8       8.33        8.42            7.83\n2 Ethiopia                       85.5       7.90        8.01            7.89\n3 Japan                          84.7       7.75        7.75            7.75\n4 United States                  84.4       7.83        7.99            7.85\n5 Kenya                          84.3       7.79        7.78            7.71\n# ℹ 2 more variables: acidity_mean &lt;dbl&gt;, body_mean &lt;dbl&gt;\n\n\n.\n\n\n\n\n## Converting the means into ranks - assigning each parameter a value from 1-5\n##\ncoffee_modC &lt;- coffee_modB %&gt;% \n  mutate(\n    total_points_rank = rank(total_points_mean),\n    aroma_rank = rank(aroma_mean),\n    flavor_rank = rank(flavor_mean),\n    aftertaste_rank = rank(aftertaste_mean),\n    acidity_rank = rank(acidity_mean),\n    body_rank = rank(body_mean)\n  ) %&gt;% \n  select(-total_points_mean, -aroma_mean, -flavor_mean, -aftertaste_mean, -acidity_mean, -body_mean)\n##\ncoffee_modC\n\n# A tibble: 5 × 7\n  country_of_origin total_points_rank aroma_rank flavor_rank aftertaste_rank\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea                  5          5           5               3\n2 Ethiopia                          4          4           4               5\n3 Japan                             3          1           1               2\n4 United States                     2          3           3               4\n5 Kenya                             1          2           2               1\n# ℹ 2 more variables: acidity_rank &lt;dbl&gt;, body_rank &lt;dbl&gt;\n\n\n.\n\n\n\n\n## putting all the parameter ranks under the coloumn of 'parameter'\n##\ncoffee_modD &lt;- coffee_modC %&gt;% \n  pivot_longer( \n    cols = c(total_points_rank, aroma_rank, flavor_rank, aftertaste_rank, acidity_rank, body_rank),\n    cols_vary = \"fastest\",\n    names_to = \"parameter\",\n    values_to = \"ranks\")\n##\ncoffee_modD\n\n# A tibble: 30 × 3\n   country_of_origin parameter         ranks\n   &lt;fct&gt;             &lt;chr&gt;             &lt;dbl&gt;\n 1 Papua New Guinea  total_points_rank     5\n 2 Papua New Guinea  aroma_rank            5\n 3 Papua New Guinea  flavor_rank           5\n 4 Papua New Guinea  aftertaste_rank       3\n 5 Papua New Guinea  acidity_rank          5\n 6 Papua New Guinea  body_rank             4\n 7 Ethiopia          total_points_rank     4\n 8 Ethiopia          aroma_rank            4\n 9 Ethiopia          flavor_rank           4\n10 Ethiopia          aftertaste_rank       5\n# ℹ 20 more rows\n\n\n.\n\n## plotting the bump chart\n##\nggplot(coffee_modD, aes(x = parameter, y = ranks, color = country_of_origin, group = country_of_origin)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(  \"acidity_rank\", \"aftertaste_rank\",\"aroma_rank\",\"body_rank\",\"total_points_rank\", \"flavor_rank\"),\n    labels = c( \"Acidity\", \"Aftertaste\",\"Aroma\",\"Body\",\"Total\", \"Flavor\" )\n    ) + \n  labs(title = \"Coffee Parameter Ranks by Country of Origin\",\n       x = \"Coffee Parameters\",\n       y = \"Rank\",\n       color = \"Country of Origin\") +\n  \n  theme_minimal() +  # Use a minimal theme\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n.\n\n\n.\n\nIdentify the type of charts\nBump Charts!\n.\nIdentify the variables used for various geometrical aspects (x, y, fill…). Name the variables appropriately.\n\nx  = parameter would be the coffee parameters, which include the levels of aroma, acidity, aftertaste, flavor, body and total_points\ny = ranks would be the ranks assigned to each country of origin based on their mean from each parameter. 5 would be highest and 1 would be lowest, in the case of the plot shown here.\nfill/colour/group = country_of_origin would be the variable that is being ranked. It describes where the coffee originates from.\n\n.\nWhat research activity might have been carried out to obtain the data graphed here? Provide some details.\nIn terms of a research activity, it could have possibly been some sort of survey or inspection on coffee beans from coffee estates around the world. Not only does this data set describe how the coffee was sourced and its characteristics during harvest, but also how the coffee is perceived from a consumer’s point of view. This would mean that the survey spanned right from production to consumption. Perhaps to gain insight as to which methods of production and processing work best in different regions, to make the most out of every region? It could have also been a study on how environmental factors affect the end product coffee beans.\n.\nWhat might have been the Hypothesis/Research Question to which the response was Chart?\nThe research question/hypothesis that would have prompted this chart would be something along the lines of trying to figure out how the top five countries by average total cup points rank in terms of parameters such as flavor, acidity, aroma, aftertaste and so on. See Breadcrumb 2.\n.\nWrite a 2-line story based on the chart, describing your inference/surprise.\nOne of the first things we did was count the frequency of country_of_origin, and the top 5 made up for 60% of this data set, with 807 entries. This significantly increases their chances of being in the top 5 by total_cup_points - and so, the means were calculated instead.\nWould you look at that! not a single appearance in the top 5, most surprisingly Brazil: the largest coffee producer in the world.\n\n.\n.\n\n\n\nTBA\n.\n.\ncoffee_modC &lt;- coffee_modB %&gt;% mutate(across(ends_with(\"_mean\"), rank)) %&gt;% rename_with(~ gsub(\"mean\", \"rank\", .x), ends_with(\"mean\")) ## coffee_modC\n.\n.\ncoffee_modD %&gt;% ggplot(aes(x = parameter, y = ranks, color = country_of_origin)) + geom_bump(size = 2) + geom_point( size = 6 ) + xlab(\"Coffee Parameters\") + ylab(\"Ranks\") + scale_color_brewer(palette = \"RdBu\") + # Change Colour Scale scale_x_discrete(limits = c(\"aroma_rank\",\"flavor_rank\", \"aftertaste_rank\" ,\"acidity_rank\",\"body_rank\")) # Check warning here..."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#introduction",
    "href": "posts/A2 - Case Study 2/index.html#introduction",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "The data set observed in this case study goes over 1339 coffee harvests, discussing their country of origin, region, owners, companies, variety, colour, and such, along with parameters such as their total cup score, aroma, sweetness, flavour, acidity, aftertaste etc. Totally, this data set has 43 columns.\n.\nLike Hansel and Gretel, I follow the breadcrumbs till the end :P\n.\n\n\nTBA\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#examining-data",
    "href": "posts/A2 - Case Study 2/index.html#examining-data",
    "title": "A2: Case Study 2",
    "section": "",
    "text": "coffee &lt;- read_delim( file = \"../../Data/coffee-ratings.csv\", delim = \";\") %&gt;% glimpse()\n\nRows: 1339 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (25): species, owner, country_of_origin, farm_name, lot_number, mill, ic...\ndbl  (4): number_of_bags, category_one_defects, quakers, category_two_defects\nnum (14): total_cup_points, aroma, flavor, aftertaste, acidity, body, balanc...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 1,339\nColumns: 43\n$ total_cup_points      &lt;dbl&gt; 9058, 8992, 8975, 8900, 8883, 8883, 8875, 8867, …\n$ species               &lt;chr&gt; \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 &lt;chr&gt; \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     &lt;chr&gt; \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             &lt;chr&gt; \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  &lt;chr&gt; \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            &lt;chr&gt; \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               &lt;chr&gt; \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              &lt;chr&gt; \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                &lt;chr&gt; \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              &lt;chr&gt; \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        &lt;dbl&gt; 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            &lt;chr&gt; \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          &lt;chr&gt; \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          &lt;chr&gt; \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               &lt;chr&gt; \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               &lt;chr&gt; NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     &lt;chr&gt; \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 &lt;dbl&gt; 867, 875, 842, 817, 825, 858, 842, 825, 867, 808…\n$ flavor                &lt;dbl&gt; 883, 867, 850, 858, 850, 842, 850, 833, 867, 858…\n$ aftertaste            &lt;dbl&gt; 867, 850, 842, 842, 825, 842, 833, 850, 858, 850…\n$ acidity               &lt;dbl&gt; 875, 858, 842, 842, 850, 850, 850, 842, 842, 850…\n$ body                  &lt;dbl&gt; 850, 842, 833, 850, 842, 825, 825, 833, 833, 767…\n$ balance               &lt;dbl&gt; 842, 842, 842, 825, 833, 833, 825, 850, 842, 842…\n$ uniformity            &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ clean_cup             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ sweetness             &lt;dbl&gt; 1000, 1000, 1000, 1000, 1000, 1000, 1000, 933, 9…\n$ cupper_points         &lt;dbl&gt; 875, 858, 925, 867, 858, 833, 850, 900, 867, 850…\n$ moisture              &lt;chr&gt; \"0,12\", \"0,12\", \"0,00\", \"0,11\", \"0,12\", \"0,11\", …\n$ category_one_defects  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 &lt;chr&gt; \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  &lt;dbl&gt; 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            &lt;chr&gt; \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address &lt;chr&gt; \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact &lt;chr&gt; \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   &lt;chr&gt; \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   &lt;dbl&gt; 19500000, 19500000, 16000000, 18000000, 19500000…\n$ altitude_high_meters  &lt;dbl&gt; 22000000, 22000000, 18000000, 22000000, 22000000…\n$ altitude_mean_meters  &lt;dbl&gt; 20750000, 20750000, 17000000, 20000000, 20750000…\n\n\n.\n\ncoffee %&gt;% inspect()\n\n\ncategorical variables:  \n                    name     class levels    n missing\n1                species character      2 1339       0\n2                  owner character    315 1332       7\n3      country_of_origin character     36 1338       1\n4              farm_name character    571  980     359\n5             lot_number character    227  276    1063\n6                   mill character    460 1024     315\n7             ico_number character    847 1188     151\n8                company character    281 1130     209\n9               altitude character    396 1113     226\n10                region character    356 1280      59\n11              producer character    691 1108     231\n12            bag_weight character     56 1339       0\n13    in_country_partner character     27 1339       0\n14          harvest_year character     46 1292      47\n15          grading_date character    567 1339       0\n16               owner_1 character    319 1332       7\n17               variety character     29 1113     226\n18     processing_method character      5 1169     170\n19              moisture character     23 1339       0\n20                 color character      4 1121     218\n21            expiration character    566 1339       0\n22    certification_body character     26 1339       0\n23 certification_address character     32 1339       0\n24 certification_contact character     29 1339       0\n25   unit_of_measurement character      2 1339       0\n                                    distribution\n1  Arabica (97.9%), Robusta (2.1%)              \n2  juan luis alvarado romero (11.6%) ...        \n3  Mexico (17.6%), Colombia (13.7%) ...         \n4  various (4.8%), rio verde (2.3%) ...         \n5  1 (6.5%), 020/17 (2.2%) ...                  \n6  beneficio ixchel (8.8%) ...                  \n7  0 (6.5%), Taiwan (2.6%) ...                  \n8  unex guatemala, s.a. (7.6%) ...              \n9  1100 (3.9%), 1200 (3.8%) ...                 \n10 huila (8.8%), oriente (6.2%) ...             \n11 La Plata (2.7%) ...                          \n12 1 kg (24.7%), 60 kg (19.1%) ...              \n13 Specialty Coffee Association (23.4%) ...     \n14 2012 (27.4%), 2014 (18%) ...                 \n15 July 11th, 2012 (1.9%) ...                   \n16 Juan Luis Alvarado Romero (11.6%) ...        \n17 Caturra (23%), Bourbon (20.3%) ...           \n18 Washed / Wet (69.7%) ...                     \n19 0,11 (28.6%), 0,12 (22%) ...                 \n20 Green (77.6%), Bluish-Green (10.2%) ...      \n21 December 26th, 2014 (1.9%) ...               \n22 Specialty Coffee Association (23.4%) ...     \n23  (%) ...                                     \n24  (%) ...                                     \n25 m (86.4%), ft (13.6%)                        \n\nquantitative variables:  \n                   name   class   min       Q1   median       Q3        max\n1      total_cup_points numeric     0     8108     8250     8367       9058\n2        number_of_bags numeric     0       14      175      275       1062\n3                 aroma numeric     0      742      758      775        875\n4                flavor numeric     0      733      758      775        883\n5            aftertaste numeric     0      725      742      758        867\n6               acidity numeric     0      733      758      775        875\n7                  body numeric     0      733      750      767        858\n8               balance numeric     0      733      750      775        875\n9            uniformity numeric     0     1000     1000     1000       1000\n10            clean_cup numeric     0     1000     1000     1000       1000\n11            sweetness numeric     0     1000     1000     1000       1000\n12        cupper_points numeric     0      725      750      775       1000\n13 category_one_defects numeric     0        0        0        0         63\n14              quakers numeric     0        0        0        0         11\n15 category_two_defects numeric     0        0        2        4         55\n16  altitude_low_meters numeric 10000 11000000 13106400 16000000 1901640000\n17 altitude_high_meters numeric 10000 11000000 13500000 16500000 1901640000\n18 altitude_mean_meters numeric 10000 11000000 13106400 16000000 1901640000\n           mean           sd    n missing\n1  8.208985e+03 3.500575e+02 1339       0\n2  1.541830e+02 1.299872e+02 1339       0\n3  7.566706e+02 3.775600e+01 1339       0\n4  7.520426e+02 3.984421e+01 1339       0\n5  7.401083e+02 4.044634e+01 1339       0\n6  7.535706e+02 3.798267e+01 1339       0\n7  7.517498e+02 3.700639e+01 1339       0\n8  7.518013e+02 4.089433e+01 1339       0\n9  9.834877e+02 5.545906e+01 1339       0\n10 9.835108e+02 7.639459e+01 1339       0\n11 9.856692e+02 6.161020e+01 1339       0\n12 7.503376e+02 4.734643e+01 1339       0\n13 4.794623e-01 2.549683e+00 1339       0\n14 1.733931e-01 8.321210e-01 1338       1\n15 3.556385e+00 5.312541e+00 1339       0\n16 1.750713e+07 8.669441e+07 1109     230\n17 1.799348e+07 8.668806e+07 1109     230\n18 1.775031e+07 8.668626e+07 1109     230\n\n\n\ncoffee %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1339\n\n\nNumber of columns\n43\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n25\n\n\nnumeric\n18\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nspecies\n0\n1.00\n7\n7\n0\n2\n0\n\n\nowner\n7\n0.99\n3\n50\n0\n315\n0\n\n\ncountry_of_origin\n1\n1.00\n4\n28\n0\n36\n0\n\n\nfarm_name\n359\n0.73\n1\n73\n0\n571\n0\n\n\nlot_number\n1063\n0.21\n1\n71\n0\n227\n0\n\n\nmill\n315\n0.76\n1\n77\n0\n460\n0\n\n\nico_number\n151\n0.89\n1\n40\n0\n847\n0\n\n\ncompany\n209\n0.84\n3\n73\n0\n281\n0\n\n\naltitude\n226\n0.83\n1\n41\n0\n396\n0\n\n\nregion\n59\n0.96\n2\n76\n0\n356\n0\n\n\nproducer\n231\n0.83\n1\n100\n0\n691\n0\n\n\nbag_weight\n0\n1.00\n1\n8\n0\n56\n0\n\n\nin_country_partner\n0\n1.00\n7\n85\n0\n27\n0\n\n\nharvest_year\n47\n0.96\n3\n24\n0\n46\n0\n\n\ngrading_date\n0\n1.00\n13\n20\n0\n567\n0\n\n\nowner_1\n7\n0.99\n3\n50\n0\n319\n0\n\n\nvariety\n226\n0.83\n4\n21\n0\n29\n0\n\n\nprocessing_method\n170\n0.87\n5\n25\n0\n5\n0\n\n\nmoisture\n0\n1.00\n4\n4\n0\n23\n0\n\n\ncolor\n218\n0.84\n4\n12\n0\n4\n0\n\n\nexpiration\n0\n1.00\n13\n20\n0\n566\n0\n\n\ncertification_body\n0\n1.00\n7\n85\n0\n26\n0\n\n\ncertification_address\n0\n1.00\n40\n40\n0\n32\n0\n\n\ncertification_contact\n0\n1.00\n40\n40\n0\n29\n0\n\n\nunit_of_measurement\n0\n1.00\n1\n2\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal_cup_points\n0\n1.00\n8208.99\n350.06\n0\n8108\n8250\n8367\n9058\n▁▁▁▁▇\n\n\nnumber_of_bags\n0\n1.00\n154.18\n129.99\n0\n14\n175\n275\n1062\n▇▇▁▁▁\n\n\naroma\n0\n1.00\n756.67\n37.76\n0\n742\n758\n775\n875\n▁▁▁▁▇\n\n\nflavor\n0\n1.00\n752.04\n39.84\n0\n733\n758\n775\n883\n▁▁▁▁▇\n\n\naftertaste\n0\n1.00\n740.11\n40.45\n0\n725\n742\n758\n867\n▁▁▁▁▇\n\n\nacidity\n0\n1.00\n753.57\n37.98\n0\n733\n758\n775\n875\n▁▁▁▁▇\n\n\nbody\n0\n1.00\n751.75\n37.01\n0\n733\n750\n767\n858\n▁▁▁▁▇\n\n\nbalance\n0\n1.00\n751.80\n40.89\n0\n733\n750\n775\n875\n▁▁▁▁▇\n\n\nuniformity\n0\n1.00\n983.49\n55.46\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nclean_cup\n0\n1.00\n983.51\n76.39\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\nsweetness\n0\n1.00\n985.67\n61.61\n0\n1000\n1000\n1000\n1000\n▁▁▁▁▇\n\n\ncupper_points\n0\n1.00\n750.34\n47.35\n0\n725\n750\n775\n1000\n▁▁▁▇▁\n\n\ncategory_one_defects\n0\n1.00\n0.48\n2.55\n0\n0\n0\n0\n63\n▇▁▁▁▁\n\n\nquakers\n1\n1.00\n0.17\n0.83\n0\n0\n0\n0\n11\n▇▁▁▁▁\n\n\ncategory_two_defects\n0\n1.00\n3.56\n5.31\n0\n0\n2\n4\n55\n▇▁▁▁▁\n\n\naltitude_low_meters\n230\n0.83\n17507133.15\n86694405.45\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\naltitude_high_meters\n230\n0.83\n17993477.75\n86688057.71\n10000\n11000000\n13500000\n16500000\n1901640000\n▇▁▁▁▁\n\n\naltitude_mean_meters\n230\n0.83\n17750305.45\n86686260.80\n10000\n11000000\n13106400\n16000000\n1901640000\n▇▁▁▁▁\n\n\n\n\n\n.\n\n\nWhich variables to choose as category to label by?\n\n## looking at just country_of_origin\ncoffee %&gt;% \n  count(country_of_origin) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 37 × 2\n   country_of_origin                n\n   &lt;chr&gt;                        &lt;int&gt;\n 1 Mexico                         236\n 2 Colombia                       183\n 3 Guatemala                      181\n 4 Brazil                         132\n 5 Taiwan                          75\n 6 United States (Hawaii)          73\n 7 Honduras                        53\n 8 Costa Rica                      51\n 9 Ethiopia                        44\n10 Tanzania, United Republic Of    40\n# ℹ 27 more rows\n\n##\n## This works as a good categorical variable to sort by, as it has a workable amount of levels and few missing entries.\n\n.\n\n## looking at just variety\ncoffee %&gt;% \n  count(variety) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 30 × 2\n   variety            n\n   &lt;chr&gt;          &lt;int&gt;\n 1 Caturra          256\n 2 Bourbon          226\n 3 &lt;NA&gt;             226\n 4 Typica           211\n 5 Other            110\n 6 Catuai            74\n 7 Hawaiian Kona     44\n 8 Yellow Bourbon    35\n 9 Mundo Novo        33\n10 Catimor           20\n# ℹ 20 more rows\n\n##\n## though this could be a describing factor, it has too many missing rows.\n\n.\n\n## looking at just moisture\ncoffee %&gt;% \n  count(moisture) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 23 × 2\n   moisture     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 0,11       383\n 2 0,12       294\n 3 0,00       264\n 4 0,10       182\n 5 0,13        76\n 6 0,09        27\n 7 0,14        23\n 8 0,08        16\n 9 0,01        15\n10 0,05         8\n# ℹ 13 more rows\n\n##\n##Though this technically works as a categorical variable, its somewhat too specific to work with. It's not as relatable as, lets say, country_of_origin.\n\n.\n\n## looking at harvest_year only\ncoffee %&gt;% \n  count(harvest_year) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 47 × 2\n   harvest_year     n\n   &lt;chr&gt;        &lt;int&gt;\n 1 2012           354\n 2 2014           233\n 3 2013           181\n 4 2015           129\n 5 2016           124\n 6 2017            70\n 7 &lt;NA&gt;            47\n 8 2013/2014       29\n 9 2015/2016       28\n10 2011            26\n# ℹ 37 more rows\n\n##\n## this would also technically work, but does it make sense? it's more of a reference. Perhaps more relavent in a universe with  time travel :p\n\n.\n\n## looking at processing_methods only\ncoffee %&gt;% \n  count(processing_method) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 6 × 2\n  processing_method             n\n  &lt;chr&gt;                     &lt;int&gt;\n1 Washed / Wet                815\n2 Natural / Dry               258\n3 &lt;NA&gt;                        170\n4 Semi-washed / Semi-pulped    56\n5 Other                        26\n6 Pulped natural / honey       14\n\n##\n## this variable works well in terms of categorization for a ranking purpose. The potential questions that can stem from this variable also make sense, i.e, How does processing method rank in terms of so-and-so flovour attributes?\n\n.\nLooking at quant variables… Any Insights?\n\nfavstats(~total_cup_points, data = coffee)\n\n min   Q1 median   Q3  max     mean       sd    n missing\n   0 8108   8250 8367 9058 8208.985 350.0575 1339       0\n\n\n.\n.\n\n\n\nThere are 43 coloumns and 1339 rows in this data set. As not all of them are relevant for the chart that is to be made, only the relevant variables (and some others) are discussed below.\n.\n\n\n\nspecies : describes the species of harvest, either Arabica, which makes up most of this data set or Robusta, which makes up only 2%.\ncountry_of_origin : describes the country in which the coffee was harvested, totally 36 in this data set, of which 60% is covered by just 5.\nharvest_year : the year in which the batch of coffee was harvested.\nvariety : 29 kinds, variety describes the subcategory under species of the coffee batch.\nprocessing_method : 5 different ways by which coffee is processed\nmoisture : A scale for measuring the moisture content of the coffee, as it plays an important role when it comes to roasting, etc.\ncolor : There are 4 kids of colours that describe the coffee in this data set, of which Green does so for the majority.\n\n.\n\n\n\n\ntotal_cup_points :  a numerical rating that indicates the overall quality of the coffee.\naroma : A key factor in how consumers perceive coffee, describes a s a scale.\nflavor : A scale to assess the flavour of the coffee as a factor of quality.\naftertaste : assesses the lenght of flavour left in the mouth after swallowing the coffee.\nacidity : assesses the pH value of the coffee.\nbody : describes and rates the mouthfeel or heaviness of a coffee on a scale.\nsweetness : describes the….drumroll please… sweetness (!?) of the coffee, and is affected by how the coffee is produced.\n\n.\n.\n\n\n\n\n.\n\ncoffee_mod &lt;- coffee %&gt;%\n  ##drop_na() %&gt;% \n  mutate (\n    country_of_origin = as_factor(country_of_origin),\n    total_cup_points = total_cup_points/100,\n    aroma = aroma/100,\n    flavor = flavor/100,\n    aftertaste = aftertaste/100,\n    acidity = acidity/100,\n    body = body/100\n  )\ncoffee_mod\n\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1             90.6 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… &lt;NA&gt;       &lt;NA&gt; \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… &lt;NA&gt;       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 6             88.8 Arabica ji-ae … Brazil             &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; \n 7             88.8 Arabica hugo v… Peru               &lt;NA&gt;     &lt;NA&gt;       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… &lt;NA&gt;       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number &lt;chr&gt;, company &lt;chr&gt;, altitude &lt;chr&gt;,\n#   region &lt;chr&gt;, producer &lt;chr&gt;, number_of_bags &lt;dbl&gt;, bag_weight &lt;chr&gt;,\n#   in_country_partner &lt;chr&gt;, harvest_year &lt;chr&gt;, grading_date &lt;chr&gt;,\n#   owner_1 &lt;chr&gt;, variety &lt;chr&gt;, processing_method &lt;chr&gt;, aroma &lt;dbl&gt;,\n#   flavor &lt;dbl&gt;, aftertaste &lt;dbl&gt;, acidity &lt;dbl&gt;, body &lt;dbl&gt;, balance &lt;dbl&gt;,\n#   uniformity &lt;dbl&gt;, clean_cup &lt;dbl&gt;, sweetness &lt;dbl&gt;, cupper_points &lt;dbl&gt;, …\n\n\n.\n\n## viewing the dataset:\ndatatable(coffee_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n.\n\n\n\n\nThis is an extensive data set that covers a lot of detail, both in terms of qualitative and quantitative information.\n\n\n\nsome coloumns, such as ico_number, have as much as 847 rows missing.\nmany variables fall under broader categories, like rating, production, description etc. As a result, a lot of them seem to describe similar factors.\nHow does one assess subjective aspects such as flavor and assign it a numerical value?\n19% of the rows in country_of_origin is Mexico\nA good visualization for variables in this data set would be geometric charts for ratings and rankings!\n\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#plotting-data",
    "href": "posts/A2 - Case Study 2/index.html#plotting-data",
    "title": "A2: Case Study 2",
    "section": "",
    "text": ".\n\n\nAmong the country_of_origin with the 5 highest average total_cup_points, how do the average ratings vary in ranks on the other coffee parameters?\n\nWhy this somewhat long-winded question? Why all this averagestuff?\nSince this data set has many variables in both qualitative and quantitative categories, the research question ends up being long-winded. The question must be specific enough for the resulting plots to be meaningful.\n.\nThe average or mean becomes important when looking at multiple distributions - it helps provide a general idea. The countries by highest total_cup_points are not those with the highest mean of total_cup_points.\nWhy country_of_origin? Are there any other options?\nAs discussed earlier while following the first breadcrumb, there are other options that would work technically - but the output produced would not be consequential in the grand scheme of things.\n\n.\n\n## Grouping and summarizing by only the variables relavent to the research question\n##\ncoffee_modA &lt;- coffee_mod %&gt;% \n  group_by(country_of_origin) %&gt;% \n  summarize( total_cup_points, aroma, flavor, aftertaste, acidity, body)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'country_of_origin'. You can override using\nthe `.groups` argument.\n\n##\ncoffee_modA\n\n# A tibble: 1,339 × 7\n# Groups:   country_of_origin [37]\n   country_of_origin total_cup_points aroma flavor aftertaste acidity  body\n   &lt;fct&gt;                        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Ethiopia                      90.6  8.67   8.83       8.67    8.75  8.5 \n 2 Ethiopia                      89.9  8.75   8.67       8.5     8.58  8.42\n 3 Ethiopia                      89    8.17   8.58       8.42    8.42  8.5 \n 4 Ethiopia                      88.8  8.25   8.5        8.25    8.5   8.42\n 5 Ethiopia                      88.7  8.25   8.33       8.5     8.42  8.33\n 6 Ethiopia                      88.4  8.67   8.67       8.58    8.42  8.33\n 7 Ethiopia                      88.2  8.08   8.58       8.5     8.5   7.67\n 8 Ethiopia                      88.1  8.17   8.67       8.25    8.5   7.75\n 9 Ethiopia                      87.8  8.25   8.33       8.5     8.25  8.58\n10 Ethiopia                      87.3  8.17   8.33       8.25    8.33  8.42\n# ℹ 1,329 more rows\n\n\n.\n\n\n\n\n## Arriving at the mean of each parameter, to get an overview by country_of_origin arranged in descending order of highest total_cup_points\n##\ncoffee_modB &lt;- coffee_mod %&gt;%\n  group_by(country_of_origin) %&gt;% \n  summarize(total_points_mean = mean(total_cup_points), \n             aroma_mean = mean(aroma), \n             flavor_mean = mean(flavor), \n             aftertaste_mean = mean(aftertaste), \n             acidity_mean = mean(acidity), \n             body_mean = mean(body)\n             ) %&gt;% \n  arrange(desc(total_points_mean)) %&gt;% head(5)\n##\ncoffee_modB\n\n# A tibble: 5 × 7\n  country_of_origin total_points_mean aroma_mean flavor_mean aftertaste_mean\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea               85.8       8.33        8.42            7.83\n2 Ethiopia                       85.5       7.90        8.01            7.89\n3 Japan                          84.7       7.75        7.75            7.75\n4 United States                  84.4       7.83        7.99            7.85\n5 Kenya                          84.3       7.79        7.78            7.71\n# ℹ 2 more variables: acidity_mean &lt;dbl&gt;, body_mean &lt;dbl&gt;\n\n\n.\n\n\n\n\n## Converting the means into ranks - assigning each parameter a value from 1-5\n##\ncoffee_modC &lt;- coffee_modB %&gt;% \n  mutate(\n    total_points_rank = rank(total_points_mean),\n    aroma_rank = rank(aroma_mean),\n    flavor_rank = rank(flavor_mean),\n    aftertaste_rank = rank(aftertaste_mean),\n    acidity_rank = rank(acidity_mean),\n    body_rank = rank(body_mean)\n  ) %&gt;% \n  select(-total_points_mean, -aroma_mean, -flavor_mean, -aftertaste_mean, -acidity_mean, -body_mean)\n##\ncoffee_modC\n\n# A tibble: 5 × 7\n  country_of_origin total_points_rank aroma_rank flavor_rank aftertaste_rank\n  &lt;fct&gt;                         &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 Papua New Guinea                  5          5           5               3\n2 Ethiopia                          4          4           4               5\n3 Japan                             3          1           1               2\n4 United States                     2          3           3               4\n5 Kenya                             1          2           2               1\n# ℹ 2 more variables: acidity_rank &lt;dbl&gt;, body_rank &lt;dbl&gt;\n\n\n.\n\n\n\n\n## putting all the parameter ranks under the coloumn of 'parameter'\n##\ncoffee_modD &lt;- coffee_modC %&gt;% \n  pivot_longer( \n    cols = c(total_points_rank, aroma_rank, flavor_rank, aftertaste_rank, acidity_rank, body_rank),\n    cols_vary = \"fastest\",\n    names_to = \"parameter\",\n    values_to = \"ranks\")\n##\ncoffee_modD\n\n# A tibble: 30 × 3\n   country_of_origin parameter         ranks\n   &lt;fct&gt;             &lt;chr&gt;             &lt;dbl&gt;\n 1 Papua New Guinea  total_points_rank     5\n 2 Papua New Guinea  aroma_rank            5\n 3 Papua New Guinea  flavor_rank           5\n 4 Papua New Guinea  aftertaste_rank       3\n 5 Papua New Guinea  acidity_rank          5\n 6 Papua New Guinea  body_rank             4\n 7 Ethiopia          total_points_rank     4\n 8 Ethiopia          aroma_rank            4\n 9 Ethiopia          flavor_rank           4\n10 Ethiopia          aftertaste_rank       5\n# ℹ 20 more rows\n\n\n.\n\n## plotting the bump chart\n##\nggplot(coffee_modD, aes(x = parameter, y = ranks, color = country_of_origin, group = country_of_origin)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(  \"acidity_rank\", \"aftertaste_rank\",\"aroma_rank\",\"body_rank\",\"total_points_rank\", \"flavor_rank\"),\n    labels = c( \"Acidity\", \"Aftertaste\",\"Aroma\",\"Body\",\"Total\", \"Flavor\" )\n    ) + \n  labs(title = \"Coffee Parameter Ranks by Country of Origin\",\n       x = \"Coffee Parameters\",\n       y = \"Rank\",\n       color = \"Country of Origin\") +\n  \n  theme_minimal() +  # Use a minimal theme\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/A2 - Case Study 2/index.html#task-and-discussion",
    "href": "posts/A2 - Case Study 2/index.html#task-and-discussion",
    "title": "A2: Case Study 2",
    "section": "",
    "text": ".\n\n\n.\n\nIdentify the type of charts\nBump Charts!\n.\nIdentify the variables used for various geometrical aspects (x, y, fill…). Name the variables appropriately.\n\nx  = parameter would be the coffee parameters, which include the levels of aroma, acidity, aftertaste, flavor, body and total_points\ny = ranks would be the ranks assigned to each country of origin based on their mean from each parameter. 5 would be highest and 1 would be lowest, in the case of the plot shown here.\nfill/colour/group = country_of_origin would be the variable that is being ranked. It describes where the coffee originates from.\n\n.\nWhat research activity might have been carried out to obtain the data graphed here? Provide some details.\nIn terms of a research activity, it could have possibly been some sort of survey or inspection on coffee beans from coffee estates around the world. Not only does this data set describe how the coffee was sourced and its characteristics during harvest, but also how the coffee is perceived from a consumer’s point of view. This would mean that the survey spanned right from production to consumption. Perhaps to gain insight as to which methods of production and processing work best in different regions, to make the most out of every region? It could have also been a study on how environmental factors affect the end product coffee beans.\n.\nWhat might have been the Hypothesis/Research Question to which the response was Chart?\nThe research question/hypothesis that would have prompted this chart would be something along the lines of trying to figure out how the top five countries by average total cup points rank in terms of parameters such as flavor, acidity, aroma, aftertaste and so on. See Breadcrumb 2.\n.\nWrite a 2-line story based on the chart, describing your inference/surprise.\nOne of the first things we did was count the frequency of country_of_origin, and the top 5 made up for 60% of this data set, with 807 entries. This significantly increases their chances of being in the top 5 by total_cup_points - and so, the means were calculated instead.\nWould you look at that! not a single appearance in the top 5, most surprisingly Brazil: the largest coffee producer in the world.\n\n.\n.\n\n\n\nTBA\n.\n.\ncoffee_modC &lt;- coffee_modB %&gt;% mutate(across(ends_with(\"_mean\"), rank)) %&gt;% rename_with(~ gsub(\"mean\", \"rank\", .x), ends_with(\"mean\")) ## coffee_modC\n.\n.\ncoffee_modD %&gt;% ggplot(aes(x = parameter, y = ranks, color = country_of_origin)) + geom_bump(size = 2) + geom_point( size = 6 ) + xlab(\"Coffee Parameters\") + ylab(\"Ranks\") + scale_color_brewer(palette = \"RdBu\") + # Change Colour Scale scale_x_discrete(limits = c(\"aroma_rank\",\"flavor_rank\", \"aftertaste_rank\" ,\"acidity_rank\",\"body_rank\")) # Check warning here..."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html",
    "href": "posts/A2- Case Study 1/index.html",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "Check out the Assignment here!\n.\n\n\nThe data set observed in this case study goes over 3310 films, discussing their domestic and worldwide gross, production budget, genre, distributor and year of release, etc.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\n.\n.\n\n\n\n\n\nmp &lt;- read_delim(file = \"../../Data/movie_profit.csv\", delim = \";\")\n\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmp %&gt;% glimpse()\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;chr&gt; \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             &lt;chr&gt; \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;dbl&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\nmp%&gt;%inspect()\n\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040903e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n\n\n\nmp %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3310\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nDate\n1\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie\n0\n1.00\n1\n35\n0\n3310\n0\n\n\ndistributor\n42\n0.99\n5\n18\n0\n6\n0\n\n\nmpaa_rating\n130\n0.96\n1\n5\n0\n4\n0\n\n\ngenre\n0\n1.00\n5\n9\n0\n5\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nrelease_date\n0\n1\n1936-02-05\n2017-12-22\n2005-06-30\n1723\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nproduction_budget\n0\n1\n3.326794e+07\n3.460741e+07\n2.50e+05\n9.500000e+06\n2.000000e+07\n4.500000e+07\n1.750000e+08\n▇▂▁▁▁\n\n\ndomestic_gross\n0\n1\n4.551509e+07\n5.852794e+07\n0.00e+00\n6.530094e+06\n2.558731e+07\n6.046695e+07\n4.745447e+08\n▇▁▁▁▁\n\n\nworldwide_gross\n0\n1\n9.384123e+07\n1.389514e+08\n4.23e+02\n1.086144e+07\n4.040903e+07\n1.184703e+08\n1.162782e+09\n▇▁▁▁▁\n\n\nprofit_ratio\n0\n1\n4.319388e+14\n1.501736e+15\n1.38e+10\n7.861269e+13\n1.962499e+14\n3.942158e+14\n4.315179e+16\n▇▁▁▁▁\n\n\ndecade\n0\n1\n1.998790e+03\n1.061000e+01\n1.93e+03\n1.990000e+03\n2.000000e+03\n2.010000e+03\n2.010000e+03\n▁▁▁▃▇\n\n\n\n\n\n.\n\n\nThere are 3310 rows and 10 columns in this data set.\n.\n\n\n\nrelease_date : When the movie was released. This data set contains movies released from 1936 through 2017.\nmovie : Tile of the film. This data set contains 3310 films.\ndistributor : Name of the company that distributed the film - there are six categories under this variable: Universal, Paramount Pictures, Warner Bros, and 20th Century Fox, Sony Pictures and Other. There are 42 missing entries.\nmpaa_rating : The age-rating of each movie. There are four categories under this variable - R, PG-13, PG and G. This coloumn also has 130 missing entries.\ngenre : Describes the genre of the film, categorized into - Action, Adventure, Comedy, Drama, and Horror.\ndecade : Describes the decade in which the movie was released, i.e 1990, 2000, 2010 and so on. Though it is considered a quant type variable in the data set, it is technically qual variable.\n\n.\n\n\n\n\nproduction_budget : The budget for the film in USD.\ndomestic_gross : The amount of money, in USD, that the film made across the US.\nworldwide_gross : The amount of money, in USD, the film made across the world.\nprofit_ratio : This variable would technically be the (worldwide_gross - production_budget)/(production_budget), but the values in this section are 17 or so digits in nature. Could this be a misplaced decimal error?\nA simple calculation using the above formula on any film, suggests that the every value under profit_ratio must be multiplied by 10^(-14).\n\n.\n\n\n\n\n\nmp_mod &lt;- mp %&gt;%\n  mutate(\n    decade = as_factor(decade),\n    movie = as_factor(movie),\n    distributor = as_factor(distributor),\n    distributor = replace(distributor, distributor == \"\", NA),\n   \n    mpaa_rating = as_factor(mpaa_rating),\n    mpaa_rating = replace(mpaa_rating, mpaa_rating == \"\", NA),\n    genre = as_factor(genre),\n    \n    profit_ratio = profit_ratio * 0.00000000000001\n  )\nglimpse(mp_mod)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;fct&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;fct&gt; Other, Other, Other, Other, Paramount Pictures, Para…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 0.76744800, 0.81253600, 2.97286400, 4.63068800, 14.9…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n.\n\n## viewing the dataset:\ndatatable(mp_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n\n\n\n.\n\n\n.\n\n## top 5 production budget:\nmp_mod %&gt;% arrange(desc(production_budget)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Production Budget - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProduction Budget - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2013-12-25\n47 Ronin\n1.75e+08\n38362475\n151716815\nUniversal\nPG-13\nAction\n0.8669532\n2010\n\n\n2017-05-12\nKing Arthur: Legend of the Sword\n1.75e+08\n39175066\n139950708\nWarner Bros.\nPG-13\nAdventure\n0.7997183\n2010\n\n\n1995-07-28\nWaterworld\n1.75e+08\n88246220\n264246220\nUniversal\nPG-13\nAction\n1.5099784\n1990\n\n\n2007-06-22\nEvan Almighty\n1.75e+08\n100289690\n174131329\nUniversal\nPG\nComedy\n0.9950362\n2000\n\n\n2016-05-27\nAlice Through the Looking Glass\n1.70e+08\n77042381\n276934087\nOther\nPG\nAdventure\n1.6290240\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 domestic gross:\nmp_mod %&gt;% arrange(desc(domestic_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Domestic Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nDomestic Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n1977-05-25\nStar Wars Ep. IV: A New Hope\n1.10e+07\n460998007\n786598007\n20th Century Fox\nPG\nAdventure\n71.508910\n1970\n\n\n2004-05-19\nShrek 2\n7.00e+07\n441226247\n937008132\nOther\nPG\nAdventure\n13.385831\n2000\n\n\n1982-06-11\nET: The Extra-Terrestrial\n1.05e+07\n435110554\n792965326\nUniversal\nPG\nDrama\n75.520507\n1980\n\n\n2013-11-22\nThe Hunger Games: Catching Fire\n1.30e+08\n424668047\n864868047\nOther\nPG-13\nAdventure\n6.652831\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 worldwide gross:\nmp_mod %&gt;% arrange(desc(worldwide_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Worldwide Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nWorldwide Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2015-07-10\nMinions\n7.40e+07\n336045770\n1162781621\nUniversal\nPG\nAdventure\n15.713265\n2010\n\n\n1993-06-11\nJurassic Park\n6.30e+07\n395708305\n1038812584\nUniversal\nPG-13\nAction\n16.489089\n1990\n\n\n2017-06-30\nDespicable Me 3\n7.50e+07\n264624300\n1034520868\nUniversal\nPG\nAdventure\n13.793612\n2010\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n2016-03-04\nZootopia\n1.50e+08\n341268248\n1019706594\nOther\nPG\nAdventure\n6.798044\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 profit ratio:\nmp_mod %&gt;% arrange(desc(profit_ratio)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Profit Ratio - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProfit Ratio - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2009-09-25\nParanormal Activity\n450000\n107918810\n194183034\nParamount Pictures\nR\nHorror\n431.5179\n2000\n\n\n1999-07-14\nThe Blair Witch Project\n600000\n140539099\n248300000\nOther\nR\nHorror\n413.8333\n1990\n\n\n1942-08-13\nBambi\n858000\n102797000\n268000000\nOther\nG\nDrama\n312.3543\n1940\n\n\n1976-11-21\nRocky\n1000000\n117235147\n225000000\nOther\nPG\nDrama\n225.0000\n1970\n\n\n1978-10-17\nHalloween\n325000\n47000000\n70000000\nOther\nR\nHorror\n215.3846\n1970\n\n\n\n\n\n\n\n\n.\n\n\nIts very interesting to note that the top 5 most expensive movies to make, The top 5 movies that made the most money worldwide and the top 5 movies that made the most in profits have not a single entry in common.\nAdventure and action films seem to make more money, as well as tend to cost more to make.\nhorror and drama films seem to have the best profit turnout.\n\n\n.\n.\n\n\n\n\n\n\n\n\nmp_mod %&gt;%\n  group_by(distributor, genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  \n  gf_col( genre  ~ median_profit_ratio ) %&gt;% \n  gf_facet_wrap(~distributor)%&gt;%\n  gf_labs(\n    title = \"Profits made by Film Distributors\",\n    subtitle = \"Ratio of Profits to Budgets\",\n    caption = \"October 2024 \"\n  )\n\n`summarise()` has grouped output by 'distributor'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n## genre alone by profit ratio\nmp_mod %&gt;%\n  gf_col(genre ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by profit ratio\nmp_mod %&gt;%\n gf_col(distributor ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(distributor) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(distributor ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n\nWhy use median?\n.\nBecause, of its effectiveness in representing the central tendency of skewed or non-normally distributed data.\n\n\n.\n.\n\n\n\n\n.\n\n\n.\n\nIdentify the type of plot\nThe above is a bar graph.\nWhat are the variables used to plot this graph?\ndistributor, genre, profit_ratio\nIf you were to invest in movie production ventures, which are the two best genres that you might decide to invest in?\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\nHorror and Drama\nWhich R command might have been used to obtain the separate plots for each distributor?\nggformula::gf_facet_wrap\nIf the original dataset had BUDGETS and PROFITS in separate columns, what preprocessing might have been done to achieve this plot?\nmp_mod &lt;- mp %&gt;% mutate( ...., profit_ratio = PROFITS/BUDGETS)\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#introduction",
    "href": "posts/A2- Case Study 1/index.html#introduction",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "The data set observed in this case study goes over 3310 films, discussing their domestic and worldwide gross, production budget, genre, distributor and year of release, etc.\n.\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggformula)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#examining-data",
    "href": "posts/A2- Case Study 1/index.html#examining-data",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "mp &lt;- read_delim(file = \"../../Data/movie_profit.csv\", delim = \";\")\n\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmp %&gt;% glimpse()\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;chr&gt; \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             &lt;chr&gt; \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;dbl&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\nmp%&gt;%inspect()\n\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040903e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n\n\n\nmp %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3310\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nDate\n1\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie\n0\n1.00\n1\n35\n0\n3310\n0\n\n\ndistributor\n42\n0.99\n5\n18\n0\n6\n0\n\n\nmpaa_rating\n130\n0.96\n1\n5\n0\n4\n0\n\n\ngenre\n0\n1.00\n5\n9\n0\n5\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nrelease_date\n0\n1\n1936-02-05\n2017-12-22\n2005-06-30\n1723\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nproduction_budget\n0\n1\n3.326794e+07\n3.460741e+07\n2.50e+05\n9.500000e+06\n2.000000e+07\n4.500000e+07\n1.750000e+08\n▇▂▁▁▁\n\n\ndomestic_gross\n0\n1\n4.551509e+07\n5.852794e+07\n0.00e+00\n6.530094e+06\n2.558731e+07\n6.046695e+07\n4.745447e+08\n▇▁▁▁▁\n\n\nworldwide_gross\n0\n1\n9.384123e+07\n1.389514e+08\n4.23e+02\n1.086144e+07\n4.040903e+07\n1.184703e+08\n1.162782e+09\n▇▁▁▁▁\n\n\nprofit_ratio\n0\n1\n4.319388e+14\n1.501736e+15\n1.38e+10\n7.861269e+13\n1.962499e+14\n3.942158e+14\n4.315179e+16\n▇▁▁▁▁\n\n\ndecade\n0\n1\n1.998790e+03\n1.061000e+01\n1.93e+03\n1.990000e+03\n2.000000e+03\n2.010000e+03\n2.010000e+03\n▁▁▁▃▇\n\n\n\n\n\n.\n\n\nThere are 3310 rows and 10 columns in this data set.\n.\n\n\n\nrelease_date : When the movie was released. This data set contains movies released from 1936 through 2017.\nmovie : Tile of the film. This data set contains 3310 films.\ndistributor : Name of the company that distributed the film - there are six categories under this variable: Universal, Paramount Pictures, Warner Bros, and 20th Century Fox, Sony Pictures and Other. There are 42 missing entries.\nmpaa_rating : The age-rating of each movie. There are four categories under this variable - R, PG-13, PG and G. This coloumn also has 130 missing entries.\ngenre : Describes the genre of the film, categorized into - Action, Adventure, Comedy, Drama, and Horror.\ndecade : Describes the decade in which the movie was released, i.e 1990, 2000, 2010 and so on. Though it is considered a quant type variable in the data set, it is technically qual variable.\n\n.\n\n\n\n\nproduction_budget : The budget for the film in USD.\ndomestic_gross : The amount of money, in USD, that the film made across the US.\nworldwide_gross : The amount of money, in USD, the film made across the world.\nprofit_ratio : This variable would technically be the (worldwide_gross - production_budget)/(production_budget), but the values in this section are 17 or so digits in nature. Could this be a misplaced decimal error?\nA simple calculation using the above formula on any film, suggests that the every value under profit_ratio must be multiplied by 10^(-14).\n\n.\n\n\n\n\n\nmp_mod &lt;- mp %&gt;%\n  mutate(\n    decade = as_factor(decade),\n    movie = as_factor(movie),\n    distributor = as_factor(distributor),\n    distributor = replace(distributor, distributor == \"\", NA),\n   \n    mpaa_rating = as_factor(mpaa_rating),\n    mpaa_rating = replace(mpaa_rating, mpaa_rating == \"\", NA),\n    genre = as_factor(genre),\n    \n    profit_ratio = profit_ratio * 0.00000000000001\n  )\nglimpse(mp_mod)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;fct&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;fct&gt; Other, Other, Other, Other, Paramount Pictures, Para…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 0.76744800, 0.81253600, 2.97286400, 4.63068800, 14.9…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n.\n\n## viewing the dataset:\ndatatable(mp_mod, options = list(pageLength = 10))\n\n\n\n\n\n.\n\n\n\n.\n\n\n.\n\n## top 5 production budget:\nmp_mod %&gt;% arrange(desc(production_budget)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Production Budget - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProduction Budget - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2013-12-25\n47 Ronin\n1.75e+08\n38362475\n151716815\nUniversal\nPG-13\nAction\n0.8669532\n2010\n\n\n2017-05-12\nKing Arthur: Legend of the Sword\n1.75e+08\n39175066\n139950708\nWarner Bros.\nPG-13\nAdventure\n0.7997183\n2010\n\n\n1995-07-28\nWaterworld\n1.75e+08\n88246220\n264246220\nUniversal\nPG-13\nAction\n1.5099784\n1990\n\n\n2007-06-22\nEvan Almighty\n1.75e+08\n100289690\n174131329\nUniversal\nPG\nComedy\n0.9950362\n2000\n\n\n2016-05-27\nAlice Through the Looking Glass\n1.70e+08\n77042381\n276934087\nOther\nPG\nAdventure\n1.6290240\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 domestic gross:\nmp_mod %&gt;% arrange(desc(domestic_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Domestic Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nDomestic Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n1977-05-25\nStar Wars Ep. IV: A New Hope\n1.10e+07\n460998007\n786598007\n20th Century Fox\nPG\nAdventure\n71.508910\n1970\n\n\n2004-05-19\nShrek 2\n7.00e+07\n441226247\n937008132\nOther\nPG\nAdventure\n13.385831\n2000\n\n\n1982-06-11\nET: The Extra-Terrestrial\n1.05e+07\n435110554\n792965326\nUniversal\nPG\nDrama\n75.520507\n1980\n\n\n2013-11-22\nThe Hunger Games: Catching Fire\n1.30e+08\n424668047\n864868047\nOther\nPG-13\nAdventure\n6.652831\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 worldwide gross:\nmp_mod %&gt;% arrange(desc(worldwide_gross)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Worldwide Gross - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nWorldwide Gross - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2015-07-10\nMinions\n7.40e+07\n336045770\n1162781621\nUniversal\nPG\nAdventure\n15.713265\n2010\n\n\n1993-06-11\nJurassic Park\n6.30e+07\n395708305\n1038812584\nUniversal\nPG-13\nAction\n16.489089\n1990\n\n\n2017-06-30\nDespicable Me 3\n7.50e+07\n264624300\n1034520868\nUniversal\nPG\nAdventure\n13.793612\n2010\n\n\n1999-05-19\nStar Wars Ep. I: The Phantom Menace\n1.15e+08\n474544677\n1027044677\n20th Century Fox\nPG\nAdventure\n8.930823\n1990\n\n\n2016-03-04\nZootopia\n1.50e+08\n341268248\n1019706594\nOther\nPG\nAdventure\n6.798044\n2010\n\n\n\n\n\n\n\n\n.\n\n## top 5 profit ratio:\nmp_mod %&gt;% arrange(desc(profit_ratio)) %&gt;%\n  head(5) %&gt;%\n  kbl(\n   \n    col.names = c(\n      \"Release\\n Date\", \"Movie\\n Name\", \"Production\\n Budget\", \"Domestic\\n Gross\", \"Worldwide\\n Gross\", \"Distributor\", \"Rating\", \"Genre\", \"Profit\\n Ratio\", \"Decade\"\n    ),\n    caption = \"Profit Ratio - Top 5\"\n  )%&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nProfit Ratio - Top 5\n\n\nRelease Date\nMovie Name\nProduction Budget\nDomestic Gross\nWorldwide Gross\nDistributor\nRating\nGenre\nProfit Ratio\nDecade\n\n\n\n\n2009-09-25\nParanormal Activity\n450000\n107918810\n194183034\nParamount Pictures\nR\nHorror\n431.5179\n2000\n\n\n1999-07-14\nThe Blair Witch Project\n600000\n140539099\n248300000\nOther\nR\nHorror\n413.8333\n1990\n\n\n1942-08-13\nBambi\n858000\n102797000\n268000000\nOther\nG\nDrama\n312.3543\n1940\n\n\n1976-11-21\nRocky\n1000000\n117235147\n225000000\nOther\nPG\nDrama\n225.0000\n1970\n\n\n1978-10-17\nHalloween\n325000\n47000000\n70000000\nOther\nR\nHorror\n215.3846\n1970\n\n\n\n\n\n\n\n\n.\n\n\nIts very interesting to note that the top 5 most expensive movies to make, The top 5 movies that made the most money worldwide and the top 5 movies that made the most in profits have not a single entry in common.\nAdventure and action films seem to make more money, as well as tend to cost more to make.\nhorror and drama films seem to have the best profit turnout.\n\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#plotting-data",
    "href": "posts/A2- Case Study 1/index.html#plotting-data",
    "title": "A2: Case Study 1",
    "section": "",
    "text": "mp_mod %&gt;%\n  group_by(distributor, genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  \n  gf_col( genre  ~ median_profit_ratio ) %&gt;% \n  gf_facet_wrap(~distributor)%&gt;%\n  gf_labs(\n    title = \"Profits made by Film Distributors\",\n    subtitle = \"Ratio of Profits to Budgets\",\n    caption = \"October 2024 \"\n  )\n\n`summarise()` has grouped output by 'distributor'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n.\n.\n\n\n\n\n## genre alone by profit ratio\nmp_mod %&gt;%\n  gf_col(genre ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by profit ratio\nmp_mod %&gt;%\n gf_col(distributor ~ profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n## distributor alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(distributor) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(distributor ~ median_profit_ratio)\n\n\n\n\n\n\n\n\n.\n\n\nWhy use median?\n.\nBecause, of its effectiveness in representing the central tendency of skewed or non-normally distributed data.\n\n\n.\n."
  },
  {
    "objectID": "posts/A2- Case Study 1/index.html#task-and-discussion",
    "href": "posts/A2- Case Study 1/index.html#task-and-discussion",
    "title": "A2: Case Study 1",
    "section": "",
    "text": ".\n\n\n.\n\nIdentify the type of plot\nThe above is a bar graph.\nWhat are the variables used to plot this graph?\ndistributor, genre, profit_ratio\nIf you were to invest in movie production ventures, which are the two best genres that you might decide to invest in?\n\n## genre alone by median_profit ratio\nmp_mod %&gt;%\n  group_by(genre) %&gt;%\n  summarise(median_profit_ratio = median(profit_ratio)) %&gt;% \n  gf_col(genre ~ median_profit_ratio)\n\n\n\n\n\n\n\n\nHorror and Drama\nWhich R command might have been used to obtain the separate plots for each distributor?\nggformula::gf_facet_wrap\nIf the original dataset had BUDGETS and PROFITS in separate columns, what preprocessing might have been done to achieve this plot?\nmp_mod &lt;- mp %&gt;% mutate( ...., profit_ratio = PROFITS/BUDGETS)\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html",
    "href": "posts/Day 2/index.html",
    "title": "Day 2: Summaries",
    "section": "",
    "text": "How do we make data sets more readable? How can we decide how to group variables and compare them against each other in terms of what we are using the data for? This is my journey of exploring these questions with the help of Data Summaries.\n\n\n\nInstall and call packages to the document\nSelect and call chosen data set\nExamining Data: Glimpse, Inspect, Skim and their different syntax\nData Munging: mutate(), as_factor(), group_by() and summarise()\nExploring babynames data set\nExploring Startrek data set\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(babynames)\n\n.\n.\n\n\n\nInstalling packages makes them available to all documents created in the future. {syntax: install.packages(““)}\nIn each document however, one must call on the packages using {library()} to “activate” them.\nDon’t forget to add { #| label: setup } in the first code chunk when calling the packages\nHave only one quarto document open in one window, as R treats a session as a single data pool and can pull libraries across documents (which could complicate things later.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#introduction",
    "href": "posts/Day 2/index.html#introduction",
    "title": "Day 2: Summaries",
    "section": "",
    "text": "How do we make data sets more readable? How can we decide how to group variables and compare them against each other in terms of what we are using the data for? This is my journey of exploring these questions with the help of Data Summaries.\n\n\n\nInstall and call packages to the document\nSelect and call chosen data set\nExamining Data: Glimpse, Inspect, Skim and their different syntax\nData Munging: mutate(), as_factor(), group_by() and summarise()\nExploring babynames data set\nExploring Startrek data set\n\n\n.\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(babynames)\n\n.\n.\n\n\n\nInstalling packages makes them available to all documents created in the future. {syntax: install.packages(““)}\nIn each document however, one must call on the packages using {library()} to “activate” them.\nDon’t forget to add { #| label: setup } in the first code chunk when calling the packages\nHave only one quarto document open in one window, as R treats a session as a single data pool and can pull libraries across documents (which could complicate things later.\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-the-mpg-data-set",
    "href": "posts/Day 2/index.html#looking-at-the-mpg-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at the ‘mpg’ Data Set:",
    "text": "Looking at the ‘mpg’ Data Set:\n\nmpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\n.\n\nmpg %&gt;%\n  head(10) %&gt;%\n  kbl(\n    # add Human Readable column names\n    col.names = c(\n      \"Manufacturer\", \"Model\", \"Engine\\nDisplacement\",\n      \"Model\\n Year\", \"Cylinders\", \"Transmission\",\n      \"Drivetrain\", \"City\\n Mileage\", \"Highway\\n Mileage\",\n      \"Fuel\", \"Class\\nOf\\nVehicle\"\n    ),\n    caption = \"MPG Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nMPG Dataset\n\n\nManufacturer\nModel\nEngine Displacement\nModel Year\nCylinders\nTransmission\nDrivetrain\nCity Mileage\nHighway Mileage\nFuel\nClass Of Vehicle\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n.\n.\n\nNotes\n\nkbl - from the kableExtra package\nmakes the data more human readable\nhead(10) indicates the table will show 10 rows.\n‘\\n’ acts as line break\nStyling (kable_styling):\n\nThe table is styled using kable_styling with several bootstrap_options for appearance:\n\n“striped”: Alternating background colors on rows.\n“hover”: Highlights rows when hovering over them.\n“condensed”: Reduces the row height to make the table more compact.\n“responsive”: Ensures the table adjusts to different screen sizes.\n\nfull_width = F ensures that the table is not stretched to fill the entire width of the page but rather centered, as specified by position = “center”.\n\n\n\n.\n.\n\nUsing Glimpse\n\nglimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\nTesting different syntax:\n\nmpg %&gt;% dplyr::glimpse()\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n.\n\nNotes\n\nsyntax essentially boils down to personal preference and readability of code.\n\n\n.\n\n\n\nUsing Inspect\n\ninspect(mpg)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n\n\n.\n\n\nUsing Skim\n\nskimr::skim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\n\nTesting different syntax:\n\nskim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#data-munging---mutating-data-according-to-your-intent",
    "href": "posts/Day 2/index.html#data-munging---mutating-data-according-to-your-intent",
    "title": "Day 2: Summaries",
    "section": "Data Munging - Mutating data according to your intent:",
    "text": "Data Munging - Mutating data according to your intent:\n\nmpg_modified &lt;- mpg %&gt;%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;fct&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;fct&gt; auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          &lt;fct&gt; f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;fct&gt; p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        &lt;fct&gt; compact, compact, compact, compact, compact, compact, com…\n\n\n\ninspect(mpg_modified)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3          cyl    factor      4 234       0\n4        trans    factor     10 234       0\n5          drv    factor      3 234       0\n6           fl    factor      5 234       0\n7        class    factor      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 4 (34.6%), 6 (33.8%), 8 (29.9%) ...          \n4 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n5 f (45.3%), 4 (44%), r (10.7%)                \n6 r (71.8%), p (22.2%), e (3.4%) ...           \n7 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n4   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n\n\n.\n\nNotes\n\nWhy make characters into factors? it better organizes the data in hand for plotting.\nSometimes qual data such as year and date are considered as quant data due to their numeric content. These variables can be turned into qual data through munging.\n\n\n.\n\nGrouping by Qualitative Variables\nHighway milage grouped by cylinder type:\n\nmpg_modified %&gt;%\n  group_by(cyl) %&gt;%\n  summarize(average_hwy = mean(hwy), count = n())\n\n# A tibble: 4 × 3\n  cyl   average_hwy count\n  &lt;fct&gt;       &lt;dbl&gt; &lt;int&gt;\n1 4            28.8    81\n2 5            28.8     4\n3 6            22.8    79\n4 8            17.6    70\n\n\nThe average milage of cars based on the cylinder type.\n\nmpg_modified %&gt;%\n  group_by(cyl, fl) %&gt;%\n  summarize(average_hwy = mean(hwy), count = n())\n\n`summarise()` has grouped output by 'cyl'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 13 × 4\n# Groups:   cyl [4]\n   cyl   fl    average_hwy count\n   &lt;fct&gt; &lt;fct&gt;       &lt;dbl&gt; &lt;int&gt;\n 1 4     p            27.8    22\n 2 4     r            28.3    55\n 3 4     d            43       3\n 4 4     c            36       1\n 5 5     r            28.8     4\n 6 6     p            25.3    17\n 7 6     r            22.2    60\n 8 6     e            17       1\n 9 6     d            22       1\n10 8     p            20.8    13\n11 8     r            17.5    49\n12 8     e            12.7     7\n13 8     d            17       1\n\n\n.\nThere should be 20 columns, but only there are only 8 as certain combinations of cars don’t exisit in this data set.\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-the-babynames-data-set",
    "href": "posts/Day 2/index.html#looking-at-the-babynames-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at the ‘babynames’ Data Set:",
    "text": "Looking at the ‘babynames’ Data Set:\n\nglimpse(babynames)\n\nRows: 1,924,665\nColumns: 5\n$ year &lt;dbl&gt; 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", …\n$ name &lt;chr&gt; \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    &lt;int&gt; 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop &lt;dbl&gt; 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n\n\n\n## readable table for dataset babynames\nbabynames %&gt;%\n  head(20) %&gt;%\n  kbl(\n    \n    col.names = c(\n      \"Year\", \"Sex\", \"Name\",\n      \"Count\", \"Proportion\"\n    ),\n    caption = \"babynames Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nbabynames Dataset\n\n\nYear\nSex\nName\nCount\nProportion\n\n\n\n\n1880\nF\nMary\n7065\n0.0723836\n\n\n1880\nF\nAnna\n2604\n0.0266790\n\n\n1880\nF\nEmma\n2003\n0.0205215\n\n\n1880\nF\nElizabeth\n1939\n0.0198658\n\n\n1880\nF\nMinnie\n1746\n0.0178884\n\n\n1880\nF\nMargaret\n1578\n0.0161672\n\n\n1880\nF\nIda\n1472\n0.0150812\n\n\n1880\nF\nAlice\n1414\n0.0144870\n\n\n1880\nF\nBertha\n1320\n0.0135239\n\n\n1880\nF\nSarah\n1288\n0.0131961\n\n\n1880\nF\nAnnie\n1258\n0.0128887\n\n\n1880\nF\nClara\n1226\n0.0125608\n\n\n1880\nF\nElla\n1156\n0.0118437\n\n\n1880\nF\nFlorence\n1063\n0.0108908\n\n\n1880\nF\nCora\n1045\n0.0107064\n\n\n1880\nF\nMartha\n1040\n0.0106552\n\n\n1880\nF\nLaura\n1012\n0.0103683\n\n\n1880\nF\nNellie\n995\n0.0101942\n\n\n1880\nF\nGrace\n982\n0.0100610\n\n\n1880\nF\nCarrie\n949\n0.0097229\n\n\n\n\n\n\n\n\n\ninspect(babynames)\n\n\ncategorical variables:  \n  name     class levels       n missing\n1  sex character      2 1924665       0\n2 name character  97310 1924665       0\n                                   distribution\n1 F (59.1%), M (40.9%)                         \n2 Francis (0%), James (0%) ...                 \n\nquantitative variables:  \n  name   class      min        Q1    median        Q3          max         mean\n1 year numeric 1.88e+03 1.951e+03 1.985e+03 2.003e+03 2.017000e+03 1.974851e+03\n2    n integer 5.00e+00 7.000e+00 1.200e+01 3.200e+01 9.968600e+04 1.808733e+02\n3 prop numeric 2.26e-06 3.870e-06 7.300e-06 2.288e-05 8.154561e-02 1.362963e-04\n            sd       n missing\n1 3.402948e+01 1924665       0\n2 1.533337e+03 1924665       0\n3 1.151693e-03 1924665       0\n\n\n\n## transforming year from a quant variable to a qual variable\nbn_modone &lt;- babynames %&gt;% \n  mutate(\n    year = as_factor(year),\n    name = as_factor(name)\n  )\n\n\n## grouping by sex to see how many names fall under each category totally (playing around with androgenous names)\n\nbn_modtwo &lt;- bn_modone %&gt;%\n  group_by(sex) %&gt;% \n  summarise(n_names = count(sex), Krishna = count(name == \"Krishna\"), Sam = count(name == \"Sam\"),Samuel = count(name == \"Samuel\"), Samantha = count(name == \"Samantha\"), Alex = count(name == \"Alex\"), Alexander = count(name == \"Alexander\"), Alexis = count(name == \"Alexis\"), Kai = count(name == \"Kai\"), Liza = count(name == \"Liza\"), Keethi_Keerti_kirthi_kirti = count(name == \"Keerthi\" | name == \"Kirti\"|name == \"Keerti\"|name == \"Kirthi\"), Manal = count(name == \"Manal\"))\n\nglimpse(bn_modtwo)\n\nRows: 2\nColumns: 13\n$ sex                        &lt;chr&gt; \"F\", \"M\"\n$ n_names                    &lt;int&gt; 1138293, 786372\n$ Krishna                    &lt;int&gt; 58, 56\n$ Sam                        &lt;int&gt; 115, 138\n$ Samuel                     &lt;int&gt; 113, 138\n$ Samantha                   &lt;int&gt; 138, 50\n$ Alex                       &lt;int&gt; 99, 138\n$ Alexander                  &lt;int&gt; 88, 138\n$ Alexis                     &lt;int&gt; 78, 110\n$ Kai                        &lt;int&gt; 62, 72\n$ Liza                       &lt;int&gt; 138, 2\n$ Keethi_Keerti_kirthi_kirti &lt;int&gt; 35, 0\n$ Manal                      &lt;int&gt; 50, 0\n\n\n\n## trying to understand what exactly count(sex) means, as there are 'M' and 'F' both...\nbn_modthree &lt;- bn_modone %&gt;%\n  group_by(year) %&gt;% \n  summarise(n_names = count(sex))\n\nglimpse(bn_modthree)\n\nRows: 138\nColumns: 2\n$ year    &lt;fct&gt; 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 18…\n$ n_names &lt;int&gt; 942, 938, 1028, 1054, 1172, 1197, 1282, 1306, 1474, 1479, 1534…\n\n\n.\n\nNotes\n\nWhat if I wanted to make ‘year’ into intervals of decades/centuries/half centuries and then make them into factors?\nArvind says “console&gt; ? case_when&gt; enter”\nWhat does the numerical output of count(sex) mean when grouped by year? Is it the count of only one sex? Or Both?\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#looking-at-star-trek-data-set",
    "href": "posts/Day 2/index.html#looking-at-star-trek-data-set",
    "title": "Day 2: Summaries",
    "section": "Looking at Star Trek Data Set:",
    "text": "Looking at Star Trek Data Set:\n\nstar_trek_data &lt;- read_csv(\"../../Data/star_trek_books.csv\")\nstar_trek_data\n\n\nstar_trek_data &lt;- read_delim(file = \"../../Data/star_trek_books.csv\", delim = \";\")\n\nRows: 783 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (7): title, author, publisher, identifier, series, subseries, dedication\ndbl  (3): nchap, nword, nchar\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstar_trek_data\n\n# A tibble: 783 × 11\n   title    author date       publisher identifier series subseries nchap  nword\n   &lt;chr&gt;    &lt;chr&gt;  &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 Star Tr… Alan … 2009-05-12 Simon an… 1439163391 AV     &lt;NA&gt;         18  77035\n 2 Starfle… Rick … 2010-11-02 Simon Sp… 978144241… AV     Starflee…    14  40129\n 3 Starfle… Rudy … 2010-12-28 Simon Sp… 978144241… AV     Starflee…    31  52547\n 4 Starfle… Rick … 2011-06-28 Simon Sp… 978144241… AV     Starflee…    13  39495\n 5 Starfle… Alan … 2012-06-26 Simon Sp… 978144242… AV     Starflee…    30  62030\n 6 Star Tr… Alan … 2013-05-21 Gallery … 978147671… AV     &lt;NA&gt;         17  77438\n 7 Captain… James… 1998-06-01 Pocket B… 978143910… CT     &lt;NA&gt;         21  95110\n 8 Captain… Macke… 1998-10-01 Pocket B… 978074345… CT     &lt;NA&gt;         26  76392\n 9 Captain… Chris… 1998-10-01 Pocket B… 978143910… CT     &lt;NA&gt;         34  78678\n10 The Cap… John … 2000-03-01 Pocket B… 978074340… CT     &lt;NA&gt;        176 436682\n# ℹ 773 more rows\n# ℹ 2 more variables: nchar &lt;dbl&gt;, dedication &lt;chr&gt;\n\n\n.\n\nNotes\n\n.csv files read commas as separators.\nWhen faced with any other kind of separators, use “read_delim”, default for that is semicolon\n\n\n.\n\nstar_trek_data %&gt;% glimpse()\n\nRows: 783\nColumns: 11\n$ title      &lt;chr&gt; \"Star Trek: Star Trek Movie Tie-In\", \"Starfleet Academy: Th…\n$ author     &lt;chr&gt; \"Alan Dean Foster\", \"Rick Barba\", \"Rudy Josephs\", \"Rick Bar…\n$ date       &lt;date&gt; 2009-05-12, 2010-11-02, 2010-12-28, 2011-06-28, 2012-06-26…\n$ publisher  &lt;chr&gt; \"Simon and Schuster\", \"Simon Spotlight\", \"Simon Spotlight\",…\n$ identifier &lt;chr&gt; \"1439163391\", \"9781442414259\", \"9781442414242\", \"9781442414…\n$ series     &lt;chr&gt; \"AV\", \"AV\", \"AV\", \"AV\", \"AV\", \"AV\", \"CT\", \"CT\", \"CT\", \"CT\",…\n$ subseries  &lt;chr&gt; NA, \"Starfleet Academy\", \"Starfleet Academy\", \"Starfleet Ac…\n$ nchap      &lt;dbl&gt; 18, 14, 31, 13, 30, 17, 21, 26, 34, 176, 9, 12, 36, 23, 44,…\n$ nword      &lt;dbl&gt; 77035, 40129, 52547, 39495, 62030, 77438, 95110, 76392, 786…\n$ nchar      &lt;dbl&gt; 460097, 238567, 295829, 233095, 349595, 537472, 554915, 424…\n$ dedication &lt;chr&gt; \"For Bjo and John TrimbleBecause hospitality is forever and…\n\n\n\nMaking an easy-to-read Table:\n\n## removig the last coloumn for the sake of readability\nstartrek_data_mod &lt;- star_trek_data %&gt;%\n  select(-dedication)\n\n## formatting table for better readability\nstartrek_data_mod %&gt;%\n  head(20) %&gt;%\n  kbl(\n    # add Human Readable column names\n    col.names = c(\n      \"Title\", \"Author\", \"Date\",\n      \"Publisher\", \"Identifier\", \"Series\",\n      \"Subseries\", \"Number\\n of\\n Chapters\", \"Number\\n of\\n Words\",\n      \"Number\\n of\\n Characters\"\n    ),\n    caption = \"Startrek Dataset\"\n  ) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nStartrek Dataset\n\n\nTitle\nAuthor\nDate\nPublisher\nIdentifier\nSeries\nSubseries\nNumber of Chapters\nNumber of Words\nNumber of Characters\n\n\n\n\nStar Trek: Star Trek Movie Tie-In\nAlan Dean Foster\n2009-05-12\nSimon and Schuster\n1439163391\nAV\nNA\n18\n77035\n460097\n\n\nStarfleet Academy: The Delta Anomaly\nRick Barba\n2010-11-02\nSimon Spotlight\n9781442414259\nAV\nStarfleet Academy\n14\n40129\n238567\n\n\nStarfleet Academy: The Edge\nRudy Josephs\n2010-12-28\nSimon Spotlight\n9781442414242\nAV\nStarfleet Academy\n31\n52547\n295829\n\n\nStarfleet Academy: The Gemini Agent\nRick Barba\n2011-06-28\nSimon Spotlight\n9781442414266\nAV\nStarfleet Academy\n13\n39495\n233095\n\n\nStarfleet Academy: The Assassination Game\nAlan Gratz\n2012-06-26\nSimon Spotlight\n9781442420601\nAV\nStarfleet Academy\n30\n62030\n349595\n\n\nStar Trek: Into Darkness\nAlan Dean Foster\n2013-05-21\nGallery Books\n9781476716510\nAV\nNA\n17\n77438\n537472\n\n\nCaptain's Table 1: War Dragons\nJames T. Hirk\n1998-06-01\nPocket Books\n9781439108512\nCT\nNA\n21\n95110\n554915\n\n\nCaptain's Table 5: Once Burned\nMackenzie\n1998-10-01\nPocket Books\n9780743455787\nCT\nNA\n26\n76392\n424689\n\n\nCaptain's Table 6: Where Sea Meets Sky\nChristopher Pike\n1998-10-01\nPocket Books\n9781439108536\nCT\nNA\n34\n78678\n443307\n\n\nThe Captain's Table 1-6 (Omnibus)\nJohn J. Ordover and Dean Wesley Smith\n2000-03-01\nPocket Books\n9780743406703\nCT\nNA\n176\n436682\n2466047\n\n\nTales from the Captain's Table\nKeith R.A. Decandido\n2005-06-14\nPocket Books\n9781416510284\nCT\nNA\n9\n101577\n588475\n\n\nEmissary\nJ. M. Dillard\n1993-02-01\nPocket Books\n0743412206\nDS9\nNA\n12\n60903\n368047\n\n\nThe Siege\nPeter David\n1993-05-01\nSimon and Schuster\n9780743412216\nDS9\nNA\n36\n73075\n438146\n\n\nBloodletter\nK.W. Jeter\n1993-08-01\nPocket Books\n9780743412223\nDS9\nNA\n23\n69797\n404217\n\n\nThe Big Game\nSandy Schofield\n1993-11-01\nPocket Books\n9780743412230\nDS9\nNA\n44\n62085\n348583\n\n\nFallen Heroes\nDafydd Ab Hugh\n1994-02-01\nPocket Books\n9780671041144\nDS9\nNA\n20\n82087\n480570\n\n\nBetrayal\nLois Tilton\n1994-05-01\nSimon and Schuster\n9780743420341\nDS9\nNA\n30\n69441\n411458\n\n\nWarchild\nEsther Friesner\n1994-09-01\nSimon and Schuster\n9780743420389\nDS9\nNA\n17\n83047\n467694\n\n\nThe Search\nDiane Carey\n1994-10-01\nSimon and Schuster\n9780743420815\nDS9\nNA\n19\n62364\n356249\n\n\nAntimatter\nJohn Vornholt\n1994-11-01\nSimon and Schuster\n9780743420396\nDS9\nNA\n16\n70493\n415964\n\n\n\n\n\n\n\n\n\nstar_trek_data %&gt;% inspect()\n\n\ncategorical variables:  \n        name     class levels   n missing\n1      title character    781 783       0\n2     author character    277 783       0\n3  publisher character     21 772      11\n4 identifier character    783 783       0\n5     series character     28 783       0\n6  subseries character     15  56     727\n7 dedication character    372 372     411\n                                   distribution\n1 Kobayashi Maru (0.3%), Warped (0.3%) ...     \n2 Peter David (4.9%) ...                       \n3 Pocket Books (67.4%) ...                     \n4  (%) ...                                     \n5 TOS (26.8%), TNG (18.6%), SCE (10.7%) ...    \n6 Typhon Pact (16.1%) ...                      \n7  (%) ...                                     \n\nDate variables:  \n  name class      first       last min_diff max_diff   n missing\n1 date  Date 1967-01-01 2017-11-28   0 days 485 days 783       0\n\nquantitative variables:  \n   name   class  min     Q1 median       Q3     max         mean           sd\n1 nchap numeric    1     13     21     29.0     373     24.58816     21.61247\n2 nword numeric  782  52500  70730  90994.5  687175  76190.07535  52453.34633\n3 nchar numeric 4337 310520 415964 555866.5 4484069 461822.36271 326062.44928\n    n missing\n1 760      23\n2 783       0\n3 783       0\n\n\n\nstar_trek_data %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n783\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n7\n\n\nDate\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntitle\n0\n1.00\n4\n58\n0\n781\n0\n\n\nauthor\n0\n1.00\n2\n138\n0\n277\n0\n\n\npublisher\n11\n0.99\n7\n26\n0\n21\n0\n\n\nidentifier\n0\n1.00\n10\n41\n0\n783\n0\n\n\nseries\n0\n1.00\n2\n6\n0\n28\n0\n\n\nsubseries\n727\n0.07\n4\n23\n0\n15\n0\n\n\ndedication\n411\n0.48\n98\n97953\n0\n372\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ndate\n0\n1\n1967-01-01\n2017-11-28\n2001-12-14\n577\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nnchap\n23\n0.97\n24.59\n21.61\n1\n13\n21\n29.0\n373\n▇▁▁▁▁\n\n\nnword\n0\n1.00\n76190.08\n52453.35\n782\n52500\n70730\n90994.5\n687175\n▇▁▁▁▁\n\n\nnchar\n0\n1.00\n461822.36\n326062.45\n4337\n310520\n415964\n555866.5\n4484069\n▇▁▁▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#munging-star-trek-data",
    "href": "posts/Day 2/index.html#munging-star-trek-data",
    "title": "Day 2: Summaries",
    "section": "Munging Star Trek Data:",
    "text": "Munging Star Trek Data:\n\n## grouping by publisher to understand the average of certain quant variables\nstartrek_munged &lt;- star_trek_data %&gt;%\n  group_by(publisher) %&gt;%\n  summarize(avg_nchap = mean(nchap), avg_nw = mean(nword), avg_nchar = mean(nchar), count = n())\n\n## creating a readable table for this summary\nstartrek_munged %&gt;%\n  head(20) %&gt;%\n  kbl(\n    col.names = c(\n      \"Publisher\",\"Average\\n #of\\n Chapters\", \"Average\\n #of\\n Words\", \"Average\\n #of\\n Characters\",\n      \"Total\\n #of\\n Books\"\n    ),\n    caption = \"Startrek Dataset - Munged\"\n  ) %&gt;%\n  column_spec(1 , border_right = TRUE) %&gt;%\n  kable_styling(\n    bootstrap_options = c(\n      \"striped\", \"hover\",\n      \"condensed\", \"responsive\"\n    ),\n    full_width = F, position = \"center\"\n  )\n\n\n\nStartrek Dataset - Munged\n\n\nPublisher\nAverage #of Chapters\nAverage #of Words\nAverage #of Characters\nTotal #of Books\n\n\n\n\nAbrams Publications\n373.00000\n132041.00\n898671.0\n1\n\n\nAladdin\n11.25000\n23800.71\n139129.2\n28\n\n\nAladdin Paperbacks\n24.00000\n69076.00\n390799.0\n1\n\n\nAmereon Ltd\nNA\n40804.50\n233809.0\n2\n\n\nBantam Books\nNA\n50225.20\n287110.7\n20\n\n\nDemco Media\n6.50000\n23310.50\n134614.0\n2\n\n\nDk Publishing\n1.00000\n119459.00\n1094928.0\n1\n\n\nElysium\n21.00000\n98779.00\n578010.0\n1\n\n\nGallery Books\n34.13333\n93417.67\n613744.8\n15\n\n\nHarlequin\n27.00000\n63453.00\n372682.0\n1\n\n\nInsight Editions\n43.00000\n32915.00\n239389.5\n2\n\n\nKlingon Language Institute\n14.00000\n58231.00\n417503.0\n1\n\n\nKrause Publications\nNA\n58073.00\n390642.0\n1\n\n\nPocket Books\nNA\n79750.91\n485790.7\n520\n\n\nSimon Pulse\n32.00000\n76558.00\n450457.0\n1\n\n\nSimon Spotlight\n22.00000\n48550.25\n279271.5\n4\n\n\nSimon and Schuster\nNA\n76054.30\n450020.9\n159\n\n\nSpectra\nNA\n67716.00\n391634.3\n3\n\n\nSt. Martin's Press\nNA\n273792.50\n1627148.0\n2\n\n\nTitan Books\nNA\n69734.67\n429937.3\n6\n\n\n\n\n\n\n\n\n\n##star_trek_data %&gt;% \n  ##group_by(publisher) %&gt;% \n  ##gitsummarize(author_count = sum(author))\n\n.\n."
  },
  {
    "objectID": "posts/Day 2/index.html#conclusion",
    "href": "posts/Day 2/index.html#conclusion",
    "title": "Day 2: Summaries",
    "section": "Conclusion:",
    "text": "Conclusion:"
  },
  {
    "objectID": "posts/Day 4/index.html",
    "href": "posts/Day 4/index.html",
    "title": "Day 4: Quantities",
    "section": "",
    "text": "gf_histogram()\n\nbins\n\ngf_facet_wrap()\n\nscales\nnrow\n\ngf_themes()\nfavestats()\ndrop_na()\ncrosstable()\ncrosstable::as_flextable()\narrange(desc()) or arrange(asec())\nfilter( df %in% c())\nslice_max()\n\norder_by\n\nleft_join()\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(crosstable)\n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#setting-up",
    "href": "posts/Day 4/index.html#setting-up",
    "title": "Day 4: Quantities",
    "section": "",
    "text": "gf_histogram()\n\nbins\n\ngf_facet_wrap()\n\nscales\nnrow\n\ngf_themes()\nfavestats()\ndrop_na()\ncrosstable()\ncrosstable::as_flextable()\narrange(desc()) or arrange(asec())\nfilter( df %in% c())\nslice_max()\n\norder_by\n\nleft_join()\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(crosstable)\n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#looking-dataset-diamonds",
    "href": "posts/Day 4/index.html#looking-dataset-diamonds",
    "title": "Day 4: Quantities",
    "section": "Looking Dataset “diamonds”:",
    "text": "Looking Dataset “diamonds”:\n.\n\nNotes:\n\nbins = the number of classes\n\nthe y-axis changes when you change the bins as more the number of class groups, less the number of units within that group &gt; count scale changes\nif the number of bins = the number of rows, it would result in a line graph with the area shaded\n\nalpha = opacity, valuable for overlapping values\ngf_facet_wrap = splits the levels of a variable into their respective graphs\nnrow = changes the scale on the y axis\nfree_y = changes the scales on each graph on gf_facet_wrap\n\n\n.\n\ndiamonds\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\n.\n\ndiamonds %&gt;% glimpse()\n\nRows: 53,940\nColumns: 10\n$ carat   &lt;dbl&gt; 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     &lt;ord&gt; Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   &lt;ord&gt; E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity &lt;ord&gt; SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   &lt;dbl&gt; 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   &lt;dbl&gt; 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   &lt;int&gt; 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       &lt;dbl&gt; 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       &lt;dbl&gt; 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       &lt;dbl&gt; 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n\n\n.\n\ndiamonds %&gt;% inspect()\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     cut ordered      5 53940       0\n2   color ordered      7 53940       0\n3 clarity ordered      8 53940       0\n                                   distribution\n1 Ideal (40%), Premium (25.6%) ...             \n2 G (20.9%), E (18.2%), F (17.7%) ...          \n3 SI1 (24.2%), VS2 (22.7%), SI2 (17%) ...      \n\nquantitative variables:  \n   name   class   min     Q1  median      Q3      max         mean           sd\n1 carat numeric   0.2   0.40    0.70    1.04     5.01    0.7979397    0.4740112\n2 depth numeric  43.0  61.00   61.80   62.50    79.00   61.7494049    1.4326213\n3 table numeric  43.0  56.00   57.00   59.00    95.00   57.4571839    2.2344906\n4 price integer 326.0 950.00 2401.00 5324.25 18823.00 3932.7997219 3989.4397381\n5     x numeric   0.0   4.71    5.70    6.54    10.74    5.7311572    1.1217607\n6     y numeric   0.0   4.72    5.71    6.54    58.90    5.7345260    1.1421347\n7     z numeric   0.0   2.91    3.53    4.04    31.80    3.5387338    0.7056988\n      n missing\n1 53940       0\n2 53940       0\n3 53940       0\n4 53940       0\n5 53940       0\n6 53940       0\n7 53940       0\n\n\n.\n\ndiamonds %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n53940\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncut\n0\n1\nTRUE\n5\nIde: 21551, Pre: 13791, Ver: 12082, Goo: 4906\n\n\ncolor\n0\n1\nTRUE\n7\nG: 11292, E: 9797, F: 9542, H: 8304\n\n\nclarity\n0\n1\nTRUE\n8\nSI1: 13065, VS2: 12258, SI2: 9194, VS1: 8171\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ncarat\n0\n1\n0.80\n0.47\n0.2\n0.40\n0.70\n1.04\n5.01\n▇▂▁▁▁\n\n\ndepth\n0\n1\n61.75\n1.43\n43.0\n61.00\n61.80\n62.50\n79.00\n▁▁▇▁▁\n\n\ntable\n0\n1\n57.46\n2.23\n43.0\n56.00\n57.00\n59.00\n95.00\n▁▇▁▁▁\n\n\nprice\n0\n1\n3932.80\n3989.44\n326.0\n950.00\n2401.00\n5324.25\n18823.00\n▇▂▁▁▁\n\n\nx\n0\n1\n5.73\n1.12\n0.0\n4.71\n5.70\n6.54\n10.74\n▁▁▇▃▁\n\n\ny\n0\n1\n5.73\n1.14\n0.0\n4.72\n5.71\n6.54\n58.90\n▇▁▁▁▁\n\n\nz\n0\n1\n3.54\n0.71\n0.0\n2.91\n3.53\n4.04\n31.80\n▇▁▁▁▁\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#munging-data",
    "href": "posts/Day 4/index.html#munging-data",
    "title": "Day 4: Quantities",
    "section": "Munging Data:",
    "text": "Munging Data:\nThere’s nothing to be munged!\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#q1-price-distribution",
    "href": "posts/Day 4/index.html#q1-price-distribution",
    "title": "Day 4: Quantities",
    "section": "Q1: Price Distribution",
    "text": "Q1: Price Distribution\n.\n\n## Plotting the distribution of Diamond Prices\ndiamonds %&gt;% \n  gf_histogram(~price) %&gt;%\n  gf_labs(\n    title = \"Plot 1A: Diamond Prices\",\n    caption = \"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n.\n\n##What happens when you change the bins?\ndiamonds %&gt;% \n  gf_histogram(~price,\n               bins =100) %&gt;%\n  gf_labs(\n    title = \"Plot 1B: Diamond Prices\",\n    caption = \"bins=100\"\n  )\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#q2-carat-distribution",
    "href": "posts/Day 4/index.html#q2-carat-distribution",
    "title": "Day 4: Quantities",
    "section": "Q2: Carat Distribution",
    "text": "Q2: Carat Distribution\n.\n\n## Plotting the distribution of diamonds with different Carats\ndiamonds %&gt;% \n  gf_histogram(~carat) %&gt;%\n  gf_labs(\n    title = \"Plot 2A: Diamond Carats\",\n    caption = \"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n\n## Putting bins at 100\ndiamonds %&gt;% \n  gf_histogram(~carat,\n               bins = 100) %&gt;%\n  gf_labs(\n    title = \"Plot 2B: Diamond Carats\",\n    caption = \"bins=100\"\n  )\n\n\n\n\n\n\n\n\n\n## Putting bins at 200\ndiamonds %&gt;% \n  gf_histogram(~carat,\n               bins = 200) %&gt;%\n  gf_labs(\n    title = \"Plot 2C: Diamond Carats\",\n    caption = \"bins=200\"\n  )\n\n\n\n\n\n\n\n\n.\n\n## What about when bins are 2000?\ndiamonds %&gt;% \n  gf_plot(~carat,\n               bins = 2000) %&gt;%\n  gf_labs(\n    title = \"Plot 2D: Diamond Carats\",\n    caption = \"bins=2000\"\n  )\n\n\n\n\n\n\n\n\n.\n\nObservations:\n\nSome towers are really high, and some are very low: this suggests that there are certain values of diamonds that are more standard than others, i.e, one is more likely to find 1, 1.5 and 2 carat diamonds than perhaps a 1.8 or 1.9 carat diamond."
  },
  {
    "objectID": "posts/Day 4/index.html#q3-price-distribution-based-on-cut-clarity-color",
    "href": "posts/Day 4/index.html#q3-price-distribution-based-on-cut-clarity-color",
    "title": "Day 4: Quantities",
    "section": "Q3: Price Distribution based on Cut, Clarity, Color",
    "text": "Q3: Price Distribution based on Cut, Clarity, Color\n\ncan you stack and dodge in histograms?\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3A: Price distribution based on Cut\",\n    caption=\"bins=default=25\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               position = \"dodge\",\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3B: Price distribution based on Cut\",\n    caption=\"bins = 25, position = dodge\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               position = \"fill\",\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_labs(\n    title=\"Plot 3C: Price distribution based on Cut\",\n    caption=\"bins = 25, position = fill\"\n  )\n\n\n\n\n\n\n\n\n\nPosition ‘dodge’ and ‘stacked’ act as default for gf_facet_wrap. Fill doesn’t make any sense to do as all coloumns would be 1 and filled.\n\n\ndiamonds %&gt;% \n  gf_histogram( ~price,\n               fill = ~cut,\n               color = \"violet\",\n               alpha = 0.8) %&gt;%\n  gf_facet_wrap(~cut) %&gt;% \n  gf_labs(\n    title=\"Plot 3B: Prices by Filled and Facetted by Cut\",\n    caption=\"bins = 25\"\n  )\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"violet\", alpha = 0.3) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 2) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale, nrow = 2\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      )\n  ))\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"violet\", alpha = 0.3) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 5) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale, nrow = 5\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      )\n  ))\n\n\n\n\n\n\n\n\n.\n."
  },
  {
    "objectID": "posts/Day 4/index.html#looking-at-data-sets-race-and-rank",
    "href": "posts/Day 4/index.html#looking-at-data-sets-race-and-rank",
    "title": "Day 4: Quantities",
    "section": "Looking at Data sets ‘race’ and ‘rank’:",
    "text": "Looking at Data sets ‘race’ and ‘rank’:\n.\n\nNotes:\n\nfavestats = singles out specified row and gives its stats\ncrosstables = tabling more than two variables against each other\ndrop_na() = removes all missing variables\n\n\n.\n\n## Reading race data frame\n##\nrace_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv\")\n\nRows: 1207 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): event, race, city, country, participation\ndbl  (6): race_year_id, distance, elevation_gain, elevation_loss, aid_statio...\ndate (1): date\ntime (1): start_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n##\n##reading rank data frame\n##\nrank_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv\")\n\nRows: 137803 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): runner, time, gender, nationality\ndbl (4): race_year_id, rank, age, time_in_seconds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nrace_df %&gt;% glimpse()\n\nRows: 1,207\nColumns: 13\n$ race_year_id   &lt;dbl&gt; 68140, 72496, 69855, 67856, 70469, 66887, 67851, 68241,…\n$ event          &lt;chr&gt; \"Peak District Ultras\", \"UTMB®\", \"Grand Raid des Pyréné…\n$ race           &lt;chr&gt; \"Millstone 100\", \"UTMB®\", \"Ultra Tour 160\", \"PERSENK UL…\n$ city           &lt;chr&gt; \"Castleton\", \"Chamonix\", \"vielle-Aure\", \"Asenovgrad\", \"…\n$ country        &lt;chr&gt; \"United Kingdom\", \"France\", \"France\", \"Bulgaria\", \"Turk…\n$ date           &lt;date&gt; 2021-09-03, 2021-08-27, 2021-08-20, 2021-08-20, 2021-0…\n$ start_time     &lt;time&gt; 19:00:00, 17:00:00, 05:00:00, 18:00:00, 18:00:00, 17:0…\n$ participation  &lt;chr&gt; \"solo\", \"Solo\", \"solo\", \"solo\", \"solo\", \"solo\", \"solo\",…\n$ distance       &lt;dbl&gt; 166.9, 170.7, 167.0, 164.0, 159.9, 159.9, 163.8, 163.9,…\n$ elevation_gain &lt;dbl&gt; 4520, 9930, 9980, 7490, 100, 9850, 5460, 4630, 6410, 31…\n$ elevation_loss &lt;dbl&gt; -4520, -9930, -9980, -7500, -100, -9850, -5460, -4660, …\n$ aid_stations   &lt;dbl&gt; 10, 11, 13, 13, 12, 15, 5, 8, 13, 23, 13, 5, 12, 15, 0,…\n$ participants   &lt;dbl&gt; 150, 2300, 600, 150, 0, 300, 0, 200, 120, 100, 300, 50,…\n\n\n\nrace_df %&gt;%skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n1207\n\n\nNumber of columns\n13\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nDate\n1\n\n\ndifftime\n1\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nevent\n0\n1.00\n4\n57\n0\n435\n0\n\n\nrace\n0\n1.00\n3\n63\n0\n371\n0\n\n\ncity\n172\n0.86\n2\n30\n0\n308\n0\n\n\ncountry\n4\n1.00\n4\n17\n0\n60\n0\n\n\nparticipation\n0\n1.00\n4\n5\n0\n4\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ndate\n0\n1\n2012-01-14\n2021-09-03\n2017-09-30\n711\n\n\n\nVariable type: difftime\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nstart_time\n0\n1\n0 secs\n82800 secs\n05:00:00\n39\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrace_year_id\n0\n1\n27889.65\n20689.90\n2320\n9813.5\n23565.0\n42686.00\n72496.0\n▇▃▃▂▂\n\n\ndistance\n0\n1\n152.62\n39.88\n0\n160.1\n161.5\n165.15\n179.1\n▁▁▁▁▇\n\n\nelevation_gain\n0\n1\n5294.79\n2872.29\n0\n3210.0\n5420.0\n7145.00\n14430.0\n▅▇▇▂▁\n\n\nelevation_loss\n0\n1\n-5317.01\n2899.12\n-14440\n-7206.5\n-5420.0\n-3220.00\n0.0\n▁▂▇▇▅\n\n\naid_stations\n0\n1\n8.63\n7.63\n0\n0.0\n9.0\n14.00\n56.0\n▇▆▁▁▁\n\n\nparticipants\n0\n1\n120.49\n281.83\n0\n0.0\n21.0\n150.00\n2900.0\n▇▁▁▁▁\n\n\n\n\n\n\nrank_df %&gt;%glimpse()\n\nRows: 137,803\nColumns: 8\n$ race_year_id    &lt;dbl&gt; 68140, 68140, 68140, 68140, 68140, 68140, 68140, 68140…\n$ rank            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, NA, NA, NA,…\n$ runner          &lt;chr&gt; \"VERHEUL Jasper\", \"MOULDING JON\", \"RICHARDSON Phill\", …\n$ time            &lt;chr&gt; \"26H 35M 25S\", \"27H 0M 29S\", \"28H 49M 7S\", \"30H 53M 37…\n$ age             &lt;dbl&gt; 30, 43, 38, 55, 48, 31, 55, 40, 47, 29, 48, 47, 52, 49…\n$ gender          &lt;chr&gt; \"M\", \"M\", \"M\", \"W\", \"W\", \"M\", \"W\", \"W\", \"M\", \"M\", \"M\",…\n$ nationality     &lt;chr&gt; \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\"…\n$ time_in_seconds &lt;dbl&gt; 95725, 97229, 103747, 111217, 117981, 118000, 120601, …\n\n\n\nrank_df %&gt;%skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n137803\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nrunner\n0\n1.00\n3\n52\n0\n73629\n0\n\n\ntime\n17791\n0.87\n8\n11\n0\n72840\n0\n\n\ngender\n30\n1.00\n1\n1\n0\n2\n0\n\n\nnationality\n0\n1.00\n3\n3\n0\n133\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrace_year_id\n0\n1.00\n26678.70\n20156.18\n2320\n8670\n21795\n40621\n72496\n▇▃▃▂▂\n\n\nrank\n17791\n0.87\n253.56\n390.80\n1\n31\n87\n235\n1962\n▇▁▁▁▁\n\n\nage\n0\n1.00\n46.25\n10.11\n0\n40\n46\n53\n133\n▁▇▂▁▁\n\n\ntime_in_seconds\n17791\n0.87\n122358.26\n37234.38\n3600\n96566\n114167\n148020\n296806\n▁▇▆▁▁\n\n\n\n\n\n.\n\nUsing mosaic::favestats:\n\nrace_df %&gt;%\n  favstats(~distance, data = .)\n\n min    Q1 median     Q3   max     mean       sd    n missing\n   0 160.1  161.5 165.15 179.1 152.6187 39.87864 1207       0\n\n\n\nrace_df %&gt;%\n  favstats(~participants, data = .)\n\n min Q1 median  Q3  max     mean       sd    n missing\n   0  0     21 150 2900 120.4872 281.8337 1207       0\n\n\n\n##\nrank_df %&gt;%\n  drop_na() %&gt;%\n  favstats(time_in_seconds ~ gender, data = .)\n\n  gender  min      Q1 median       Q3    max     mean       sd      n missing\n1      M 3600 96536.5 115845 149761.5 288000 123271.1 37615.42 101643       0\n2      W 9191 96695.0 107062 131464.0 296806 117296.5 34604.26  18341       0\n\n\n.\n.\n\n\nData Dictionary:"
  },
  {
    "objectID": "posts/Day 4/index.html#coming-up-with-questions",
    "href": "posts/Day 4/index.html#coming-up-with-questions",
    "title": "Day 4: Quantities",
    "section": "Coming up with Questions:",
    "text": "Coming up with Questions:\n\nDo gender and age affect time in seconds"
  },
  {
    "objectID": "posts/Day 4/index.html#q1",
    "href": "posts/Day 4/index.html#q1",
    "title": "Day 4: Quantities",
    "section": "Q1:",
    "text": "Q1:"
  },
  {
    "objectID": "posts/Day 4/index.html#q2",
    "href": "posts/Day 4/index.html#q2",
    "title": "Day 4: Quantities",
    "section": "Q2:",
    "text": "Q2:"
  },
  {
    "objectID": "posts/Day 5.B/index.html",
    "href": "posts/Day 5.B/index.html",
    "title": "Day 5: Change",
    "section": "",
    "text": "in functions under change:\n\nselect(where())\ngf_point()\ngf_lm()\nGGgalley::ggpairs ()\n\ncoloums =\nswitch =\nprogress =\ndiag =\nlower =\nlist()\nwrap()\n\nmosaic::cor_test()\nbroom::tidy()\nknitr::kable\n\ndigits\ncaption\n\ncorrelation::correlation()\ngf_errorbar()\ngf_hline()\ngf_smooth()\nggExtra::ggMarginal"
  },
  {
    "objectID": "posts/Day 5.B/index.html#introduction",
    "href": "posts/Day 5.B/index.html#introduction",
    "title": "Day 5: Change",
    "section": "",
    "text": "in functions under change:\n\nselect(where())\ngf_point()\ngf_lm()\nGGgalley::ggpairs ()\n\ncoloums =\nswitch =\nprogress =\ndiag =\nlower =\nlist()\nwrap()\n\nmosaic::cor_test()\nbroom::tidy()\nknitr::kable\n\ndigits\ncaption\n\ncorrelation::correlation()\ngf_errorbar()\ngf_hline()\ngf_smooth()\nggExtra::ggMarginal"
  },
  {
    "objectID": "posts/Final Reflection/index.html",
    "href": "posts/Final Reflection/index.html",
    "title": "And Finally…..",
    "section": "",
    "text": "As I began writing what would be the last reflection for this class, a thought occurred to me. What better way to finally reflect, if not with graphs?\n.\nFirst I ranked each day of the course out of 10 on my understanding of the course material, my learnings and my joy levels. The following is a rundown of my code process to get to the graphs from this data, and then finally, my final final reflection :)\n.\nDISCLAIMER! - all inferences and data uncovered on this page must be taken with a mighty grain of salt. I’ve defined the rankings, and if anything, im a bit of a va-riable myself.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(corrplot)\n\ncorrplot 0.95 loaded\n\nlibrary(broom)\n\n.\n\n## reading data\nreflection &lt;- read_csv(file =\"../../Data/reflection.csv\")\n\nRows: 10 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): label\ndbl (4): day, learning, understanding, joy\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "posts/Final Reflection/index.html#introduction",
    "href": "posts/Final Reflection/index.html#introduction",
    "title": "And Finally…..",
    "section": "",
    "text": "As I began writing what would be the last reflection for this class, a thought occurred to me. What better way to finally reflect, if not with graphs?\n.\nFirst I ranked each day of the course out of 10 on my understanding of the course material, my learnings and my joy levels. The following is a rundown of my code process to get to the graphs from this data, and then finally, my final final reflection :)\n.\nDISCLAIMER! - all inferences and data uncovered on this page must be taken with a mighty grain of salt. I’ve defined the rankings, and if anything, im a bit of a va-riable myself.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(corrplot)\n\ncorrplot 0.95 loaded\n\nlibrary(broom)\n\n.\n\n## reading data\nreflection &lt;- read_csv(file =\"../../Data/reflection.csv\")\n\nRows: 10 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): label\ndbl (4): day, learning, understanding, joy\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "posts/Final Reflection/index.html#code",
    "href": "posts/Final Reflection/index.html#code",
    "title": "And Finally…..",
    "section": "Code",
    "text": "Code\n\nData:\n\n## data overview, as I initially input it\ndatatable(reflection, options = list(pageLength = 10))\n\n\n\n\n\n.\n\nreflection %&gt;% glimpse()\n\nRows: 10\nColumns: 5\n$ day           &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n$ learning      &lt;dbl&gt; 10, 10, 10, 10, 9, NA, 10, 10, 9, 6\n$ understanding &lt;dbl&gt; 9, 10, 10, 10, 6, NA, 6, 7, 9, 5\n$ joy           &lt;dbl&gt; 10, 10, 10, 10, 7, NA, 7, 6, 7, 5\n$ label         &lt;chr&gt; \"intro\", \"summaries\", \"counts\", \"quant\", \"groups, change…\n\n\n.\n\nreflection %&gt;% inspect()\n\n\ncategorical variables:  \n   name     class levels  n missing\n1 label character      9 10       0\n                                   distribution\n1 stats theory (20%), a3 (10%) ...             \n\nquantitative variables:  \n           name   class min   Q1 median    Q3 max     mean       sd  n missing\n1           day numeric   1 3.25    5.5  7.75  10 5.500000 3.027650 10       0\n2      learning numeric   6 9.00   10.0 10.00  10 9.333333 1.322876  9       1\n3 understanding numeric   5 6.00    9.0 10.00  10 8.000000 2.000000  9       1\n4           joy numeric   5 7.00    7.0 10.00  10 8.000000 2.000000  9       1\n\n\n.\n\nreflection %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n10\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nlabel\n0\n1\n2\n15\n0\n9\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nday\n0\n1.0\n5.50\n3.03\n1\n3.25\n5.5\n7.75\n10\n▇▇▇▇▇\n\n\nlearning\n1\n0.9\n9.33\n1.32\n6\n9.00\n10.0\n10.00\n10\n▁▁▁▂▇\n\n\nunderstanding\n1\n0.9\n8.00\n2.00\n5\n6.00\n9.0\n10.00\n10\n▇▂▁▅▇\n\n\njoy\n1\n0.9\n8.00\n2.00\n5\n7.00\n7.0\n10.00\n10\n▃▆▁▁▇\n\n\n\n\n\n.\n.\n\n\nGraphs:\n\n## average of parameters across 10 days\nreflection %&gt;%\n  drop_na() %&gt;% \n  mutate( day = as_factor(day)) %&gt;%\n  summarize(learning = mean(learning),\n            understanding = mean(understanding),\n            joy = mean(joy)) %&gt;%\n   pivot_longer(cols = c(\"learning\", \"understanding\", \"joy\"),\n                    cols_vary = \"slowest\",\n                    names_to = \"parameter\",\n                    values_to =\"meanvalue\") %&gt;%\n  gf_col(meanvalue ~parameter,\n         fill = ~parameter\n  ) %&gt;% \n  gf_refine(scale_fill_manual(values = c(\"learning\" = \"violet\", \"understanding\" = \"purple\", \"joy\" = \"pink\"))) %&gt;% \n  gf_labs(\n    title = \"Plot 1: Overall Parameters\",\n    caption = \"25th October, 2024\"\n  )\n\n\n\n\n\n\n\n\n.\n\nInference 1\nWell, I seemed to have learned quite a lot, but haven’t fully understood all I’ve learned. The joy in my learning is about as much as my understanding.\n.\n.\n\n## modifying data for stacked graphs\n\nreflection_mod &lt;- reflection %&gt;%\n  drop_na() %&gt;% \n  mutate( day = as_factor(day)) %&gt;% \n  pivot_longer(cols = c(\"learning\", \"understanding\", \"joy\"),\n                    cols_vary = \"slowest\",\n                    names_to = \"parameter\",\n                    values_to =\"values\") %&gt;% glimpse()\n\nRows: 27\nColumns: 4\n$ day       &lt;fct&gt; 1, 2, 3, 4, 5, 7, 8, 9, 10, 1, 2, 3, 4, 5, 7, 8, 9, 10, 1, 2…\n$ label     &lt;chr&gt; \"intro\", \"summaries\", \"counts\", \"quant\", \"groups, change\", \"…\n$ parameter &lt;chr&gt; \"learning\", \"learning\", \"learning\", \"learning\", \"learning\", …\n$ values    &lt;dbl&gt; 10, 10, 10, 10, 9, 10, 10, 9, 6, 9, 10, 10, 10, 6, 6, 7, 9, …\n\n\n.\n\n## Looking at the distribution of parameters\n\nreflection_mod %&gt;% \n  gf_col(day~values,\n         fill = ~parameter) %&gt;% \n   gf_refine(scale_fill_manual(values = c(\"learning\" = \"violet\", \"understanding\" = \"purple\", \"joy\" = \"pink\"))) %&gt;% \n  gf_labs(\n    title = \"Plot 2: Distribution of  Parameters\",\n    subtitle = \"Stacked Graph\",\n    caption = \"25th October, 2024\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nInference 2\nAll three parameters gradually decreased as the days went on. Was this because I realized that we wouldn’t be able to cover as much as I thought we would? Or was it because work picked up in terms of the cycle and I couldn’t focus? Even I’m not entirely sure.\n.\n.\n\n## Looking at proportions for each day\nreflection_mod %&gt;% \n  gf_col(day~values,\n         fill = ~parameter,\n         position = \"fill\") %&gt;% \n   gf_refine(scale_fill_manual(values = c(\"learning\" = \"violet\", \"understanding\" = \"purple\", \"joy\" = \"pink\"))) %&gt;% \n  gf_labs(\n    title = \"Plot 3: Proportion Distribution of Parameters\",\n    subtitle = \"Filled Graph\",\n    caption = \"25th October, 2024\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nInference 3\nThe proportion of my joy, understanding and learning for each day seem to stay in the realm of each other, with nothing too extreme. Sure, there’s definitely differences, but its safe to say that I expected and experienced the same of each day.\n.\nInteresting.\n.\nThis means that even though I expected the same of each day, I didn’t expect the same over 12 days, since I felt we couldn’t cover as much. I guess this goes to say what a terrible long term judgement I have, oof :’)\n.\n.\n\n## Looking at each parameter indivdually\nreflection_mod %&gt;% \n  gf_col(day~values,\n         fill = ~parameter) %&gt;% \n  gf_facet_wrap(~parameter) %&gt;% \n   gf_refine(scale_fill_manual(values = c(\"learning\" = \"violet\", \"understanding\" = \"purple\", \"joy\" = \"pink\"))) %&gt;% \n  gf_labs(\n    title = \"Plot 4:  Individual Parameters by Day\",\n    subtitle = \"Facet Wrapped\",\n    caption = \"25th October, 2024\"\n  )\n\n\n\n\n\n\n\n\n.\n\n\nInference 4\nWith the most gradual decline being joy and the most ups and downs in understanding, even if their averages are the same, its clear to see that learning was the most consistent (even if it followed similar trends) through the days. Nice!\n.\n.\n\n## Attempting a Bump Chart\n\nggplot(reflection_mod, aes(x = parameter, y = values, color = day, group = day)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(  \"learning\", \"understanding\",\"joy\"),\n    labels = c( \"learning\", \"understanding\",\"joy\" )\n    ) + \n  labs(title = \"Plot 5: Bump Chart Ranked by Parameter\",\n       caption = \"25th October, 2024\",\n       x = \"Parameters\",\n       y = \"Rank\",\n       color = \"\") +\n  scale_color_brewer(palette = \"RdPu\") +\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n.\n\n\nInference 5\nThe graph seems to have completely omitted rankings below 5, as all my rankings were 5 and above. In my experience, this class was above average, on the whole! Perhaps this isn’t the best way to visualize this information, but it clearly sets apart the days with the most difference in ranking across parameter. Day 7, the first day of Stats Theory, must have really taken me by surprise.\n.\n.\n\n## How about the other way?\nggplot(reflection_mod, aes(x = day, y = values, color = parameter, group = parameter)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(\"1\", \"2\",\"3\",\"4\",\"5\",\"7\",\"8\",\"9\",\"10\"),\n    labels = c(\"D1\", \"D2\",\"D3\",\"D4\",\"D5\",\"D7\",\"D8\",\"D9\",\"D10\" )\n    ) + \n  labs(title = \"Plot 6: Bump Chart ranked by Day\",\n       caption = \"25th October, 2024\",\n       x = \"Day\",\n       y = \"Ranks on 10\",\n       color = \"Parameter\") +\n  scale_color_brewer(palette = \"RdPu\")+\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1)) \n\n\n\n\n\n\n\n\n.\n\n\nInference 6\nThe other way in which a Bump Chart can be used for this data, it only confirms what we (I) have understood about myself.\n.\n.\n\n## correlation test for learning and understanding\nmosaic::cor_test(learning ~ understanding, data = reflection) %&gt;%\n  broom::tidy() %&gt;%\n  knitr::kable(\n    digits = 2,\n    caption = \"learning vs understanding\"\n  )\n\n\nlearning vs understanding\n\n\n\n\n\n\n\n\n\n\n\n\nestimate\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.61\n2.06\n0.08\n7\n-0.08\n0.91\nPearson’s product-moment correlation\ntwo.sided\n\n\n\n\n\n.\n\n## plotting correlation\nreflection %&gt;% \n  gf_point(learning ~ understanding) %&gt;%\n  gf_lm(color = \"violet\") %&gt;%\n  gf_labs(title = \"Plot 7: Correlation between understanding and learning\",\n          x = \"understanding\",\n          y = \"learning\")\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_lm()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\n\n\n\n\n.\n\n\nInference 7\nAs seen in the upwards slope of the graph, my learning and understanding have a positive correlation, with an estimate on 0.61. However, the confidence intervals include 0, indicating that it is not a significant correlation. We can’t say for sure if my learning and understanding always depend on each other!\n.\n."
  },
  {
    "objectID": "posts/Final Reflection/index.html#final-reflection",
    "href": "posts/Final Reflection/index.html#final-reflection",
    "title": "And Finally…..",
    "section": "Final (?) Reflection",
    "text": "Final (?) Reflection\nThis week really didn’t feel like the final week of class. Somehow, there is still so much more in the realm of R to be explored – I’m only just realizing that 12 days is barely anything in terms of the learning curve. Apart from R and RStudio, this class has taught me various things.\n.\n\nA blog for the web need not have to be some tediously hand-coded HTML document – the versatility of quarto takes care of all that.\n.\n\n\n\nI think I will also forever look at excel sheets differently; the potential in all those columns and rows for some seriously good art!\n\n.\n\nProviding incentive goes a long way, acting as a catalyst for efficiency in data collection. Even better when the costs are shared, it’s definitely a good investment.\n.\nGood design is informed by solid data. Hypothesis developed from the very same data is often built on pretences. That does not mean the conclusion isn’t credible: oftentimes, hypotheses are made up to be disproved, since doing the opposite isn’t feasible.\n.\n\nSafe to say, this class has also left me with some questions:\n.\n\nEliminating bias in terms of who the data is coming from is done with a coin toss. What about the data itself? How can a researcher account for false statements or partial truths?\n.\nTrust – in both data and research process begs the question of ethics. Collaborative environments are inevitable, and navigating through them is sometimes more complicated than figuring out R. I can account for myself, but what about situations where I make up one of many parts? My group, my class, my institution?\n.\n\nCollecting data ourselves was a lot more fun than I thought it would be. Generally, the thought of approaching random people acts as repellent enough from the task assigned, but just a few interviews in, the chocolates seemed to be performing their magic. It was also comforting to know that it did not matter who I approached – all was decided by the flip of a coin. The coin toss also became this sort of identifier: many guessed with an “Oh, are you in Arvind’s class?” before the question was even asked.\n.\nThis won’t be goodbye, as there’s the whole of A3 to power through and hopefully some online classes as well. Super excited about all the resources I now have, especially those to pore over maps!!"
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "",
    "text": ".\n\nlibrary(tidyverse) # Tidy data processing \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula) # Formula based plots \n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic) # Data inspection and Statistical Inference \n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(broom) # Tidy outputs from Statistical Analyses \nlibrary(infer) # Statistical Inference, Permutation/Bootstrap \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(patchwork) # Arranging Plots \nlibrary(ggprism) # Interesting Categorical Axes \nlibrary(supernova) # Beginner-Friendly ANOVA Tables \n\n\nAttaching package: 'supernova'\n\nThe following object is masked from 'package:scales':\n\n    number\n\nlibrary(skimr) \n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(DT) \nlibrary(DescTools)\n\n\nAttaching package: 'DescTools'\n\nThe following object is masked from 'package:mosaic':\n\n    MAD\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#introduction",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#introduction",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "",
    "text": ".\n\nlibrary(tidyverse) # Tidy data processing \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula) # Formula based plots \n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic) # Data inspection and Statistical Inference \n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(broom) # Tidy outputs from Statistical Analyses \nlibrary(infer) # Statistical Inference, Permutation/Bootstrap \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(patchwork) # Arranging Plots \nlibrary(ggprism) # Interesting Categorical Axes \nlibrary(supernova) # Beginner-Friendly ANOVA Tables \n\n\nAttaching package: 'supernova'\n\nThe following object is masked from 'package:scales':\n\n    number\n\nlibrary(skimr) \n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(DT) \nlibrary(DescTools)\n\n\nAttaching package: 'DescTools'\n\nThe following object is masked from 'package:mosaic':\n\n    MAD\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#reading-data",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#reading-data",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Reading Data",
    "text": "Reading Data\n.\n\nshows &lt;- read_csv(\"../../Data/shows.csv\") \n\nRows: 90 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Participant ID, Gender, Cartoon\ndbl (1): Rating\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshows %&gt;%glimpse()\n\nRows: 90\nColumns: 4\n$ `Participant ID` &lt;chr&gt; \"P1\", \"P2\", \"P3\", \"P4\", \"P5\", \"P6\", \"P7\", \"P8\", \"P9\",…\n$ Gender           &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male…\n$ Cartoon          &lt;chr&gt; \"Chota Bheem\", \"Chota Bheem\", \"Chota Bheem\", \"Chota B…\n$ Rating           &lt;dbl&gt; 8.5, 6.0, 8.0, 7.0, 8.0, 10.0, 5.0, 7.8, 8.5, 5.0, 7.…\n\n\n.\n\ndatatable(shows, options = list(pageLength = 10))\n\n\n\n\n\n.\n\nshows %&gt;%inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1 Participant ID character     90 90       0\n2         Gender character      2 90       0\n3        Cartoon character      3 90       0\n                                   distribution\n1 P1 (1.1%), P10 (1.1%), P11 (1.1%) ...        \n2 Female (50%), Male (50%)                     \n3 Chota Bheem (33.3%), Doraemon (33.3%) ...    \n\nquantitative variables:  \n    name   class min Q1 median Q3 max     mean       sd  n missing\n1 Rating numeric   1  6      7  8  10 7.062222 1.939627 90       0\n\n\n.\n\nshows %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n90\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nParticipant ID\n0\n1\n2\n3\n0\n90\n0\n\n\nGender\n0\n1\n4\n6\n0\n2\n0\n\n\nCartoon\n0\n1\n8\n12\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nRating\n0\n1\n7.06\n1.94\n1\n6\n7\n8\n10\n▁▁▆▇▅\n\n\n\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#examining-data",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#examining-data",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Examining Data",
    "text": "Examining Data\n.\n\n## \nshows %&gt;%  \n  gf_histogram(~Rating,   \n               fill = ~Cartoon,   \n               alpha = 0.5, ) %&gt;%   \n  gf_vline(xintercept = ~ mean(Rating)) %&gt;%   \n  gf_labs(     \n    title = \"Histograms of Rating Distributions vs Cartoon\",     \n    x = \"Rating\",\n    y = \"Count\"   ) %&gt;%   \n  gf_text(7 ~ (mean(Rating) + 2),     \n          label = \"Overall Mean\"   ) %&gt;%   \n  gf_refine(guides(fill = guide_legend(title = \"Ratings\")))\n\n\n\n\n\n\n\n\n.\n\n## \nshows %&gt;%  \n  gf_boxplot(   \n    Rating ~ Cartoon,   \n    fill = ~Cartoon,   \n    alpha = 0.5 ) %&gt;%   \n  gf_vline(xintercept = ~ mean(Rating)) %&gt;%   \n  gf_labs(     \n    title = \"Boxplots of Score Distributions vs Cartoon\",     \n    x = \"Cartoon\", y = \"Score\",     \n    caption = \"Using ggprism\"   ) %&gt;%   \n  gf_refine(     \n    scale_x_discrete(guide = \"prism_bracket\"),     \n    guides(fill = guide_legend(title = \"Score\"))   )\n\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n\n\n\n\n\n\n\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#anova",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#anova",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "ANOVA",
    "text": "ANOVA\n.\nWhy perform ANOVA before checking for its assumptions?\n.\nBecause, it is an exploratory data analysis!!\nAlso, ANOVA is relatively robust to minor violations of assumptions, especially with large, balanced sample sizes. For example:\n\nNormality: With large samples (often n &gt; 30 per group), the Central Limit Theorem suggests that the mean distribution becomes approximately normal, making ANOVA results reasonably accurate.\nHomogeneity of variance: If group sizes are equal or nearly equal, ANOVA can tolerate some differences in variance across groups without severely affecting results.\n\n.\n\nshows_anova &lt;- aov(Rating ~ Cartoon, data = shows)\n\n.\n\n# \nsupernova::pairwise(shows_anova,   \n                    correction = \"Bonferroni\", # Try \"Tukey\" \n                    alpha = 0.05, # 95% CI calculation   \n                    var_equal = TRUE, # We'll see   plot = TRUE \n                    )\n\n\n\n\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n\n\nModel: Rating ~ Cartoon\n\n\nCartoon\n\n\nLevels: 3\n\n\nFamily-wise error-rate: 0.049\n\n\n\n  group_1      group_2      diff pooled_se     t    df  lower upper  p_adj\n  &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 Doraemon     Chota Bheem 0.580     0.354 1.636    87 -0.186 1.346  .3161\n2 Dragon Tales Chota Bheem 0.597     0.354 1.683    87 -0.170 1.363  .2877\n3 Dragon Tales Doraemon    0.017     0.354 0.047    87 -0.750 0.783 1.0000\n\n\n.\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#stating-the-model",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#stating-the-model",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Stating the Model",
    "text": "Stating the Model\n.\n\nsupernova::equation(shows_anova)\n\nFitted equation:\nRating = 6.67 + 0.58*CartoonDoraemon + 0.5966667*CartoonDragon Tales + e\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#checking-anova-assumptions",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#checking-anova-assumptions",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Checking ANOVA Assumptions",
    "text": "Checking ANOVA Assumptions\n.\n\nChecks for Normality\n.\n\nshapiro.test(x = shows$Rating)\n\n\n    Shapiro-Wilk normality test\n\ndata:  shows$Rating\nW = 0.93517, p-value = 0.0002269\n\n\n.\n\nshows %&gt;%   \n  group_by(Cartoon) %&gt;%   \n  group_modify(~ .x %&gt;%     \n                 select(Rating) %&gt;%     \n                 as_vector() %&gt;%     \n                 shapiro.test() %&gt;%     \n                 broom::tidy())\n\n# A tibble: 3 × 4\n# Groups:   Cartoon [3]\n  Cartoon      statistic p.value method                     \n  &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                      \n1 Chota Bheem      0.951  0.185  Shapiro-Wilk normality test\n2 Doraemon         0.909  0.0139 Shapiro-Wilk normality test\n3 Dragon Tales     0.918  0.0240 Shapiro-Wilk normality test\n\n\n.\n\n# \nshows_anova$residuals %&gt;%   \n  as_tibble() %&gt;%   \n  gf_dhistogram(~value, data = .) %&gt;%   \n  gf_fitdistr() \n\n\n\n\n\n\n\n## \nshows_anova$residuals %&gt;%   \n  as_tibble() %&gt;%   \n  gf_qq(~value, data = .) %&gt;%   \n  gf_qqstep() %&gt;%   \n  gf_qqline() \n\n\n\n\n\n\n\n## \nshapiro.test(shows_anova$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  shows_anova$residuals\nW = 0.93926, p-value = 0.0003856\n\n\n.\n\n\nCheck for Similar Variance\n.\n\nshows %&gt;%   \n  group_by(Cartoon) %&gt;%   \n  summarise(variance = var(Rating))  \n\n# A tibble: 3 × 2\n  Cartoon      variance\n  &lt;chr&gt;           &lt;dbl&gt;\n1 Chota Bheem      2.21\n2 Doraemon         5.25\n3 Dragon Tales     3.84\n\n#  \nDescTools::LeveneTest(Rating ~ Cartoon, data = shows) \n\nWarning in LeveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2  1.2923 0.2798\n      87               \n\n## \nfligner.test(Rating ~ Cartoon, data = shows)\n\n\n    Fligner-Killeen test of homogeneity of variances\n\ndata:  Rating by Cartoon\nFligner-Killeen:med chi-squared = 1.8135, df = 2, p-value = 0.4038\n\n\n.\n\n\nIndependent Observations\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#effect-size",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#effect-size",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Effect Size",
    "text": "Effect Size\n.\n\n# \nshows_supernova &lt;-supernova::pairwise(shows_anova,     \n                                      plot = TRUE,     \n                                      alpha = 0.05,     \n                                      correction = \"Bonferroni\"   )\n\n\n\n\n\n\n\n\n.\n\nshows_supernova\n\n\n\n\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n\n\nModel: Rating ~ Cartoon\n\n\nCartoon\n\n\nLevels: 3\n\n\nFamily-wise error-rate: 0.049\n\n\n\n  group_1      group_2      diff pooled_se     t    df  lower upper  p_adj\n  &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 Doraemon     Chota Bheem 0.580     0.354 1.636    87 -0.186 1.346  .3161\n2 Dragon Tales Chota Bheem 0.597     0.354 1.683    87 -0.170 1.363  .2877\n3 Dragon Tales Doraemon    0.017     0.354 0.047    87 -0.750 0.783 1.0000\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#anova-using-permutation-test",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#anova-using-permutation-test",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "ANOVA using Permutation Test",
    "text": "ANOVA using Permutation Test\n.\n\nobserved_infer &lt;-   \n  shows %&gt;%   \n  specify(Rating ~ Cartoon) %&gt;%   \n  hypothesise(null = \"independence\") %&gt;%   \n  calculate(stat = \"F\") \nobserved_infer\n\nResponse: Rating (numeric)\nExplanatory: Cartoon (factor)\nNull Hypothesis: independence\n# A tibble: 1 × 1\n   stat\n  &lt;dbl&gt;\n1 0.919\n\n\n.\n\nnull_dist_infer &lt;- shows %&gt;%   \n  specify(Rating ~ Cartoon) %&gt;%   \n  hypothesise(null = \"independence\") %&gt;%   \ngenerate(reps = 4999, type = \"permute\") %&gt;%   \n  calculate(stat = \"F\") \n## \ndatatable(null_dist_infer, options = list(pageLength = 10))\n\n\n\n\n\n.\n\n## \nnull_dist_infer %&gt;%   \n  visualise(method = \"simulation\") +   \n  shade_p_value(obs_stat = observed_infer$stat, direction = \"right\") +   \n  scale_x_continuous(trans = \"log10\", expand = c(0, 0)) +   \n  coord_cartesian(xlim = c(0.2, 500), clip = \"off\") +   \n  annotation_logticks(outside = FALSE)\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_continuous(trans = \"log10\", expand = c(0, 0)): log-10\ntransformation introduced infinite values.\n\n\n\n\n\n\n\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#conclusion",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#conclusion",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Conclusion",
    "text": "Conclusion"
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "",
    "text": ".\nIn and around SMI campus, a person was found.\nQuestions regarding their preference in food (Non-Veg/Veg) and how much they leave in tips were asked.\nA coin was flipped.\nThere was a 50% chance that that person contributed to this data sample!\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer) \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) \nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(gt)\nlibrary(DT)\n\n."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#introduction",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#introduction",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "",
    "text": ".\nIn and around SMI campus, a person was found.\nQuestions regarding their preference in food (Non-Veg/Veg) and how much they leave in tips were asked.\nA coin was flipped.\nThere was a 50% chance that that person contributed to this data sample!\n.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer) \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) \nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(gt)\nlibrary(DT)\n\n."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#reading-and-examining-data",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#reading-and-examining-data",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Reading and Examining Data",
    "text": "Reading and Examining Data\n.\n\ntips &lt;- read_csv(\"../../Data/tips.csv\")\n\nRows: 60 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Name, Gender, Preference\ndbl (1): Tip\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntips %&gt;% glimpse()\n\nRows: 60\nColumns: 4\n$ Name       &lt;chr&gt; \"Aanya\", \"Adit\", \"Aditi\", \"Akash\", \"Akshita\", \"Anandita\", \"…\n$ Gender     &lt;chr&gt; \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Female\", \"Fe…\n$ Preference &lt;chr&gt; \"Veg\", \"Veg\", \"Veg\", \"Non-veg\", \"Non-veg\", \"Non-veg\", \"Non-…\n$ Tip        &lt;dbl&gt; 0, 0, 20, 0, 0, 0, 20, 35, 40, 0, 0, 0, 0, 0, 0, 0, 20, 0, …\n\n\n.\n\ndatatable(tips, options = list(pageLength = 10))\n\n\n\n\n\n.\n\ntips %&gt;% inspect()\n\n\ncategorical variables:  \n        name     class levels  n missing\n1       Name character     60 60       0\n2     Gender character      2 60       0\n3 Preference character      2 60       0\n                                   distribution\n1 Aanya (1.7%), Adit (1.7%) ...                \n2 Female (50%), Male (50%)                     \n3 Non-veg (50%), Veg (50%)                     \n\nquantitative variables:  \n  name   class min Q1 median Q3 max     mean       sd  n missing\n1  Tip numeric   0  0      0 20 100 11.16667 17.83556 60       0\n\n\n.\n\ntips %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n60\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1\n4\n9\n0\n60\n0\n\n\nGender\n0\n1\n4\n6\n0\n2\n0\n\n\nPreference\n0\n1\n3\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nTip\n0\n1\n11.17\n17.84\n0\n0\n0\n20\n100\n▇▁▁▁▁\n\n\n\n\n\n.\n\nData Dictionary\nThere are 60 rows and 4 columns in this data sample.\n.\n\nName: A qualitative variable indicating the name of each participant\nGender: A qualitative variable indicating the gender of each participant, either male or female. Out of the 60 participants, there are a total of 30 males, 15 of whom prefer Non-Veg and 15 of whom prefer Veg.\nPreference: A qualitative variable that describes the food preference of every participant, either Veg or Non-Veg\nTips: The only quantitative variable in this data sample, describing the value that each participant leaves as a tip.\n\n."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#hypothesis",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#hypothesis",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Hypothesis",
    "text": "Hypothesis\n.\n\nObserved and Test Statistics\n.\n\nobs_diff_tips &lt;- diffmean(Tip ~ Preference, data = tips) \nobs_diff_tips\n\ndiffmean \n2.333333 \n\n\n.\n."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#inference",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#inference",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Inference",
    "text": "Inference\n.\n\nwilcox.test\n.\n\nwilcox.test(Tip ~ Preference, data = tips, \n            conf.int = TRUE, \n            conf.level = 0.95) %&gt;% \n  broom::tidy()\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact confidence intervals with ties\n\n\n# A tibble: 1 × 7\n   estimate statistic p.value   conf.low   conf.high method          alternative\n      &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;      \n1 0.0000372       463   0.833 -0.0000335 0.000000989 Wilcoxon rank … two.sided  \n\n\n.\n\nthe p-value of 0.8327 is greater than that of 0.05, and hence, Case 0, the null hypothesis cannot be rejected.\n\n.\n\n\nLinear Model\n.\n\nlm(rank(Tip) ~ Preference, \n   data = tips) %&gt;% \n  broom::tidy(conf.int = TRUE,\n              conf.level = 0.95)\n\n# A tibble: 2 × 7\n  term          estimate std.error statistic  p.value conf.low conf.high\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)     30.9        2.81    11.0   8.04e-16    25.3      36.6 \n2 PreferenceVeg   -0.867      3.98    -0.218 8.28e- 1    -8.83      7.09\n\n\n.\n\nOnce again here, the p-value of 0.8282 (for PreferenceVeg) is greater than that of 0.05, and hence, Case 0, the null hypothesis cannot be rejected.\n\n.\n\n\nPermutation Test\n.\n\n## taking the test statistic after each shuffle of preference, 4999 times\n\nnull_dist_tips &lt;- \n  do(4999) * diffmean(data = tips, Tip ~ shuffle(Preference))\n##\ndatatable(null_dist_tips, options = list(pageLength = 10))\n\n\n\n\n\n.\n\nnull_dist_tips %&gt;% \n  gf_histogram(~diffmean,\n               bins = 25) %&gt;% \n    gf_vline(xintercept = obs_diff_tips,\n             color = \"red\",\n             linewidth = 1,\n             title = \"Null Distribution by Permutation\",\n             subtitle = \"Histogram\") %&gt;% \n  gf_labs( x = \"Difference in Means\")\n\n\n\n\n\n\n\n##\nnull_dist_tips %&gt;% \ngf_ecdf( ~ diffmean, \n        linewidth = 1) %&gt;%\n  gf_vline(xintercept = obs_diff_tips, \n           colour = \"red\", linewidth = 1,\n           title = \"Null Distribution by Permutation\", \n           subtitle = \"Cumulative Density\") %&gt;% \n  gf_labs(x = \"Difference in Means\")\n\n\n\n\n\n\n\n\n.\n\nThe first graph describes the observed difference in means from the permutation test in comparison the the distribution of the permuted differences. Since the observed difference in means falls within the distribution of permuted means, it suggests that there is not enough evidence to conclude that there is a real difference in the tips that Vegetarians and Non-Vegetarians leave.\nEssentially it means (haha, see what I did there) that the observed difference could have arisen due to random chance under the null hypothesis. It’s not so special!\n\n.\n\nprop1(~ diffmean &lt;= obs_diff_tips, data = null_dist_tips)\n\nprop_TRUE \n   0.6932 \n\n\n.\n\nthe prop1() function calculates the proportion of values in the 4999 permutations that are as much or less than obs_diff_tips = 2.3333. In this case, 69.34% of the permutations are the same or less, suggesting that the null hypothesis might as well be true.\n\n.\n\n\nAll Tests Together\n.\n\nwilcox.test(Tip ~ Preference, data = tips, \n            conf.int = TRUE, \n            conf.level = 0.95) %&gt;% \n  broom::tidy() %&gt;% \n  gt() %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"violet\"), cell_text(weight = \"bold\")),\n    locations = cells_body(columns = p.value)) %&gt;% \n  tab_header(title = \"wilcox.test\")\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact confidence intervals with ties\n\n\n\n\n\n\n\n\nwilcox.test\n\n\nestimate\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n3.723443e-05\n463\n0.8326761\n-3.353485e-05\n9.890472e-07\nWilcoxon rank sum test with continuity correction\ntwo.sided\n\n\n\n\n\n\n## \n\nlm(rank(Tip) ~ Preference, \n   data = tips) %&gt;% \n  broom::tidy(conf.int = TRUE,\n              conf.level = 0.95) %&gt;% \n  gt() %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"violet\"),cell_text(weight = \"bold\")),\n    locations = cells_body(columns = p.value)) %&gt;% \n  tab_header(title = \"Linear Model with Ranked Data\")\n\n\n\n\n\n\n\nLinear Model with Ranked Data\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n30.9333333\n2.811893\n11.0008920\n8.040166e-16\n25.304718\n36.561949\n\n\nPreferenceVeg\n-0.8666667\n3.976617\n-0.2179407\n8.282403e-01\n-8.826731\n7.093398\n\n\n\n\n\n\n\n.\nThis last table highlights the results of the wilcox.test and the linear model by ranks. In both tables, the purple boxes signify the p-values that describe the probability of accepting the null hypothesis - both pretty high in the 80-something percents.\n.\n."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#conclusion",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#conclusion",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Conclusion",
    "text": "Conclusion\nThe null hypothesis rings true! There is no (statistically significant) difference in the means, or rather,\n\nmean(Vegetarian Tips) = mean(Non-Vegetarian Tips)\n\n.\nAnd so,\nFor this data sample that was collected in SMI, that describes how much students categorized as vegetarians and non-vegetarians leave in tips, we can conclude that there is no difference in their tipping habits - i.e, the value of the tip left by a person is not related to if they are vegetarian or non-vegetarian."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#charting-data",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#charting-data",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Charting Data",
    "text": "Charting Data\n.\n\ntips %&gt;%\n  gf_density(\n    ~ Tip,\n    fill = ~ Preference,\n    alpha = 0.5,\n    title = \"Tips Score Densities\",\n    subtitle = \"Veg vs Non-Veg\"\n  )\n\n\n\n\n\n\n\n##\ntips %&gt;%\n  gf_boxplot(\n    Tip ~ Preference,\n    fill = ~ Preference,\n    alpha = 0.5,\n    title = \"Tips Score Box Plots\",\n    subtitle = \"Veg vs Non-Veg\"\n  ) \n\n\n\n\n\n\n\n##\ntips %&gt;% count(Preference)\n\n# A tibble: 2 × 2\n  Preference     n\n  &lt;chr&gt;      &lt;int&gt;\n1 Non-veg       30\n2 Veg           30\n\ntips %&gt;% \n  group_by(Preference) %&gt;% \n  summarise(mean = mean(Tip))\n\n# A tibble: 2 × 2\n  Preference  mean\n  &lt;chr&gt;      &lt;dbl&gt;\n1 Non-veg     10  \n2 Veg         12.3\n\n\n.\n\nThe data has an equal number of Non-Vegetarians and Vegetarians. As the sample sizes are equal, the means of both samples are comparable.\nThe mean value of tips given by Vegetarians (12.33 Rs.) is ever so slightly higher than the mean value of tips given by Non-Vegetarians (10.00Rs)\nThough the density graphs for both groups look quite different the box plots are practically identical. The overlap and peaks of the density graph indicates that both Vegetarians and Non-Vegetarians usually tip in the 0-10 range. It tells us that Non-Vegetarians also have the tendency to tip in the 15-20 range, as there is a peak in the graph there. Both distributions taper off at the 50rs mark, suggesting that neither group tips higher than 60rs. However, the distributions of Vegetarians picks up slightly in the end, suggesting an outlier.\nThe box-plots showcase that both Non-Vegetarians and Vegetarians have similar central tendencies as their medians, inter-quartile ranges and whiskers suggest that both groups have similar tipping ranges excluding outliers. The boxplot also confirms the presence of an outlier at the 100Rs mark in the Vegetarian group. It’s right skew indicated that the mean is bigger than the median, which holds true.\nThis data set is the perfect example of why both box-plots and density graphs are required to completely visualize and represent data. While the box-plot is a great way to view central tendencies at a glance, the distributions presented in the density graphs indicated the nuances of the data that the box-plots may not recognize."
  },
  {
    "objectID": "posts/A3 - Veg vs Non-Veg in Tips/index.html#research-question",
    "href": "posts/A3 - Veg vs Non-Veg in Tips/index.html#research-question",
    "title": "A3 - Veg vs Non-Veg in Tips",
    "section": "Research Question",
    "text": "Research Question\nIs there a difference in the way that Vegetarians and Non-Vegetarians in and around SMI Campus tip?\n\nHypothesis\nCase 0 - Null Hypothesis:\n\nmean(Vegetarian Tips) = mean(Non-Vegetarian Tips)\n\nCase 1:\n\nmean(Vegetarian Tips) ≠ mean(Non-Vegetarian Tips)\n\n.\n\n\nChecking for Normalcy\n\nAre the data distributions normal?\n\n.\n\ntips %&gt;% \n  gf_density( ~ Tip,\n            fill = ~ Preference,\n            alpha = 0.5,\n            title = \"Tips across Veg and Non-Veg\") %&gt;% \n  gf_facet_grid(~Preference) %&gt;% \n  gf_fitdistr(dist = \"dnorm\")\n\n\n\n\n\n\n\n##\n\ntips %&gt;% \n  gf_qqline(~ Tip,\n          color = ~ Preference,\n          title = \"Tips...are they Normally Distributed?\") %&gt;% \n  gf_qq(~ Tip,\n          color = ~ Preference,\n          title = \"Tips...are they Normally Distributed?\") %&gt;% \n  gf_facet_wrap(~ Preference)\n\n\n\n\n\n\n\n##\n\nveg_tips &lt;- tips %&gt;% \n  filter( Preference == \"Veg\") %&gt;% \n  select(Tip)\n##\n\nnon_veg_tips &lt;- tips %&gt;% \n  filter( Preference == \"Non-veg\")\n##\n\n.\n\nIn a Q-Q graph, the x-axis indicates the theoretical distribution of the quantiles if the data was normally distributed around the mean, and the y-axis indicates the actual distribution of the data sample. The dotted slope line provides a reference to check how closely the sample data matches its theoretical distribution.\n\n.\n\nAt a glance the density graphs show that in both groups, the data is quite far from being a normal distribution, as indicated by the black line.\n\n\n\nIn both the Vegetarian and Non-Vegetarian Distributions, it is clear to see that the sample data does not follow the theoretical data. This is a big indicator that the sample data is not normally distributed.\nThe sample data has points plotted primarily at the 0 mark, and next at the 20 mark in both groups, even if the number of points at those levels many vary per group. This graph confirms the inferences from the box plot - the box has a right-skew, with the median at 0. Most data points fall in the lower quartile range, and outliers lie on the upper ranges.\n.\n\n\nshapiro.test(veg_tips$Tip)\n\n\n    Shapiro-Wilk normality test\n\ndata:  veg_tips$Tip\nW = 0.6286, p-value = 1.661e-07\n\nshapiro.test(non_veg_tips$Tip)\n\n\n    Shapiro-Wilk normality test\n\ndata:  non_veg_tips$Tip\nW = 0.71661, p-value = 2.747e-06\n\n\n.\n\nThe value of W calculated by the Shapiro test (always lying between 0-1) doesn’t seem to be high enough to indicate a normal distribution. The p-value, which tells one the chances of a normal distribution are quite low for both groups, confirming the previous inferences.\n\n.\n\n\nChecking for Variance\n\nAre the data variances similar?\n\n.\n\nvar.test(Tip ~ Preference, data = tips, \n         conf.int = TRUE, conf.level = 0.95) %&gt;% \n  broom::tidy()\n\nMultiple parameters; naming those columns num.df, den.df\n\n\n# A tibble: 1 × 9\n  estimate num.df den.df statistic p.value conf.low conf.high method alternative\n     &lt;dbl&gt;  &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      \n1    0.346     29     29     0.346 0.00554    0.165     0.726 F tes… two.sided  \n\n\n.\n\n## checking which group comes first\ntips %&gt;% \n  mutate( Preference = as_factor(Preference))\n\n# A tibble: 60 × 4\n   Name     Gender Preference   Tip\n   &lt;chr&gt;    &lt;chr&gt;  &lt;fct&gt;      &lt;dbl&gt;\n 1 Aanya    Female Veg            0\n 2 Adit     Male   Veg            0\n 3 Aditi    Female Veg           20\n 4 Akash    Male   Non-veg        0\n 5 Akshita  Female Non-veg        0\n 6 Anandita Female Non-veg        0\n 7 Ananya   Female Non-veg       20\n 8 Anaya    Female Veg           35\n 9 Anhuya   Female Veg           40\n10 Ankit    Male   Non-veg        0\n# ℹ 50 more rows\n\n  levels(tips$Preference)\n\nNULL\n\n\n.\n\nThe estimate value of 0.345 indicates that the variance in tips of Non-Vegetarians is around 36.56% of the variance of Vegetarian tips. This means that the variances of both groups are quite different.\nThis is supported by the p-value which tells the chances of similar variance, by testing the null hypothesis. The value provided is quite low, suggesting variances that are not similar.\n\n.\n\n##\nqf(0.345,29,29)\n\n[1] 0.8611538\n\n\n.\n\nAs the value returned by the qf() function is greater than the value of the estimate from the var.test, it means that the Case 0, or the null hypothesis can’t be rejected, i.e, the mean of Vegetarian tips may very well be equal to the mean of the Non-Vegetarian tips.\n\n.\n\n\nObserved and Test Statistics\n\nAs the both groups in data sample are not normally distributed and have significant variance, the parametric t.test cannot be used, and the wilcox.testand linear model with ranked data should be used instead. Finally, a permutation test will also be done.\n\n.\n\n## using the test statistic of difference in means. Is it non zero?\nobs_diff_tips &lt;- diffmean(Tip ~ Preference, data = tips) \nobs_diff_tips\n\ndiffmean \n2.333333 \n\n## yes.\n\n.\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#reading-and-examining-data",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#reading-and-examining-data",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Reading and Examining Data",
    "text": "Reading and Examining Data\n.\n\nshows &lt;- read_csv(\"../../Data/shows.csv\") \n\nRows: 90 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Participant ID, Gender, Cartoon\ndbl (1): Rating\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshows %&gt;%glimpse()\n\nRows: 90\nColumns: 4\n$ `Participant ID` &lt;chr&gt; \"P1\", \"P2\", \"P3\", \"P4\", \"P5\", \"P6\", \"P7\", \"P8\", \"P9\",…\n$ Gender           &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male…\n$ Cartoon          &lt;chr&gt; \"Chota Bheem\", \"Chota Bheem\", \"Chota Bheem\", \"Chota B…\n$ Rating           &lt;dbl&gt; 8.5, 6.0, 8.0, 7.0, 8.0, 10.0, 5.0, 7.8, 8.5, 5.0, 7.…\n\n\n.\n\ndatatable(shows, options = list(pageLength = 10))\n\n\n\n\n\n.\n\nshows %&gt;%inspect()\n\n\ncategorical variables:  \n            name     class levels  n missing\n1 Participant ID character     90 90       0\n2         Gender character      2 90       0\n3        Cartoon character      3 90       0\n                                   distribution\n1 P1 (1.1%), P10 (1.1%), P11 (1.1%) ...        \n2 Female (50%), Male (50%)                     \n3 Chota Bheem (33.3%), Doraemon (33.3%) ...    \n\nquantitative variables:  \n    name   class min Q1 median Q3 max     mean       sd  n missing\n1 Rating numeric   1  6      7  8  10 7.062222 1.939627 90       0\n\n\n.\n\nshows %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n90\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nParticipant ID\n0\n1\n2\n3\n0\n90\n0\n\n\nGender\n0\n1\n4\n6\n0\n2\n0\n\n\nCartoon\n0\n1\n8\n12\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nRating\n0\n1\n7.06\n1.94\n1\n6\n7\n8\n10\n▁▁▆▇▅\n\n\n\n\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#charting-data",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#charting-data",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Charting Data",
    "text": "Charting Data\n.\n\n## \nshows %&gt;% \n  gf_histogram(~Rating,   \n               fill = ~Cartoon,   \n               alpha = 0.4,\n               position = \"identity\") %&gt;%   \n  gf_vline(xintercept = ~ mean(Rating)) %&gt;%   \n  gf_labs(     \n    title = \"Histograms of Rating Distributions vs Cartoon\",     \n    x = \"Rating\",\n    y = \"Count\"   ) %&gt;%   \n  gf_text(7 ~ (mean(Rating) + 2),     \n          label = \"Overall Mean\"   ) %&gt;%   \n  gf_refine(guides(fill = guide_legend(title = \"Ratings\")))\n\n\n\n\n\n\n\n##\nshows %&gt;% \n  gf_histogram(~Rating,   \n               fill = ~Cartoon,   \n               alpha = 0.4,\n               ) %&gt;% \n  gf_facet_wrap(~Cartoon) %&gt;% \n  gf_vline(xintercept = ~ mean(Rating)) %&gt;%   \n  gf_labs(     \n    title = \"Histograms of Rating Distributions vs Cartoon\",     \n    x = \"Rating\",\n    y = \"Count\"   ) %&gt;%   \n  gf_text(7 ~ (mean(Rating) + 2),     \n          label = \"Overall Mean\"   ) %&gt;%   \n  gf_refine(guides(fill = guide_legend(title = \"Ratings\")))\n\n\n\n\n\n\n\n\n.\n\nThe histogram shows significant overlap across all three cartoons in terms of rating. This implies that the shows and ratings do not have much relation or dependancy in this sample.\nThe overall mean lies somewhere around 7, with Doraemon having a mode at the highest values, 8 and 10. There seems to be no ratings at 9. Chhota Bheem ratings mode lies somewhere in the sixes range, the tallest among all three cartoons. The Dragon Tales mode lies with the overall mean.\n\n.\n\n## \nshows %&gt;%  \n  gf_boxplot(   \n    Rating ~ Cartoon,   \n    fill = ~Cartoon,   \n    alpha = 0.5 ) %&gt;%   \n  gf_vline(xintercept = ~ mean(Rating)) %&gt;%   \n  gf_labs(     \n    title = \"Boxplots of Score Distributions vs Cartoon\",     \n    x = \"Cartoon\", y = \"Score\",     \n    caption = \"Using ggprism\"   ) %&gt;%   \n  gf_refine(     \n    scale_x_discrete(guide = \"prism_bracket\"),     \n    guides(fill = guide_legend(title = \"Score\"))   )\n\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n\n\n\n\n\n\n\n\n\n.\n\nThe box-plots have considerable overlap in their interquartile range, confirming the earlier plotted histogram, which shows that viewer ratings are quite similar across all three shows.\nDoreamon is the only box with a negative skew, and also the highest median across all three shows. This means that most of Doreamon’s ratings are clustered above the median, and the lower ratings are dispersed below the median - with an outlier at 2/10.\nChhota Bheem has a larger skew in the positive direction than Dragon Tales, probably due to the outlier at 2/10 in the Dragon Tales Data, signifying that the ratings for Chota bheem are more dispersed above the median value of around 6. Dragon Tales data also has more even looking whiskers, suggesting a uniform distribution.\n\n."
  },
  {
    "objectID": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#research-question",
    "href": "posts/A3 - Chota Bheem vs Doremon vs Dragon Tales/index.html#research-question",
    "title": "A3 - Chhota Bheem vs Doremon vs Dragon Tales",
    "section": "Research Question",
    "text": "Research Question\n.\nBased on the sample data set at hand, how does viewer Ratings vary with Cartoon?\n.\n\nHypothesis\n.\nCase 0: Null Hypothesis\n\nmean(Doraemon) = mean(Chhota Bheem) = mean(Dragon tales)\n\nCase 1:\n\nmean(Doraemon) ≠ mean(Chhota Bheem) = mean(Dragon tales)\n\nCase 2:\n\nmean(Doraemon) = mean(Chhota Bheem) ≠ mean(Dragon tales)\n\nCase 3:\n\nmean(Doraemon) ≠ mean(Chhota Bheem) ≠ mean(Dragon tales)\n\n."
  },
  {
    "objectID": "posts/Online Session 1 - Maps/index.html",
    "href": "posts/Online Session 1 - Maps/index.html",
    "title": "Online Session - Maps",
    "section": "",
    "text": "https://arvindvenkatadri.com/labs/r-for-artists/06-spatial/06-grammar-of-maps\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\nlibrary(osmdata)\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\n\nMoM (kind of): -\n\nWe covered Maps: https://av-quarto.netlify.app/content/courses/analytics/descriptive/modules/90-space/\nFirst going through slides: https://arvindvenkatadri.com/slides/r-for-artists/06-spatial/06-spatial-data-in-r#1\nAnd then replicated code until the “My First Map in R” section: https://arvindvenkatadri.com/labs/r-for-artists/06-spatial/06-grammar-of-maps"
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "",
    "text": ".\n.\n\n\n\nlibrary(tidyverse) \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic) \n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula) \nlibrary(infer)  \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom)  \nlibrary(skimr) \n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(gt) \nlibrary(DT)\n\n."
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html#introduction",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html#introduction",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "",
    "text": ".\n.\n\n\n\nlibrary(tidyverse) \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic) \n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula) \nlibrary(infer)  \n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom)  \nlibrary(skimr) \n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(gt) \nlibrary(DT)\n\n."
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html#reading-and-examining-data",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html#reading-and-examining-data",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "Reading and Examining Data",
    "text": "Reading and Examining Data\n.\n\nspend &lt;- read_csv(\"../../Data/spend.csv\") \n\nRows: 82 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Name, gender\ndbl (2): Sr no, expense\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nspend %&gt;% glimpse()\n\nRows: 82\nColumns: 4\n$ `Sr no` &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n$ Name    &lt;chr&gt; \"Aagam\", \"Aakash\", \"Aarushi\", \"Abheeta\", \"Adithya\", \"Aditya\", …\n$ gender  &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Female\", \"Male\", \"Male\", \"Female\", …\n$ expense &lt;dbl&gt; 150, 240, 382, 60, 68, 300, 270, 190, 300, 0, 250, 85, 700, 14…\n\n\n.\n\ndatatable(spend, options = list(pageLength = 10))\n\n\n\n\n\n.\n\nspend %&gt;% inspect()\n\n\ncategorical variables:  \n    name     class levels  n missing\n1   Name character     82 82       0\n2 gender character      2 82       0\n                                   distribution\n1 Aagam (1.2%), Aakash (1.2%) ...              \n2 Female (50%), Male (50%)                     \n\nquantitative variables:  \n     name   class min     Q1 median     Q3   max     mean         sd  n missing\n1   Sr no numeric   1  21.25   41.5  61.75    82  41.5000   23.81526 82       0\n2 expense numeric   0 100.00  264.5 596.25 13000 720.9634 1835.72169 82       0\n\n\n.\n\nspend %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n82\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1\n3\n12\n0\n82\n0\n\n\ngender\n0\n1\n4\n6\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nSr no\n0\n1\n41.50\n23.82\n1\n21.25\n41.5\n61.75\n82\n▇▇▇▇▇\n\n\nexpense\n0\n1\n720.96\n1835.72\n0\n100.00\n264.5\n596.25\n13000\n▇▁▁▁▁\n\n\n\n\n\n.\n\nData Dictionary\n.\n\n\nResearch Question\n.\n\nspend %&gt;%   \n  gf_density( ~ expense,\n              fill = ~ gender, \n              alpha = 0.5, \n              title = \"spend Score Densities\", \n              subtitle = \"Veg vs Non-Veg\" ) \n\n\n\n\n\n\n\n##\n\nspend %&gt;%   \n  gf_boxplot( expense ~ gender,     \n              fill = ~ gender,     \n              alpha = 0.5,     \n              title = \"Expnses vs Gender\",     \n              subtitle = \"Male vs Female\" )  \n\n\n\n\n\n\n\n## \n\nspend %&gt;%   \n  gf_density( ~ log10(expense),\n              fill = ~ gender, \n              alpha = 0.5, \n              title = \"spend Score Densities\", \n              subtitle = \"Veg vs Non-Veg\" ) \n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n## \n\nspend %&gt;%   \n  gf_boxplot( log10(expense) ~ gender,     \n              fill = ~ gender,     \n              alpha = 0.5,     \n              title = \"Expnses vs Gender\",     \n              subtitle = \"Male vs Female\" )  \n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n##\n\nspend %&gt;% \n  count(gender) \n\n# A tibble: 2 × 2\n  gender     n\n  &lt;chr&gt;  &lt;int&gt;\n1 Female    41\n2 Male      41\n\nspend %&gt;%    \n  group_by(gender) %&gt;%    \n  summarise(mean = mean(expense))\n\n# A tibble: 2 × 2\n  gender  mean\n  &lt;chr&gt;  &lt;dbl&gt;\n1 Female  693.\n2 Male    749.\n\n\n.\n\n\nChecking for Normalcy\n.\n\nspend %&gt;%    \n  gf_density( ~ expense,             \n              fill = ~ gender,             \n              alpha = 0.5,             \n              title = \"Expenses across Male and Female\") %&gt;%    \n  gf_facet_grid(~gender) %&gt;%    \n  gf_fitdistr(dist = \"dnorm\") \n\n\n\n\n\n\n\n## \n\nspend %&gt;%    \n  gf_qqline(~ expense,           \n            color = ~ gender,           \n            title = \"Expenses...are they Normally Distributed?\") \n\n\n\n\n\n\n\n##  \nspend %&gt;%    \n  gf_qq(~ expense,           \n        color = ~ gender,           \n        title = \"Expenses...are they Normally Distributed?\") %&gt;%    \n  gf_facet_wrap(~ gender)\n\n\n\n\n\n\n\n##  \n\nfemale_expenses &lt;- spend %&gt;%    \n  filter( gender == \"Female\") %&gt;%    \n  select(expense) \n##  \nmale_expenses &lt;- spend %&gt;%   \n  filter( gender == \"Male\") %&gt;% \n  select(expense)\n## \n\n##\n##\n\nspend %&gt;%    \n  gf_density( ~ log10(expense),             \n              fill = ~ gender,             \n              alpha = 0.5,             \n              title = \"Expenses across Male and Female\") %&gt;%    \n  gf_facet_grid(~gender) %&gt;%    \n  gf_fitdistr(dist = \"dnorm\") \n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_fitdistr()`).\n\n\n\n\n\n\n\n\n## \n\nspend %&gt;%    \n  gf_qqline(~ log10(expense),           \n            color = ~ gender,           \n            title = \"Expenses...are they Normally Distributed?\") \n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_qq_line()`).\n\n\n\n\n\n\n\n\n##  \nspend %&gt;%    \n  gf_qq(~ log10(expense),           \n        color = ~ gender,           \n        title = \"Expenses...are they Normally Distributed?\") %&gt;%    \n  gf_facet_wrap(~ gender)\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_qq()`).\n\n\n\n\n\n\n\n\n##  \n\n.\n\nshapiro.test(female_expenses$expense)\n\n\n    Shapiro-Wilk normality test\n\ndata:  female_expenses$expense\nW = 0.29606, p-value = 8.961e-13\n\nshapiro.test(male_expenses$expense)\n\n\n    Shapiro-Wilk normality test\n\ndata:  male_expenses$expense\nW = 0.40726, p-value = 1.136e-11\n\n\n.\n.\n\n\nChecking for Variance\n.\n\nvar.test(expense ~ gender, data = spend,           \n         conf.int = TRUE, conf.level = 0.95) %&gt;%    \n  broom::tidy()\n\nMultiple parameters; naming those columns num.df, den.df\n\n\n# A tibble: 1 × 9\n  estimate num.df den.df statistic p.value conf.low conf.high method alternative\n     &lt;dbl&gt;  &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      \n1     1.55     40     40      1.55   0.172    0.825      2.90 F tes… two.sided  \n\n\n.\n\n## \nqf(1.547, 40, 40)\n\nWarning in qf(1.547, 40, 40): NaNs produced\n\n\n[1] NaN\n\n\n.\n."
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html#hypothesis",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html#hypothesis",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "Hypothesis",
    "text": "Hypothesis\n.\n\nObserved and Test Statistics\n.\n\nobs_diff_gender &lt;- diffmean(expense ~ gender, data = spend)  \nobs_diff_gender\n\ndiffmean \n55.29268 \n\n\n.\n."
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html#inference",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html#inference",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "Inference",
    "text": "Inference\n.\n\nwilcox.test\n.\n\nwilcox.test(expense ~ gender, data = spend,              \n            conf.int = TRUE,              \n            conf.level = 0.95) %&gt;%    \n  broom::tidy()\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact confidence intervals with ties\n\n\n# A tibble: 1 × 7\n  estimate statistic p.value conf.low conf.high method               alternative\n     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;      \n1    -55.0      746.   0.381    -180.      70.0 Wilcoxon rank sum t… two.sided  \n\n\n.\n\n\nLinear Model\n.\n\nlm(rank(expense) ~ gender,     \n   data = spend) %&gt;%    \n  broom::tidy(conf.int = TRUE,               \n              conf.level = 0.95)\n\n# A tibble: 2 × 7\n  term        estimate std.error statistic  p.value conf.low conf.high\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)    39.2       3.72    10.5   9.30e-17    31.8       46.6\n2 genderMale      4.63      5.27     0.880 3.81e- 1    -5.84      15.1\n\n\n.\n\n\nPermutation Test\n.\n\nnull_dist_spend &lt;-    \n  do(4999) * diffmean(data = spend, expense ~ shuffle(gender)) \nnull_dist_spend\n\n         diffmean\n1     189.6829268\n2      38.0243902\n3     418.5121951\n4    -708.4146341\n5     441.0000000\n6     301.1463415\n7     606.2682927\n8      62.2682927\n9      50.3658537\n10    -52.9024390\n11    438.6585366\n12    731.1463415\n13    738.4634146\n14   -609.6341463\n15     22.7073171\n16     33.7804878\n17    176.1707317\n18   -422.8048780\n19    249.2439024\n20    687.0000000\n21     83.6829268\n22    -34.0243902\n23     62.0731707\n24   -484.6585366\n25     53.0000000\n26    426.1707317\n27    -94.5121951\n28     29.8780488\n29    -13.2926829\n30    110.0243902\n31    227.9756098\n32    381.7804878\n33   -439.5365854\n34   -334.3170732\n35    250.8536585\n36    451.3414634\n37     68.9024390\n38   -110.2682927\n39   -181.1951220\n40   -375.2926829\n41   -188.1707317\n42   -121.2926829\n43     35.6829268\n44   -175.7804878\n45   -564.1219512\n46    538.5609756\n47     67.8292683\n48   -367.0975610\n49    688.9512195\n50   -128.0731707\n51    218.0243902\n52    289.3902439\n53    422.4146341\n54    628.8536585\n55     47.1951220\n56    384.0243902\n57    628.9024390\n58    354.9512195\n59    254.2682927\n60    556.0731707\n61   -221.9268293\n62     95.0975610\n63    478.1707317\n64    458.9512195\n65     93.7804878\n66    594.3658537\n67    700.0731707\n68   -189.7317073\n69   -124.6585366\n70    -48.1219512\n71   -390.7560976\n72    238.3170732\n73    -99.3414634\n74    580.3170732\n75    409.0487805\n76    334.6585366\n77    569.3902439\n78     -4.1219512\n79    227.0975610\n80    645.7317073\n81   -393.1951220\n82   -638.5609756\n83      2.6097561\n84   -656.1707317\n85    638.2195122\n86   -744.3658537\n87    445.1951220\n88    237.9268293\n89     42.0243902\n90   -203.0000000\n91    512.6097561\n92    629.2926829\n93   -487.9268293\n94    131.9756098\n95     50.1707317\n96   -756.1707317\n97    -71.4878049\n98     86.8536585\n99      3.7804878\n100   179.5365854\n101   654.2682927\n102   603.0487805\n103   590.8048780\n104  -526.1707317\n105  -338.8048780\n106  -419.3902439\n107    34.7560976\n108   335.0975610\n109   533.0975610\n110  -510.7560976\n111  -469.3902439\n112  -163.7317073\n113   281.3902439\n114   621.5365854\n115   473.5853659\n116  -143.4878049\n117  -392.5609756\n118  -511.0487805\n119  -366.2195122\n120   250.7073171\n121   474.6097561\n122   -20.3170732\n123   606.5121951\n124  -255.9756098\n125   -91.0975610\n126   330.2682927\n127   501.0000000\n128  -384.0243902\n129   -26.8536585\n130   201.4390244\n131   315.6829268\n132  -119.4390244\n133  -604.5121951\n134    52.3170732\n135   -90.4146341\n136  -593.8780488\n137   247.1951220\n138  -139.0975610\n139  -500.7560976\n140   117.1951220\n141  -178.3170732\n142  -548.7560976\n143   542.4146341\n144  -615.6829268\n145    75.6829268\n146   612.1707317\n147   611.1951220\n148   273.0487805\n149   -48.5609756\n150  -219.9756098\n151   521.8292683\n152   394.8048780\n153   707.0975610\n154    57.1951220\n155   422.5121951\n156    36.6585366\n157   281.2439024\n158  -478.0243902\n159    29.4878049\n160  -608.3658537\n161   132.8536585\n162  -208.6585366\n163   382.2195122\n164  -230.0731707\n165   860.2195122\n166  -496.8048780\n167  -111.2926829\n168  -354.3658537\n169   505.0975610\n170  -171.6341463\n171  -401.5853659\n172  -557.8780488\n173   630.7560976\n174  -132.9512195\n175   -10.8048780\n176   538.2195122\n177   404.8536585\n178   384.2195122\n179  -157.0000000\n180  -704.5609756\n181   150.2682927\n182   629.6341463\n183  -565.9268293\n184  -601.4390244\n185   539.0000000\n186  -119.0975610\n187  -509.9268293\n188   181.0487805\n189   189.0487805\n190  -680.2195122\n191  -399.7804878\n192  -347.4878049\n193   435.2439024\n194  -633.5365854\n195   690.6585366\n196  -233.5365854\n197   471.8292683\n198  -329.2926829\n199   320.9024390\n200   633.7317073\n201   -92.6097561\n202   487.0000000\n203  -453.7804878\n204    73.2439024\n205  -689.9268293\n206   624.7073171\n207   -63.5365854\n208   666.6097561\n209    89.4878049\n210  -434.9512195\n211   391.7804878\n212  -688.0243902\n213  -463.4390244\n214  -636.4146341\n215  -443.0487805\n216  -712.5121951\n217   -55.7317073\n218  -649.1951220\n219  -386.0243902\n220  -397.2439024\n221  -171.3414634\n222  -142.4634146\n223  -365.3902439\n224  -273.0487805\n225   192.8536585\n226   158.2682927\n227  -391.1463415\n228   229.3902439\n229   -56.0731707\n230   229.8780488\n231   506.0731707\n232   -99.0975610\n233   114.2195122\n234  -441.2439024\n235   -82.1707317\n236    82.8048780\n237  -448.4634146\n238   528.1707317\n239    31.9268293\n240   232.3170732\n241  -352.1219512\n242  -712.2682927\n243   152.9512195\n244   136.2195122\n245   550.4146341\n246    36.2195122\n247    -8.7560976\n248    56.6585366\n249  -257.6829268\n250  -312.5121951\n251  -502.2682927\n252   294.7560976\n253  -596.7560976\n254   522.1707317\n255   561.0487805\n256  -498.1219512\n257    68.9024390\n258   499.2926829\n259  -286.7073171\n260    54.8536585\n261   455.7317073\n262   543.7804878\n263   473.8292683\n264     7.2439024\n265   565.4390244\n266   623.0487805\n267  -425.9268293\n268    36.1219512\n269   -85.9756098\n270   644.8536585\n271   661.6829268\n272  -332.2682927\n273   180.7073171\n274   272.9512195\n275   -88.1707317\n276   328.2195122\n277    13.7317073\n278   349.4390244\n279  -216.9512195\n280  -659.3414634\n281  -494.9024390\n282   654.7073171\n283   111.0975610\n284   572.1707317\n285  -109.9268293\n286  -816.5609756\n287   644.2195122\n288    98.2195122\n289   251.5853659\n290  -705.4878049\n291  -222.1707317\n292    29.0000000\n293   293.3902439\n294  -493.3902439\n295  -685.0975610\n296    96.1219512\n297   -13.3902439\n298   779.6341463\n299  -100.2195122\n300    17.5853659\n301   358.8048780\n302  -445.1463415\n303    61.7317073\n304   604.7560976\n305   324.5121951\n306  -145.5365854\n307   132.7073171\n308   -44.0243902\n309  -329.4390244\n310   514.7073171\n311   719.3414634\n312  -542.8536585\n313   639.6829268\n314   601.5853659\n315  -335.9268293\n316   128.6097561\n317  -275.5853659\n318   639.7317073\n319   550.1707317\n320  -725.3414634\n321   277.4878049\n322  -770.0731707\n323    50.5121951\n324   281.3414634\n325  -267.3414634\n326   220.6585366\n327    32.5121951\n328   460.2682927\n329  -509.4878049\n330   113.7804878\n331   105.3414634\n332   619.8780488\n333   -23.4878049\n334   -96.2682927\n335  -106.2682927\n336   766.3170732\n337   670.1707317\n338   506.7560976\n339  -787.5365854\n340   549.1463415\n341    21.2926829\n342  -270.8536585\n343    91.3902439\n344   -66.3170732\n345  -477.9756098\n346  -776.8536585\n347   -11.3414634\n348  -304.3658537\n349   -53.7804878\n350   -10.9024390\n351  -626.2682927\n352   -39.2439024\n353   -64.4634146\n354   -31.1951220\n355  -497.8780488\n356  -277.9756098\n357   648.7560976\n358    81.9756098\n359   592.4634146\n360   496.0731707\n361  -632.4146341\n362   437.6829268\n363   546.1219512\n364  -372.1707317\n365   150.8536585\n366   721.0000000\n367   -15.1951220\n368  -515.2926829\n369   693.0975610\n370   145.4390244\n371  -636.6097561\n372   349.1463415\n373   -42.9024390\n374  -619.8292683\n375  -527.0975610\n376   554.8048780\n377   395.2439024\n378  -198.4146341\n379  -309.9756098\n380   -63.9756098\n381   -93.6341463\n382  -570.6585366\n383   490.5121951\n384   210.3170732\n385  -494.1219512\n386   494.7560976\n387   418.5121951\n388  -438.5609756\n389  -780.7560976\n390    20.0243902\n391  -245.0975610\n392  -440.7560976\n393  -568.6097561\n394   412.9512195\n395   439.2926829\n396  -199.1463415\n397   762.9024390\n398  -679.8780488\n399  -840.2195122\n400   523.4390244\n401   549.5365854\n402   -42.9024390\n403  -598.3658537\n404   -49.7804878\n405  -661.4390244\n406    10.1707317\n407  -531.7317073\n408  -263.3414634\n409  -633.0975610\n410  -549.0000000\n411    73.5853659\n412   702.4634146\n413    55.4390244\n414  -526.4146341\n415   749.1463415\n416   628.9512195\n417  -418.7560976\n418  -715.5853659\n419   536.0731707\n420  -110.0731707\n421   758.6585366\n422  -182.0731707\n423  -325.0000000\n424  -175.8292683\n425   486.8048780\n426   127.3414634\n427    27.0000000\n428    44.5609756\n429  -315.7804878\n430    91.6829268\n431    33.9268293\n432   459.7804878\n433   127.1463415\n434  -494.4146341\n435  -223.4878049\n436   523.0975610\n437   151.3902439\n438  -558.3170732\n439   -39.4390244\n440   -16.5609756\n441   100.9512195\n442   495.6829268\n443  -456.4634146\n444   503.3902439\n445  -653.9268293\n446  -293.8292683\n447   476.0243902\n448    -9.4878049\n449   404.6585366\n450   562.8536585\n451  -561.3902439\n452   629.2439024\n453    15.4390244\n454  -357.9268293\n455   479.0975610\n456    47.1463415\n457   467.3414634\n458   604.9512195\n459   653.8780488\n460   311.6829268\n461   781.9756098\n462   778.6585366\n463   563.6829268\n464   -59.8292683\n465  -502.5609756\n466   366.8536585\n467   179.4390244\n468   243.4878049\n469  -131.0975610\n470  -601.3414634\n471  -383.6829268\n472  -529.9268293\n473  -221.8780488\n474  -138.5121951\n475  -108.6585366\n476   -94.9512195\n477   578.9024390\n478   719.1951220\n479  -609.7804878\n480  -370.7073171\n481  -534.2195122\n482   496.7073171\n483   -35.7317073\n484   379.2926829\n485   401.4878049\n486   650.4146341\n487   -32.7073171\n488  -652.4634146\n489   206.1707317\n490   621.7317073\n491   709.6341463\n492   201.8780488\n493  -469.0487805\n494  -214.5609756\n495    -6.0243902\n496  -109.2926829\n497    77.6341463\n498   423.8780488\n499  -679.7804878\n500  -200.6097561\n501   538.6097561\n502   710.7073171\n503   129.7317073\n504   481.1951220\n505   164.5121951\n506  -203.4878049\n507    68.8536585\n508  -731.0975610\n509   100.9024390\n510  -687.5853659\n511   390.6585366\n512   680.5121951\n513   614.6585366\n514    33.0975610\n515   -25.2926829\n516  -388.6097561\n517  -473.9268293\n518    20.5609756\n519   125.7804878\n520  -776.6097561\n521   512.5121951\n522   165.4878049\n523  -116.7560976\n524    58.3658537\n525   486.5121951\n526  -142.7560976\n527  -104.6097561\n528   104.2682927\n529  -504.8048780\n530  -407.1951220\n531   856.6097561\n532   -93.0000000\n533  -532.5609756\n534  -165.2926829\n535  -497.0000000\n536    21.1463415\n537   127.9756098\n538  -172.1707317\n539    -5.1951220\n540  -384.9512195\n541   595.7317073\n542   123.1951220\n543   761.8780488\n544  -674.4146341\n545  -241.3902439\n546  -663.0000000\n547  -657.8292683\n548   -25.7804878\n549   524.5121951\n550  -800.2195122\n551  -102.8048780\n552    45.0975610\n553   139.8780488\n554    14.1707317\n555  -152.9512195\n556   621.0000000\n557  -633.4878049\n558  -752.3170732\n559    14.3658537\n560    -9.2439024\n561   428.9512195\n562   147.7317073\n563   347.1463415\n564  -354.9024390\n565   637.0975610\n566  -169.2439024\n567    37.4390244\n568  -580.6097561\n569   153.5365854\n570  -143.2439024\n571   356.4146341\n572   209.0975610\n573   537.2439024\n574   -44.9024390\n575  -639.7804878\n576   -22.0243902\n577   131.2439024\n578    42.4146341\n579   -64.2682927\n580   259.0487805\n581   453.1463415\n582    86.5121951\n583  -653.7804878\n584  -511.4390244\n585   453.5853659\n586    72.7073171\n587  -256.2682927\n588  -599.9756098\n589  -266.9512195\n590   -35.1463415\n591   -98.9512195\n592    -3.1463415\n593  -333.7317073\n594   710.5121951\n595   -83.3414634\n596  -322.8536585\n597   297.2926829\n598   813.1951220\n599  -499.9756098\n600   625.2926829\n601   521.8292683\n602  -113.5853659\n603  -166.2682927\n604   -58.1219512\n605  -762.3658537\n606   -86.4634146\n607   239.4390244\n608   506.4634146\n609   -98.5609756\n610   -31.9756098\n611  -482.9512195\n612   200.6585366\n613   424.0243902\n614   437.4390244\n615  -548.1707317\n616   524.5121951\n617   552.4634146\n618  -112.3658537\n619    37.5365854\n620   -74.4634146\n621  -126.2195122\n622    85.2439024\n623  -438.3658537\n624  -824.0731707\n625   -92.1707317\n626  -376.3170732\n627   276.1707317\n628  -516.7073171\n629    48.5609756\n630  -799.2926829\n631   -28.9024390\n632   -92.6097561\n633  -580.0731707\n634   618.3658537\n635   403.9756098\n636  -166.8536585\n637   -38.9512195\n638  -679.7804878\n639  -361.0000000\n640  -596.8048780\n641   629.8780488\n642   430.6097561\n643   128.7073171\n644   446.4146341\n645  -175.7804878\n646   132.3170732\n647   305.0000000\n648  -387.8780488\n649   323.6341463\n650  -391.7804878\n651   199.0000000\n652     6.6097561\n653   199.5853659\n654   296.1219512\n655   126.9024390\n656   -13.5853659\n657   133.0487805\n658  -183.7804878\n659   703.6341463\n660   176.4634146\n661  -482.4146341\n662   517.4390244\n663  -261.9756098\n664   -50.5121951\n665  -669.1951220\n666   414.2195122\n667    14.0731707\n668  -642.8536585\n669  -161.1463415\n670  -412.9024390\n671   198.9512195\n672    83.6341463\n673  -769.8292683\n674    22.9512195\n675   197.8780488\n676   412.7073171\n677   390.7560976\n678    83.0487805\n679   708.9024390\n680  -173.0975610\n681     6.7560976\n682   609.3902439\n683  -302.3170732\n684   -64.9024390\n685   672.9024390\n686  -499.2439024\n687   655.1951220\n688  -106.9024390\n689   350.6585366\n690    43.3414634\n691   117.9756098\n692    23.0975610\n693   -80.3170732\n694   514.7073171\n695   686.8048780\n696  -156.3658537\n697    64.6097561\n698   127.5853659\n699   507.0487805\n700   606.9512195\n701   534.5609756\n702  -264.3170732\n703   -38.6585366\n704   129.1951220\n705   495.4878049\n706   605.8780488\n707  -437.2926829\n708   572.6097561\n709  -626.4146341\n710   171.5365854\n711  -446.9024390\n712   156.6585366\n713   -44.5121951\n714   376.3170732\n715  -562.8536585\n716  -729.8780488\n717   302.5609756\n718  -513.3414634\n719   303.3414634\n720   462.5609756\n721  -551.4878049\n722   537.3902439\n723   584.3170732\n724  -167.6829268\n725    41.4390244\n726   411.5853659\n727   183.2439024\n728   802.8536585\n729  -395.1463415\n730   458.0731707\n731  -483.2926829\n732   -69.6341463\n733   181.0000000\n734    68.0243902\n735   401.5365854\n736    -6.1219512\n737   119.3902439\n738   127.5853659\n739  -204.0243902\n740   131.9268293\n741   531.5853659\n742   -85.8780488\n743   677.1463415\n744  -561.1463415\n745   283.2926829\n746   -30.7560976\n747   -63.4390244\n748   473.3414634\n749  -573.8780488\n750  -282.6097561\n751   582.5121951\n752   597.2439024\n753  -148.7073171\n754   554.0243902\n755   236.5121951\n756   411.3902439\n757    93.6341463\n758  -143.1951220\n759   603.8292683\n760   -31.3902439\n761   568.1219512\n762  -428.8048780\n763  -602.5121951\n764  -476.2195122\n765   133.7804878\n766     8.0243902\n767  -138.6097561\n768   507.5853659\n769   -99.1951220\n770  -442.9024390\n771   -11.4878049\n772   802.0243902\n773   133.8780488\n774    32.0243902\n775  -297.0487805\n776    68.0731707\n777   657.8780488\n778   -21.0487805\n779   295.3902439\n780    57.0000000\n781   357.3902439\n782   461.2439024\n783   -68.9024390\n784  -409.4878049\n785  -586.1707317\n786  -363.9268293\n787   571.8292683\n788  -339.7804878\n789   -72.6097561\n790  -201.2926829\n791    52.6585366\n792  -124.7073171\n793   811.7317073\n794    34.1219512\n795  -363.4390244\n796  -356.5121951\n797  -355.0975610\n798  -168.9512195\n799  -110.2682927\n800   -37.4390244\n801   -43.1951220\n802  -364.6585366\n803   235.2439024\n804   630.6097561\n805   614.7073171\n806   646.8536585\n807   517.8292683\n808   651.6341463\n809   349.5853659\n810   382.6585366\n811  -654.4634146\n812    -4.2195122\n813   404.1707317\n814   442.1707317\n815   405.4390244\n816  -237.4878049\n817    56.9512195\n818   176.6097561\n819    40.5609756\n820  -409.0000000\n821  -105.9268293\n822  -677.5365854\n823   217.4390244\n824  -493.1463415\n825  -117.8780488\n826   -33.1463415\n827  -156.5609756\n828   294.8048780\n829  -737.2439024\n830  -193.4390244\n831  -140.6097561\n832   672.6097561\n833  -638.6585366\n834  -703.7804878\n835   740.8048780\n836   275.4878049\n837  -319.3902439\n838  -186.1707317\n839  -249.4878049\n840   -55.9268293\n841   184.5609756\n842  -157.8292683\n843   280.4146341\n844   173.7317073\n845   589.5853659\n846   603.2926829\n847   444.3658537\n848   456.6585366\n849    37.5365854\n850   181.6341463\n851  -114.7560976\n852  -611.9756098\n853  -663.9756098\n854    21.6341463\n855   471.4878049\n856   451.8292683\n857  -121.2439024\n858   124.2682927\n859   197.9756098\n860   145.1463415\n861   -87.4878049\n862  -295.0975610\n863   569.6341463\n864   570.5609756\n865  -836.5609756\n866   -75.4390244\n867   100.5609756\n868   588.6097561\n869  -543.0975610\n870   469.3414634\n871    28.1707317\n872  -538.2195122\n873  -308.7073171\n874   520.1707317\n875   647.7804878\n876   679.4390244\n877  -412.4634146\n878  -316.0243902\n879  -329.4878049\n880  -118.0731707\n881  -435.7317073\n882   555.7804878\n883   198.6585366\n884   341.3414634\n885  -641.0975610\n886    58.9512195\n887  -140.2195122\n888   -32.5609756\n889  -470.9512195\n890  -242.3658537\n891   557.6341463\n892   -81.5365854\n893    20.5121951\n894    66.5121951\n895   -97.0487805\n896  -488.9024390\n897   628.1219512\n898   643.5365854\n899  -194.8536585\n900   198.9024390\n901    62.3658537\n902  -254.5121951\n903   524.8536585\n904  -207.0975610\n905   644.3170732\n906   542.4634146\n907  -225.4878049\n908   540.8536585\n909   283.0975610\n910  -549.1463415\n911  -676.1219512\n912   652.1219512\n913  -561.0000000\n914  -671.7804878\n915   584.7560976\n916  -292.1219512\n917    94.7073171\n918   189.0975610\n919   493.5365854\n920  -115.0487805\n921   721.1951220\n922  -416.5609756\n923  -174.9512195\n924   379.3902439\n925   620.0243902\n926   396.9024390\n927   158.4634146\n928    11.3414634\n929   738.4634146\n930   -98.4146341\n931   498.9512195\n932  -507.6829268\n933  -743.8780488\n934   -77.0487805\n935   346.6585366\n936   156.2682927\n937   413.8780488\n938     4.1707317\n939   142.3170732\n940  -409.1951220\n941  -156.3658537\n942   459.9268293\n943   357.2926829\n944  -620.4146341\n945  -727.1463415\n946  -286.3170732\n947  -181.7317073\n948   141.5853659\n949  -415.2439024\n950    10.5121951\n951  -302.3170732\n952   450.3170732\n953   251.7804878\n954   534.7073171\n955    45.7804878\n956   -79.5365854\n957   -44.2682927\n958  -164.2195122\n959  -538.0731707\n960   676.5121951\n961   639.2439024\n962   243.1951220\n963   458.2682927\n964   -41.0000000\n965  -605.3902439\n966  -696.3170732\n967   619.8292683\n968     4.6585366\n969     3.4878049\n970  -460.6585366\n971  -685.9756098\n972   563.4878049\n973    92.2195122\n974    -4.4634146\n975    34.8048780\n976    -3.4390244\n977  -284.3170732\n978  -646.2195122\n979  -418.0243902\n980  -599.4878049\n981  -116.5121951\n982  -597.4878049\n983  -678.8048780\n984  -419.6341463\n985  -132.8536585\n986  -539.0975610\n987   -23.1463415\n988   114.9024390\n989   113.4878049\n990    -4.9512195\n991  -692.5609756\n992   389.1951220\n993  -506.3658537\n994   172.6097561\n995  -234.3658537\n996   -25.9756098\n997  -553.2926829\n998   -53.0487805\n999  -663.0000000\n1000  291.1951220\n1001  105.0975610\n1002 -802.8048780\n1003  241.7804878\n1004 -753.7317073\n1005 -785.9268293\n1006 -630.1707317\n1007 -133.9268293\n1008  -57.6341463\n1009  -95.8292683\n1010 -504.1707317\n1011  564.9512195\n1012 -249.9756098\n1013  290.2195122\n1014  -92.5609756\n1015 -131.6829268\n1016  -71.1463415\n1017  -46.1219512\n1018 -651.2926829\n1019  -64.7073171\n1020  -96.1219512\n1021 -110.1707317\n1022  107.4878049\n1023  306.4634146\n1024  558.1707317\n1025 -540.2195122\n1026   66.5609756\n1027 -566.6585366\n1028    7.7804878\n1029  176.5121951\n1030  185.1463415\n1031 -644.2195122\n1032  149.3414634\n1033 -627.9756098\n1034 -641.5853659\n1035  356.4146341\n1036 -446.5121951\n1037  -36.7073171\n1038 -369.2926829\n1039  -20.9512195\n1040  579.2926829\n1041  640.4146341\n1042  100.6097561\n1043   83.4390244\n1044  122.3170732\n1045  181.1951220\n1046  672.6097561\n1047 -624.2682927\n1048  570.1219512\n1049   73.5365854\n1050  492.3170732\n1051 -498.0243902\n1052  -92.6585366\n1053  114.9024390\n1054  226.0243902\n1055 -114.7560976\n1056  619.0000000\n1057 -116.8048780\n1058 -239.3902439\n1059 -149.3414634\n1060  620.6585366\n1061   64.0243902\n1062  -70.5121951\n1063 -242.9512195\n1064  -21.6829268\n1065  655.2439024\n1066 -172.2195122\n1067  594.4146341\n1068  591.0487805\n1069  571.1951220\n1070   -1.7804878\n1071 -428.8048780\n1072  555.7317073\n1073   90.0243902\n1074 -398.8048780\n1075  410.8536585\n1076  576.1707317\n1077 -127.5365854\n1078  317.6829268\n1079  194.1707317\n1080  -58.7560976\n1081  -42.3170732\n1082    0.4634146\n1083 -178.8048780\n1084  781.9268293\n1085  496.3170732\n1086  122.0243902\n1087  403.9268293\n1088   47.9268293\n1089 -348.6585366\n1090  640.0243902\n1091  381.7317073\n1092 -758.7560976\n1093 -529.6829268\n1094   31.2439024\n1095  463.6829268\n1096  111.1463415\n1097  136.8536585\n1098  114.3658537\n1099  147.3902439\n1100  738.1707317\n1101  -28.9024390\n1102   56.8536585\n1103   47.1463415\n1104  202.5609756\n1105 -137.8292683\n1106  706.8536585\n1107   -6.0731707\n1108 -399.8780488\n1109  212.7073171\n1110 -573.2439024\n1111   17.7317073\n1112  811.2926829\n1113  490.0731707\n1114 -271.6829268\n1115 -795.3902439\n1116 -608.1219512\n1117 -512.8536585\n1118  140.1707317\n1119 -386.1707317\n1120  365.0487805\n1121  -98.8536585\n1122  736.1707317\n1123  -21.3902439\n1124  217.6341463\n1125 -730.6585366\n1126 -491.7317073\n1127  -50.5121951\n1128 -567.1951220\n1129  -55.3414634\n1130  -68.7560976\n1131  669.8292683\n1132 -305.5365854\n1133  605.2439024\n1134   82.6585366\n1135 -495.3414634\n1136   34.9512195\n1137  273.3414634\n1138   54.1707317\n1139  -42.4634146\n1140 -393.3414634\n1141 -407.1951220\n1142  226.0243902\n1143    3.7804878\n1144 -403.6829268\n1145 -385.5853659\n1146   92.5121951\n1147 -211.6341463\n1148 -507.0000000\n1149 -480.9512195\n1150 -475.4878049\n1151  443.1463415\n1152  409.1951220\n1153  796.7073171\n1154  127.2926829\n1155  129.0975610\n1156 -201.9268293\n1157  -14.4634146\n1158 -144.2682927\n1159  187.2926829\n1160 -187.5365854\n1161  124.8536585\n1162 -232.8536585\n1163 -366.9512195\n1164 -639.9268293\n1165  583.5853659\n1166  522.3170732\n1167 -630.5121951\n1168 -332.5121951\n1169  -60.4634146\n1170  152.1219512\n1171  693.5365854\n1172  -89.7804878\n1173 -551.8292683\n1174  -13.1463415\n1175 -408.0243902\n1176    5.9268293\n1177  236.4146341\n1178 -186.1707317\n1179  508.2195122\n1180 -394.9024390\n1181 -552.6097561\n1182  253.1463415\n1183  457.7317073\n1184  620.7560976\n1185 -451.4878049\n1186 -215.5365854\n1187  262.8048780\n1188   56.2682927\n1189   48.0243902\n1190  -13.5365854\n1191   -1.3414634\n1192  -85.0000000\n1193  602.5609756\n1194  433.2926829\n1195 -698.0243902\n1196  237.8292683\n1197 -197.4878049\n1198 -627.5853659\n1199 -109.3902439\n1200  204.5609756\n1201  572.9512195\n1202  153.1951220\n1203  123.5365854\n1204  104.5609756\n1205 -217.1463415\n1206  610.4634146\n1207 -546.3170732\n1208  151.7804878\n1209  572.6585366\n1210  127.1463415\n1211 -546.4146341\n1212 -287.0487805\n1213   56.2195122\n1214  268.7073171\n1215  -28.3658537\n1216 -191.0975610\n1217    2.0243902\n1218   28.7560976\n1219 -478.2195122\n1220  629.9268293\n1221 -557.9268293\n1222  146.6097561\n1223  805.7804878\n1224 -562.6585366\n1225 -585.9268293\n1226 -654.5121951\n1227   32.0243902\n1228  563.7804878\n1229 -358.6097561\n1230 -721.6341463\n1231  393.8780488\n1232 -307.6341463\n1233  109.7804878\n1234 -169.2439024\n1235 -460.4634146\n1236  406.0243902\n1237 -887.0000000\n1238  162.6585366\n1239  670.4634146\n1240 -168.3658537\n1241  174.6585366\n1242  108.8536585\n1243 -211.4878049\n1244  377.6829268\n1245  -81.1463415\n1246  600.9024390\n1247  611.3414634\n1248 -159.3902439\n1249  211.5853659\n1250 -241.3414634\n1251  -80.8048780\n1252  183.8292683\n1253  461.3414634\n1254   -1.7804878\n1255 -823.5853659\n1256   66.6097561\n1257  -83.4878049\n1258   39.2926829\n1259  184.9024390\n1260  124.6097561\n1261  707.0000000\n1262  156.7560976\n1263 -550.4634146\n1264   11.7804878\n1265  362.0731707\n1266  296.8048780\n1267   25.1463415\n1268 -153.5853659\n1269 -499.1951220\n1270   79.7317073\n1271  517.8780488\n1272   53.8292683\n1273  232.8536585\n1274  691.8292683\n1275 -604.0731707\n1276  244.0731707\n1277 -531.8780488\n1278 -863.8780488\n1279  235.0000000\n1280 -175.0000000\n1281   13.6829268\n1282  286.0243902\n1283 -632.1707317\n1284  388.3658537\n1285 -286.8048780\n1286 -617.9756098\n1287  810.7560976\n1288  411.0487805\n1289 -148.4634146\n1290  371.9756098\n1291 -500.2682927\n1292  448.6585366\n1293 -271.8780488\n1294 -678.2195122\n1295  504.0731707\n1296  718.7073171\n1297  -29.5853659\n1298  -38.0731707\n1299 -127.7804878\n1300 -130.3658537\n1301 -153.0975610\n1302  -64.9024390\n1303 -239.8292683\n1304 -345.0000000\n1305 -100.9512195\n1306 -385.1463415\n1307  -26.6097561\n1308  511.5853659\n1309   29.4878049\n1310  290.1707317\n1311  578.4146341\n1312  188.1219512\n1313  539.5365854\n1314  839.9756098\n1315   97.0975610\n1316 -358.2682927\n1317  551.3414634\n1318  285.1463415\n1319  143.9756098\n1320  365.1951220\n1321  544.6585366\n1322  432.8536585\n1323   -3.7317073\n1324  233.0487805\n1325  635.7804878\n1326  460.2682927\n1327   59.5365854\n1328  424.8536585\n1329 -354.9024390\n1330  590.8048780\n1331  447.7804878\n1332 -322.6585366\n1333  713.9756098\n1334 -423.5853659\n1335   27.0487805\n1336  486.4634146\n1337 -157.6829268\n1338   35.3902439\n1339  387.0975610\n1340 -155.4390244\n1341  -62.1707317\n1342 -124.9512195\n1343  -50.0731707\n1344 -138.0731707\n1345 -329.0975610\n1346  626.0243902\n1347 -669.4390244\n1348  159.3414634\n1349  475.9268293\n1350 -582.4634146\n1351  -35.2926829\n1352 -104.5609756\n1353 -476.9512195\n1354  527.5853659\n1355 -276.5121951\n1356  446.2195122\n1357  -79.7804878\n1358  377.8292683\n1359  376.8048780\n1360  494.2682927\n1361 -618.7073171\n1362 -239.5365854\n1363 -161.7804878\n1364  843.5365854\n1365 -599.2926829\n1366 -213.8292683\n1367  495.3902439\n1368 -314.7560976\n1369  710.1707317\n1370  -62.0243902\n1371 -384.6585366\n1372   40.8536585\n1373  423.8292683\n1374  218.1707317\n1375  -42.2195122\n1376 -528.4146341\n1377 -653.1951220\n1378   41.4390244\n1379 -185.8292683\n1380  104.9512195\n1381  203.3414634\n1382 -572.0243902\n1383   90.7073171\n1384  -82.9512195\n1385 -150.1219512\n1386 -361.0000000\n1387   70.3658537\n1388 -779.0975610\n1389  748.3170732\n1390  268.1219512\n1391 -524.9512195\n1392  708.0243902\n1393 -161.0000000\n1394 -795.6829268\n1395  482.7073171\n1396 -314.4634146\n1397  701.0000000\n1398 -719.6341463\n1399 -707.1463415\n1400  423.0000000\n1401   92.0731707\n1402 -693.6341463\n1403  534.6097561\n1404  126.9512195\n1405 -256.3170732\n1406  694.2195122\n1407 -619.4878049\n1408  242.5609756\n1409   18.5609756\n1410 -661.6829268\n1411 -100.6585366\n1412 -187.7317073\n1413  456.3170732\n1414  233.9268293\n1415  644.6585366\n1416  680.3658537\n1417  111.0487805\n1418  671.2926829\n1419  -33.8292683\n1420  667.9268293\n1421 -437.6829268\n1422  548.6097561\n1423   88.8536585\n1424 -539.1951220\n1425 -218.9512195\n1426 -112.9512195\n1427  234.7560976\n1428  -35.9268293\n1429  494.0243902\n1430 -431.4878049\n1431 -133.5365854\n1432  191.1951220\n1433  146.9512195\n1434  533.1463415\n1435 -656.4634146\n1436   90.8048780\n1437 -445.0000000\n1438   65.0487805\n1439  462.7560976\n1440 -563.5365854\n1441 -722.8048780\n1442  739.3414634\n1443  219.1951220\n1444 -384.8048780\n1445 -159.3414634\n1446 -508.2195122\n1447 -487.6341463\n1448 -630.6097561\n1449  -38.9024390\n1450   95.3414634\n1451    9.2926829\n1452 -484.1219512\n1453  -89.0000000\n1454  533.3902439\n1455 -551.2926829\n1456 -672.6585366\n1457  -54.2682927\n1458   14.4146341\n1459   64.0731707\n1460  358.0731707\n1461  443.6341463\n1462   88.6097561\n1463 -621.7804878\n1464  379.0487805\n1465  425.4390244\n1466  513.2439024\n1467   40.1707317\n1468  135.7804878\n1469  -88.5609756\n1470  -66.9024390\n1471   76.5121951\n1472   51.8292683\n1473  506.4634146\n1474  497.9756098\n1475 -636.7560976\n1476  435.0000000\n1477 -214.2195122\n1478   52.7073171\n1479  -82.6097561\n1480  273.2439024\n1481  434.8536585\n1482 -534.5121951\n1483  431.1951220\n1484   -1.1951220\n1485  389.0487805\n1486  550.0243902\n1487  233.2926829\n1488  109.6341463\n1489   -9.4390244\n1490   76.0243902\n1491  218.1707317\n1492  728.1707317\n1493  360.7073171\n1494  448.9512195\n1495  -48.7560976\n1496  -98.2682927\n1497 -518.7073171\n1498  665.0487805\n1499  -55.1951220\n1500  482.7560976\n1501  203.9756098\n1502 -709.4878049\n1503   99.0000000\n1504  137.5853659\n1505 -252.7073171\n1506  615.2926829\n1507 -378.7560976\n1508  232.6585366\n1509  -13.8780488\n1510  118.8048780\n1511  224.3658537\n1512  -31.2439024\n1513 -572.1219512\n1514  -25.9268293\n1515  341.0487805\n1516 -134.8536585\n1517   69.9756098\n1518  720.9512195\n1519 -730.7073171\n1520   87.8780488\n1521  -58.1707317\n1522 -196.7073171\n1523    3.5853659\n1524  164.8536585\n1525   15.3414634\n1526  491.0975610\n1527  368.6585366\n1528   85.0487805\n1529 -186.3658537\n1530  287.3414634\n1531 -262.5609756\n1532 -463.3414634\n1533  228.5121951\n1534  129.7804878\n1535  587.0975610\n1536  265.0000000\n1537  131.8780488\n1538  -80.1707317\n1539 -704.0243902\n1540  178.5609756\n1541  306.7073171\n1542 -147.5853659\n1543  393.1463415\n1544  546.4634146\n1545  137.0000000\n1546  -66.9024390\n1547   36.6097561\n1548 -476.4634146\n1549 -162.2195122\n1550 -103.6829268\n1551   58.6585366\n1552  671.2926829\n1553 -107.5365854\n1554  -82.9024390\n1555 -467.5365854\n1556  642.0243902\n1557   76.7560976\n1558 -770.6097561\n1559  -68.2682927\n1560   23.9756098\n1561  -85.3902439\n1562   72.7560976\n1563  555.9268293\n1564  555.7317073\n1565  -89.4390244\n1566 -178.9512195\n1567 -612.8048780\n1568  181.1463415\n1569 -432.1219512\n1570  749.8292683\n1571  164.7560976\n1572   79.4878049\n1573  262.3658537\n1574  186.6097561\n1575  -18.0243902\n1576  127.4390244\n1577  517.5365854\n1578  -32.5609756\n1579  -34.2682927\n1580 -590.2682927\n1581   97.5853659\n1582 -539.9756098\n1583 -583.9756098\n1584 -234.1707317\n1585 -754.4146341\n1586 -437.6829268\n1587  169.2439024\n1588  357.9268293\n1589 -105.0487805\n1590 -537.8780488\n1591  -37.2439024\n1592 -551.4390244\n1593 -576.9512195\n1594  -43.0975610\n1595  476.9512195\n1596  404.8536585\n1597  576.6585366\n1598  324.1707317\n1599    2.4634146\n1600  114.9512195\n1601 -299.5365854\n1602  250.1219512\n1603 -132.6585366\n1604  655.7317073\n1605   -9.5365854\n1606 -115.3902439\n1607 -593.0000000\n1608 -547.5853659\n1609   28.4634146\n1610  425.4390244\n1611  210.2195122\n1612 -562.4634146\n1613  150.1707317\n1614  186.3170732\n1615  220.1219512\n1616 -604.4146341\n1617  161.3414634\n1618 -596.5609756\n1619   58.1219512\n1620  473.5365854\n1621  143.0000000\n1622 -650.8536585\n1623    9.0000000\n1624 -478.2195122\n1625  -45.3414634\n1626   22.2195122\n1627   90.6097561\n1628  390.5121951\n1629  539.9268293\n1630 -136.9024390\n1631 -542.1707317\n1632  336.7560976\n1633 -648.1219512\n1634 -444.3658537\n1635 -219.4390244\n1636  552.1219512\n1637  335.1463415\n1638  -64.6097561\n1639  283.2439024\n1640  -22.6097561\n1641  125.2439024\n1642 -151.9756098\n1643 -713.3414634\n1644 -780.2195122\n1645 -633.4390244\n1646  140.7073171\n1647 -494.3170732\n1648  447.2439024\n1649 -758.1219512\n1650 -656.4634146\n1651 -454.6097561\n1652  418.1707317\n1653  147.5853659\n1654  338.8536585\n1655  721.3414634\n1656   47.1463415\n1657    0.7560976\n1658   40.1707317\n1659 -234.2682927\n1660 -309.7804878\n1661  692.6585366\n1662 -363.7317073\n1663   30.6097561\n1664  503.5365854\n1665  -44.5121951\n1666   94.2682927\n1667  547.9756098\n1668  271.4390244\n1669 -316.6097561\n1670 -314.9512195\n1671 -116.9512195\n1672 -598.3658537\n1673  186.7560976\n1674 -543.5365854\n1675   44.2195122\n1676  149.2439024\n1677  -53.7317073\n1678 -540.2195122\n1679   84.7560976\n1680   83.7804878\n1681  520.7073171\n1682 -131.3414634\n1683 -325.6829268\n1684 -379.6341463\n1685  108.5609756\n1686  469.2926829\n1687 -640.9024390\n1688  700.2195122\n1689   26.2682927\n1690  136.5609756\n1691  492.2682927\n1692   -6.4634146\n1693 -504.3658537\n1694 -465.4878049\n1695  678.4146341\n1696 -439.3414634\n1697 -216.9512195\n1698  583.7317073\n1699  196.4634146\n1700  104.5609756\n1701 -629.0000000\n1702 -117.8780488\n1703  119.8780488\n1704  -81.7804878\n1705   99.7317073\n1706  793.3414634\n1707  -70.4634146\n1708  -32.3658537\n1709   64.5609756\n1710   14.0243902\n1711 -751.4390244\n1712 -425.2926829\n1713   37.6829268\n1714 -141.9268293\n1715    4.2195122\n1716   25.7804878\n1717  721.6341463\n1718  679.4390244\n1719  264.3170732\n1720   83.6341463\n1721 -235.6341463\n1722  704.0243902\n1723 -145.2926829\n1724 -192.6585366\n1725 -489.3902439\n1726  555.0975610\n1727 -139.0975610\n1728 -473.3414634\n1729  515.3902439\n1730  -96.2682927\n1731   26.9512195\n1732   25.8292683\n1733   35.2439024\n1734    7.5365854\n1735  252.4634146\n1736 -444.1219512\n1737  -19.2926829\n1738    5.1463415\n1739  680.1219512\n1740  575.0487805\n1741   22.1219512\n1742  684.1707317\n1743  716.1707317\n1744  132.8536585\n1745 -417.1951220\n1746   18.4146341\n1747  -27.5365854\n1748 -297.2926829\n1749 -166.4146341\n1750  558.1707317\n1751  675.1951220\n1752 -409.9756098\n1753  282.7073171\n1754 -555.0000000\n1755  -17.4390244\n1756   36.7560976\n1757  120.4146341\n1758  508.9512195\n1759 -351.4878049\n1760   65.8780488\n1761 -106.4146341\n1762 -317.1951220\n1763 -604.3170732\n1764  313.0000000\n1765  -30.9512195\n1766 -218.7073171\n1767  -34.7073171\n1768   78.9512195\n1769  374.8536585\n1770  506.9512195\n1771 -487.0487805\n1772  533.9268293\n1773  703.4390244\n1774 -571.2926829\n1775   15.9268293\n1776 -368.9512195\n1777    8.7560976\n1778  722.9024390\n1779 -123.3902439\n1780 -505.5365854\n1781 -537.4878049\n1782 -166.3170732\n1783  -56.8536585\n1784 -233.7317073\n1785 -607.6341463\n1786 -460.0243902\n1787  264.7560976\n1788 -474.9024390\n1789 -542.5609756\n1790  216.4146341\n1791  -52.3658537\n1792  -55.1463415\n1793  499.9268293\n1794   65.6341463\n1795  459.1951220\n1796  -37.0000000\n1797  -53.6829268\n1798 -328.5121951\n1799 -546.6097561\n1800  747.1951220\n1801 -119.1463415\n1802  191.2926829\n1803  279.2439024\n1804  422.3658537\n1805  141.1463415\n1806 -217.9756098\n1807  610.6585366\n1808  612.9024390\n1809  594.0243902\n1810  522.6097561\n1811  892.7560976\n1812  673.0000000\n1813  514.4634146\n1814  653.2926829\n1815 -797.8780488\n1816  464.7560976\n1817  185.0975610\n1818 -537.7317073\n1819   62.8048780\n1820  276.5609756\n1821  497.5853659\n1822  -81.4878049\n1823 -112.8048780\n1824   45.4878049\n1825 -605.5365854\n1826  588.3658537\n1827  118.0731707\n1828  751.7804878\n1829  264.4146341\n1830  436.4634146\n1831  138.4634146\n1832   -3.6829268\n1833  -49.4390244\n1834  628.2682927\n1835   66.4634146\n1836  618.0731707\n1837  -45.7804878\n1838  540.5121951\n1839 -186.3658537\n1840  386.7073171\n1841  500.1219512\n1842    1.5365854\n1843  515.8292683\n1844 -207.8780488\n1845  637.3414634\n1846  -56.1219512\n1847  520.0731707\n1848  659.3902439\n1849 -477.7317073\n1850 -216.2682927\n1851  353.0487805\n1852  727.7804878\n1853 -237.4878049\n1854  451.4878049\n1855  131.6341463\n1856  103.9756098\n1857  758.8048780\n1858 -340.0243902\n1859 -687.7317073\n1860  -16.6585366\n1861  453.2439024\n1862  692.2195122\n1863  -26.9024390\n1864 -766.0243902\n1865  238.1707317\n1866  179.4390244\n1867   83.1463415\n1868 -173.4390244\n1869  147.0975610\n1870  364.4146341\n1871 -122.5609756\n1872 -303.4878049\n1873  540.8048780\n1874 -726.1219512\n1875  279.2926829\n1876   21.7804878\n1877  507.1951220\n1878  276.4634146\n1879  335.0975610\n1880  626.5121951\n1881 -214.4634146\n1882  -18.1707317\n1883 -418.8536585\n1884 -402.8048780\n1885  105.3414634\n1886  457.3414634\n1887  574.5121951\n1888 -156.0731707\n1889  -41.6829268\n1890 -243.9756098\n1891 -227.0000000\n1892 -611.2926829\n1893  257.8780488\n1894 -863.7804878\n1895 -201.7317073\n1896  551.6341463\n1897   63.1463415\n1898 -716.5609756\n1899 -330.9024390\n1900 -506.8048780\n1901  -69.0000000\n1902 -750.3658537\n1903  -21.8292683\n1904  -10.6585366\n1905  -85.8780488\n1906 -405.9756098\n1907 -556.4634146\n1908  706.9024390\n1909  665.3414634\n1910   36.5609756\n1911 -174.8536585\n1912  306.1707317\n1913 -601.6829268\n1914 -598.1219512\n1915  117.2439024\n1916 -582.3170732\n1917 -186.3170732\n1918  343.1951220\n1919 -528.2195122\n1920 -771.5365854\n1921 -175.4390244\n1922   81.7317073\n1923   60.4634146\n1924 -141.7804878\n1925  382.3170732\n1926 -727.0975610\n1927  -22.5609756\n1928  593.8780488\n1929   83.1951220\n1930 -114.6585366\n1931  294.4146341\n1932  -95.5365854\n1933  318.5609756\n1934   89.9268293\n1935 -121.3902439\n1936  304.2682927\n1937  547.7804878\n1938 -124.7073171\n1939   72.0731707\n1940  -73.9756098\n1941 -422.8536585\n1942  609.4878049\n1943 -280.3658537\n1944 -797.9268293\n1945  129.7804878\n1946  543.7804878\n1947  476.0243902\n1948  469.3902439\n1949 -119.4390244\n1950  595.6829268\n1951 -616.3170732\n1952   75.8780488\n1953   28.8048780\n1954  456.1219512\n1955 -307.1951220\n1956  218.8536585\n1957  499.0000000\n1958 -111.6829268\n1959  154.0731707\n1960  489.8292683\n1961   95.5853659\n1962 -707.0975610\n1963  -63.7804878\n1964  564.7073171\n1965 -155.4878049\n1966 -458.0731707\n1967  414.4146341\n1968 -213.6341463\n1969 -174.4634146\n1970 -528.1707317\n1971   46.2195122\n1972  245.3414634\n1973  126.7073171\n1974 -190.7560976\n1975 -458.4634146\n1976 -261.9268293\n1977 -240.6585366\n1978  216.1707317\n1979 -530.0243902\n1980 -135.5853659\n1981  182.4146341\n1982  344.8048780\n1983 -129.6829268\n1984   68.8536585\n1985 -124.0243902\n1986  148.0243902\n1987    1.2926829\n1988 -116.8536585\n1989  380.1707317\n1990 -574.0243902\n1991  -77.2439024\n1992 -270.0243902\n1993  137.8292683\n1994  -65.6829268\n1995  451.2439024\n1996 -242.1219512\n1997  437.9756098\n1998  119.9268293\n1999 -297.3414634\n2000 -849.2439024\n2001 -339.7804878\n2002 -728.2195122\n2003  423.9268293\n2004  467.9756098\n2005 -585.6341463\n2006   73.9756098\n2007 -108.4146341\n2008 -583.4878049\n2009   67.3902439\n2010 -356.1219512\n2011 -697.4390244\n2012  730.7560976\n2013  140.4634146\n2014   88.9512195\n2015   -0.2682927\n2016  -22.2195122\n2017 -627.6829268\n2018  454.9024390\n2019  152.7073171\n2020  485.6829268\n2021 -714.1707317\n2022 -578.4146341\n2023  743.8780488\n2024 -355.7317073\n2025 -584.3658537\n2026  588.2682927\n2027   31.2439024\n2028  492.6097561\n2029 -567.0975610\n2030 -722.3170732\n2031   47.6829268\n2032   91.6829268\n2033 -291.4390244\n2034 -452.5609756\n2035   90.8536585\n2036  -56.0731707\n2037  769.7804878\n2038 -395.3902439\n2039 -489.9268293\n2040  444.2195122\n2041 -398.7560976\n2042  682.3170732\n2043 -138.8536585\n2044   51.9756098\n2045  771.0975610\n2046  -58.2195122\n2047 -569.7317073\n2048  410.7560976\n2049  180.4634146\n2050 -315.7317073\n2051 -324.7073171\n2052  251.6341463\n2053  423.7804878\n2054   58.2195122\n2055  184.1219512\n2056 -645.1463415\n2057   93.0000000\n2058  836.8536585\n2059   13.1951220\n2060   50.3658537\n2061 -563.0000000\n2062   11.1463415\n2063   21.5365854\n2064  375.1463415\n2065 -195.1951220\n2066  739.0000000\n2067  780.1707317\n2068   44.1707317\n2069  543.8292683\n2070 -577.5365854\n2071   30.2682927\n2072 -131.0975610\n2073  664.2195122\n2074  -96.8536585\n2075  318.6585366\n2076 -405.8780488\n2077  412.4146341\n2078  477.7317073\n2079   56.2682927\n2080 -652.9024390\n2081  164.7073171\n2082 -491.0487805\n2083 -179.1463415\n2084   55.4390244\n2085  150.8048780\n2086 -393.4878049\n2087  257.7317073\n2088  687.3414634\n2089 -143.4878049\n2090 -619.5365854\n2091    2.3658537\n2092  801.9756098\n2093 -435.4878049\n2094   61.1951220\n2095  -81.1951220\n2096 -115.8780488\n2097 -382.8048780\n2098  238.4146341\n2099  472.4146341\n2100   30.1219512\n2101 -113.8780488\n2102 -179.0975610\n2103  -20.1707317\n2104  -66.3658537\n2105  414.8048780\n2106 -119.9268293\n2107  810.7073171\n2108  840.0731707\n2109 -578.5121951\n2110 -546.5121951\n2111 -737.4390244\n2112 -308.6097561\n2113 -134.1219512\n2114 -502.9512195\n2115  640.4634146\n2116 -220.5121951\n2117 -600.6097561\n2118 -552.7073171\n2119 -480.1707317\n2120 -424.7560976\n2121  221.8780488\n2122  512.5121951\n2123  723.1463415\n2124 -520.4634146\n2125 -244.5121951\n2126 -671.8780488\n2127 -453.0975610\n2128  493.8292683\n2129  553.7804878\n2130   78.6585366\n2131 -491.1951220\n2132  -35.9268293\n2133   -3.2439024\n2134  298.2682927\n2135 -312.7073171\n2136 -527.0000000\n2137 -295.7804878\n2138 -444.4634146\n2139  592.2195122\n2140   11.6829268\n2141   43.5853659\n2142  357.5365854\n2143  440.4634146\n2144 -190.8536585\n2145 -443.2926829\n2146 -661.1463415\n2147 -455.4878049\n2148 -197.4878049\n2149 -107.0487805\n2150   75.9756098\n2151  -96.0243902\n2152 -781.9756098\n2153 -858.1707317\n2154 -593.0000000\n2155  -49.1951220\n2156  242.7560976\n2157  259.8292683\n2158 -345.3902439\n2159  -18.5609756\n2160 -483.0000000\n2161  619.3414634\n2162  495.5853659\n2163  570.6585366\n2164  129.2926829\n2165  -37.5853659\n2166  420.7560976\n2167 -125.7804878\n2168    4.3170732\n2169 -252.4634146\n2170  727.0975610\n2171  -56.4146341\n2172   62.7560976\n2173  -78.4634146\n2174  107.3902439\n2175   -7.7317073\n2176 -700.7073171\n2177  422.7073171\n2178 -546.6585366\n2179 -538.1219512\n2180    5.3414634\n2181 -608.7073171\n2182  122.6585366\n2183 -145.7804878\n2184 -272.6585366\n2185   40.5121951\n2186 -194.1219512\n2187  140.9512195\n2188  109.0000000\n2189 -573.8780488\n2190  751.4390244\n2191 -651.0487805\n2192  122.2195122\n2193  673.3414634\n2194 -351.6829268\n2195 -125.0000000\n2196  531.5853659\n2197 -769.3414634\n2198  153.2439024\n2199 -149.0975610\n2200 -436.1219512\n2201 -717.2926829\n2202   64.9024390\n2203 -611.2926829\n2204 -295.2926829\n2205 -533.0487805\n2206 -138.8048780\n2207 -344.1707317\n2208  105.9268293\n2209 -212.0243902\n2210   51.9268293\n2211  -49.4390244\n2212   72.3170732\n2213 -213.7317073\n2214 -210.8536585\n2215  203.8292683\n2216  227.0487805\n2217  245.9268293\n2218   88.9024390\n2219  205.7804878\n2220   56.8536585\n2221  601.1463415\n2222 -508.2195122\n2223   27.9756098\n2224 -671.4878049\n2225  469.9268293\n2226  -86.5609756\n2227 -302.2682927\n2228 -110.0243902\n2229   17.4878049\n2230 -558.1707317\n2231 -499.6341463\n2232    2.2682927\n2233  418.7560976\n2234 -444.6097561\n2235  254.4146341\n2236  335.2439024\n2237  510.2682927\n2238  543.1463415\n2239 -478.5609756\n2240  222.3170732\n2241 -461.6341463\n2242  381.8780488\n2243  121.3414634\n2244 -205.4390244\n2245 -579.9756098\n2246  590.8048780\n2247  415.2926829\n2248 -686.1707317\n2249  113.0975610\n2250  -30.9024390\n2251  831.9756098\n2252  -26.8048780\n2253  291.8780488\n2254  398.5609756\n2255 -243.8780488\n2256  369.4390244\n2257 -142.3170732\n2258   -1.2926829\n2259  -53.0000000\n2260  -51.0487805\n2261  -47.8780488\n2262  747.1951220\n2263   33.1463415\n2264  289.4390244\n2265 -453.6341463\n2266 -122.3658537\n2267 -593.5853659\n2268  413.8292683\n2269 -495.2926829\n2270 -624.9512195\n2271 -342.7560976\n2272 -320.4634146\n2273   81.9268293\n2274  525.1463415\n2275  413.8780488\n2276 -100.1707317\n2277   74.2195122\n2278   44.2195122\n2279  -61.2439024\n2280   87.5365854\n2281  -39.3902439\n2282  601.0000000\n2283   55.6341463\n2284  512.7073171\n2285 -379.9756098\n2286  547.4878049\n2287  -81.7804878\n2288  450.0731707\n2289 -471.6829268\n2290  506.7073171\n2291  247.2439024\n2292 -218.5609756\n2293 -584.3658537\n2294 -662.7073171\n2295  452.6097561\n2296 -366.3658537\n2297  -96.7073171\n2298 -628.8048780\n2299 -580.9512195\n2300 -572.4634146\n2301  668.5609756\n2302 -356.0731707\n2303 -728.1707317\n2304 -548.0243902\n2305 -431.0975610\n2306   53.1463415\n2307 -303.9268293\n2308 -533.4878049\n2309    4.5121951\n2310  630.9512195\n2311  693.7317073\n2312 -263.2926829\n2313  546.0731707\n2314 -717.1463415\n2315  402.6097561\n2316  488.3170732\n2317 -283.8780488\n2318  419.7317073\n2319 -162.4634146\n2320  208.2195122\n2321  218.4146341\n2322  -45.2439024\n2323  146.7073171\n2324  478.7560976\n2325   41.7804878\n2326  483.0975610\n2327 -721.2439024\n2328   63.7317073\n2329 -392.8536585\n2330  -62.2682927\n2331 -586.4634146\n2332  430.8048780\n2333 -640.7560976\n2334  -53.7804878\n2335   59.4878049\n2336  508.1707317\n2337 -179.0000000\n2338   13.0000000\n2339  901.0975610\n2340 -734.7073171\n2341   98.1219512\n2342 -644.2682927\n2343  -63.7804878\n2344 -437.6829268\n2345 -527.8780488\n2346  139.3902439\n2347 -722.6097561\n2348    6.5609756\n2349  501.9756098\n2350 -532.2195122\n2351  -75.1951220\n2352 -522.8048780\n2353  636.1219512\n2354  271.3902439\n2355  150.9024390\n2356 -584.4634146\n2357 -174.8048780\n2358  560.2195122\n2359 -335.0000000\n2360  447.2926829\n2361 -142.5609756\n2362 -647.2926829\n2363   29.5853659\n2364  -88.6097561\n2365 -303.7317073\n2366  -52.8536585\n2367 -205.8780488\n2368  227.0487805\n2369 -226.2682927\n2370 -540.8048780\n2371  134.3170732\n2372  539.1463415\n2373 -594.9512195\n2374  584.8048780\n2375 -438.0243902\n2376   73.9268293\n2377  147.0487805\n2378  452.9024390\n2379   94.9512195\n2380 -791.3414634\n2381  -24.2682927\n2382  733.7317073\n2383  528.2195122\n2384   77.7317073\n2385  465.1463415\n2386 -643.9756098\n2387 -337.0487805\n2388  285.3414634\n2389 -639.8292683\n2390  616.6097561\n2391  676.6585366\n2392   75.7317073\n2393 -448.0731707\n2394    6.9024390\n2395 -124.4146341\n2396  391.9756098\n2397   42.1219512\n2398  257.4878049\n2399 -120.2195122\n2400  594.6097561\n2401  608.0731707\n2402   92.5121951\n2403  610.9024390\n2404   54.9024390\n2405  289.6829268\n2406  -51.4390244\n2407  194.6585366\n2408 -566.3658537\n2409  135.0487805\n2410 -944.2682927\n2411  237.8780488\n2412   41.2926829\n2413 -470.3658537\n2414 -198.6585366\n2415 -532.2195122\n2416  -60.3170732\n2417  -76.0243902\n2418  -16.7560976\n2419  367.0975610\n2420 -146.4146341\n2421  269.8780488\n2422 -408.2682927\n2423   74.1707317\n2424  -80.5121951\n2425  482.0731707\n2426   95.8292683\n2427  -69.3902439\n2428   12.3658537\n2429  532.3658537\n2430   82.7560976\n2431  172.5609756\n2432 -431.7804878\n2433 -475.4390244\n2434 -141.6341463\n2435   44.6585366\n2436  662.4634146\n2437 -654.1219512\n2438  222.3658537\n2439  -12.1707317\n2440   85.8780488\n2441  595.4878049\n2442 -265.6829268\n2443 -205.0000000\n2444 -142.3658537\n2445 -140.8536585\n2446 -298.9512195\n2447 -376.8536585\n2448  504.8536585\n2449 -664.5121951\n2450  477.2439024\n2451  146.1219512\n2452  -15.2926829\n2453   36.8048780\n2454   46.4146341\n2455  110.5609756\n2456  588.7560976\n2457  191.0487805\n2458 -316.9512195\n2459 -160.4146341\n2460  520.4146341\n2461 -194.2682927\n2462 -385.8292683\n2463 -196.2682927\n2464 -408.5609756\n2465 -116.9024390\n2466  297.9756098\n2467  664.9512195\n2468 -690.2682927\n2469  -12.3658537\n2470  126.2195122\n2471 -109.4878049\n2472    3.0975610\n2473 -506.5121951\n2474  439.2439024\n2475  493.1463415\n2476  676.0243902\n2477  -57.9756098\n2478  511.4878049\n2479   99.4390244\n2480 -530.2195122\n2481   52.2682927\n2482  264.3658537\n2483  547.1951220\n2484 -454.0243902\n2485 -716.5121951\n2486   15.5365854\n2487  769.6341463\n2488 -717.4878049\n2489  463.8780488\n2490 -589.5853659\n2491 -101.5853659\n2492 -271.5365854\n2493 -310.7073171\n2494 -258.8048780\n2495 -308.3170732\n2496 -758.7073171\n2497 -334.7073171\n2498  -60.0243902\n2499  178.2682927\n2500   35.0000000\n2501 -400.4146341\n2502 -153.5853659\n2503 -498.2682927\n2504  352.5121951\n2505  -46.0731707\n2506  526.1219512\n2507  439.7317073\n2508 -115.1463415\n2509  537.0975610\n2510  416.3658537\n2511    6.6097561\n2512 -128.1707317\n2513   40.9024390\n2514 -464.5121951\n2515  579.5365854\n2516   68.3170732\n2517  504.9024390\n2518 -626.1707317\n2519    2.0243902\n2520  737.6829268\n2521 -148.0731707\n2522  129.6341463\n2523   54.4634146\n2524  -34.8536585\n2525 -499.3902439\n2526  819.6829268\n2527  209.7804878\n2528 -193.2439024\n2529  137.0487805\n2530 -539.2926829\n2531  266.1707317\n2532  -39.5365854\n2533  -26.6097561\n2534  754.8536585\n2535  148.0731707\n2536  -14.7560976\n2537  627.4878049\n2538 -692.2682927\n2539  -25.0487805\n2540  -19.5365854\n2541   75.5365854\n2542 -519.7317073\n2543   20.0243902\n2544  126.1219512\n2545  515.5853659\n2546 -535.7804878\n2547  113.9268293\n2548  524.8536585\n2549  -87.7317073\n2550 -281.3414634\n2551  581.7804878\n2552 -640.7073171\n2553 -247.2926829\n2554  -72.3170732\n2555 -665.0487805\n2556  627.5853659\n2557 -648.0731707\n2558 -493.4878049\n2559 -169.1463415\n2560  -34.5121951\n2561 -691.2439024\n2562    4.3170732\n2563  588.1219512\n2564  135.5365854\n2565  123.7317073\n2566 -322.2682927\n2567  -30.5121951\n2568  186.4146341\n2569  112.0243902\n2570  616.8048780\n2571 -613.9756098\n2572 -253.1951220\n2573   69.2926829\n2574  123.3902439\n2575 -674.5121951\n2576   72.8536585\n2577  555.5853659\n2578   19.3902439\n2579 -184.9024390\n2580 -460.3658537\n2581 -455.8292683\n2582 -214.2682927\n2583  436.3170732\n2584 -104.5609756\n2585  708.6097561\n2586  249.0975610\n2587 -453.1463415\n2588   -7.7804878\n2589 -474.4634146\n2590  332.6585366\n2591  425.3414634\n2592 -281.0487805\n2593  472.3658537\n2594  112.4634146\n2595 -207.7317073\n2596  -99.5365854\n2597  833.5365854\n2598  421.0487805\n2599 -113.0975610\n2600  144.2195122\n2601 -435.2439024\n2602  721.8292683\n2603  658.0243902\n2604  426.4146341\n2605  660.3658537\n2606  395.7317073\n2607   46.8048780\n2608  542.9512195\n2609 -431.1951220\n2610    9.1951220\n2611 -499.1463415\n2612 -685.6341463\n2613  708.6585366\n2614 -633.5853659\n2615  711.1951220\n2616 -249.6341463\n2617 -622.7073171\n2618 -232.8048780\n2619  191.9268293\n2620 -407.7317073\n2621  417.2439024\n2622   23.8292683\n2623  590.4146341\n2624  499.3414634\n2625 -285.6829268\n2626 -761.5365854\n2627  312.8048780\n2628 -699.6341463\n2629  -87.3414634\n2630  175.0000000\n2631 -253.1463415\n2632 -362.6097561\n2633  304.4146341\n2634  614.8048780\n2635  129.6829268\n2636 -149.7804878\n2637 -279.5365854\n2638 -347.1463415\n2639 -377.8780488\n2640  244.8048780\n2641 -297.4390244\n2642   59.3902439\n2643 -133.6829268\n2644  -26.5121951\n2645  524.7560976\n2646 -555.4878049\n2647  565.7804878\n2648   96.9024390\n2649  -72.8536585\n2650 -185.5853659\n2651 -516.0243902\n2652  -31.7317073\n2653   21.0487805\n2654 -430.0731707\n2655  342.5609756\n2656  491.4390244\n2657  229.8780488\n2658  218.2195122\n2659  222.7560976\n2660  198.3170732\n2661 -304.8536585\n2662  -54.2682927\n2663  -29.2439024\n2664  -27.7804878\n2665   48.1707317\n2666  266.8048780\n2667 -168.4146341\n2668  -24.5609756\n2669 -611.7317073\n2670  653.6341463\n2671  -82.0243902\n2672  -94.2195122\n2673  -31.9756098\n2674  690.9024390\n2675 -245.9756098\n2676 -471.2926829\n2677  -50.1219512\n2678  186.5121951\n2679  247.1951220\n2680  448.9512195\n2681 -217.5853659\n2682   31.5365854\n2683  733.6341463\n2684 -782.6585366\n2685   58.6585366\n2686  628.1219512\n2687  612.7560976\n2688 -169.9268293\n2689  352.7073171\n2690 -376.5121951\n2691 -254.3658537\n2692 -172.6097561\n2693 -310.3170732\n2694 -677.2439024\n2695  383.8780488\n2696  117.0000000\n2697  602.7560976\n2698 -659.3414634\n2699 -519.4390244\n2700  134.6097561\n2701   21.2439024\n2702   74.0731707\n2703 -810.4634146\n2704  376.0243902\n2705  492.5121951\n2706  387.4390244\n2707 -403.9756098\n2708 -715.2926829\n2709  697.4878049\n2710  268.5121951\n2711  -16.5609756\n2712   16.8048780\n2713  358.7560976\n2714  547.1951220\n2715  194.3658537\n2716 -930.3658537\n2717  112.6097561\n2718   10.5121951\n2719  112.0731707\n2720  -58.8536585\n2721  861.6341463\n2722 -661.4390244\n2723   41.5365854\n2724  674.5121951\n2725  455.3414634\n2726  264.2195122\n2727  207.0000000\n2728  -71.3902439\n2729 -467.1463415\n2730 -655.2439024\n2731  -21.2926829\n2732 -412.4146341\n2733 -436.5121951\n2734 -392.9512195\n2735   31.0487805\n2736  470.6585366\n2737   36.7560976\n2738 -407.1463415\n2739  674.5609756\n2740 -448.5121951\n2741 -534.5121951\n2742  -58.0243902\n2743   -5.0487805\n2744  -57.3414634\n2745   89.7317073\n2746  114.7073171\n2747 -536.9512195\n2748  497.6829268\n2749 -445.4390244\n2750 -548.6585366\n2751  -50.4146341\n2752  -80.5121951\n2753  -26.9024390\n2754 -204.6097561\n2755   37.7804878\n2756  -79.2439024\n2757  576.3170732\n2758   77.7317073\n2759 -144.4146341\n2760  -68.4146341\n2761  336.7073171\n2762  712.3658537\n2763 -491.5365854\n2764 -116.3658537\n2765 -129.9756098\n2766 -375.6341463\n2767  453.3414634\n2768 -406.9512195\n2769  686.7073171\n2770  121.0975610\n2771   71.9756098\n2772  101.4878049\n2773    9.2439024\n2774 -677.4390244\n2775 -135.2439024\n2776 -562.0243902\n2777  558.6097561\n2778  629.6829268\n2779  670.4146341\n2780  550.2682927\n2781 -320.3170732\n2782 -408.0243902\n2783 -563.7804878\n2784  -27.5853659\n2785 -198.0731707\n2786  120.8536585\n2787   53.1463415\n2788  633.3414634\n2789  575.1463415\n2790 -585.0487805\n2791  616.9512195\n2792  209.5365854\n2793 -729.2439024\n2794  188.0243902\n2795   88.3658537\n2796  -14.7560976\n2797  673.6829268\n2798 -584.1707317\n2799 -448.9024390\n2800  174.3658537\n2801 -837.4390244\n2802 -395.5365854\n2803 -564.4634146\n2804  171.8292683\n2805  331.7804878\n2806  621.7317073\n2807  -30.5609756\n2808 -296.8048780\n2809  161.0000000\n2810 -170.6585366\n2811  103.2926829\n2812 -198.9024390\n2813 -524.1707317\n2814 -825.2926829\n2815   40.8048780\n2816 -610.1219512\n2817   73.1951220\n2818  101.2926829\n2819  185.1463415\n2820 -593.0487805\n2821  258.5609756\n2822 -110.5609756\n2823 -161.5365854\n2824 -110.7560976\n2825  628.1707317\n2826 -723.6341463\n2827 -309.1463415\n2828   89.9756098\n2829 -293.3902439\n2830  181.3902439\n2831 -114.7073171\n2832  335.6829268\n2833 -576.5609756\n2834   67.5365854\n2835   16.4146341\n2836  402.8048780\n2837  539.0975610\n2838  455.3902439\n2839 -168.5609756\n2840  307.7804878\n2841  751.7804878\n2842 -475.2926829\n2843  876.4634146\n2844   16.0731707\n2845  562.0243902\n2846   64.8536585\n2847  294.4146341\n2848 -629.4878049\n2849 -455.8292683\n2850 -324.4146341\n2851  141.2439024\n2852  418.1707317\n2853   69.6341463\n2854  723.6341463\n2855  -91.1951220\n2856  137.4390244\n2857 -669.3414634\n2858  -18.0731707\n2859  -86.4634146\n2860  205.8292683\n2861 -461.6341463\n2862 -519.1463415\n2863  686.9024390\n2864 -599.9756098\n2865  -23.9756098\n2866  108.9024390\n2867  -45.9268293\n2868  659.9268293\n2869 -537.5853659\n2870  400.8536585\n2871  194.9512195\n2872 -122.2195122\n2873    0.7073171\n2874   15.6829268\n2875  118.1219512\n2876  683.4390244\n2877 -217.7317073\n2878 -693.2926829\n2879 -493.0487805\n2880  -44.8048780\n2881 -654.1219512\n2882  434.4146341\n2883 -696.4146341\n2884  -55.3902439\n2885  -90.6097561\n2886  745.1463415\n2887 -201.2926829\n2888  -49.6341463\n2889 -438.6585366\n2890  217.0975610\n2891 -809.3414634\n2892 -526.4146341\n2893  114.2195122\n2894  -61.9756098\n2895  -72.7560976\n2896   50.5121951\n2897  469.3414634\n2898  668.2195122\n2899   -7.2439024\n2900  -49.6341463\n2901  243.5365854\n2902  732.1707317\n2903 -392.6585366\n2904  135.1951220\n2905 -107.7317073\n2906 -523.7804878\n2907 -314.3170732\n2908  435.3414634\n2909  126.1707317\n2910  -29.9268293\n2911 -872.4634146\n2912 -117.4878049\n2913 -134.2195122\n2914  271.0000000\n2915 -161.3414634\n2916  476.3658537\n2917  -71.0000000\n2918  -75.2926829\n2919   53.3414634\n2920    4.2682927\n2921 -468.4634146\n2922 -495.0487805\n2923  193.4878049\n2924  -83.1463415\n2925 -389.2926829\n2926 -386.9024390\n2927 -106.6097561\n2928   86.9512195\n2929 -526.9024390\n2930  -24.7073171\n2931 -128.8536585\n2932  705.4878049\n2933  624.0243902\n2934   49.0975610\n2935   28.5609756\n2936  -38.7073171\n2937 -542.3170732\n2938 -670.6097561\n2939  669.1951220\n2940 -200.0243902\n2941   54.0731707\n2942   -0.8048780\n2943  163.0975610\n2944 -590.9512195\n2945 -146.8048780\n2946  145.9268293\n2947 -539.9268293\n2948  129.7317073\n2949   19.2926829\n2950  332.1707317\n2951   11.0975610\n2952 -109.5853659\n2953 -716.6097561\n2954  550.3170732\n2955  104.7560976\n2956   55.2439024\n2957 -553.3902439\n2958   -6.1219512\n2959  146.2195122\n2960  -29.9268293\n2961  623.0000000\n2962   -9.5853659\n2963  -55.1951220\n2964  166.5121951\n2965 -810.7073171\n2966   62.6097561\n2967  273.9756098\n2968 -159.4390244\n2969  213.1951220\n2970  608.7560976\n2971  604.5121951\n2972 -558.1707317\n2973 -654.6585366\n2974   -9.1463415\n2975 -525.5365854\n2976   88.7560976\n2977 -397.6341463\n2978   79.8780488\n2979 -621.0975610\n2980  617.0975610\n2981  -63.5365854\n2982  197.3902439\n2983 -532.4146341\n2984 -324.3658537\n2985  189.9268293\n2986  815.8292683\n2987 -605.4390244\n2988 -575.5365854\n2989  -39.3902439\n2990 -792.4634146\n2991    2.7560976\n2992  619.4878049\n2993 -539.4390244\n2994 -253.9268293\n2995  -14.1219512\n2996  501.1951220\n2997 -600.6097561\n2998 -142.0243902\n2999 -428.7073171\n3000  127.4878049\n3001 -144.3658537\n3002  -74.3658537\n3003   70.6585366\n3004 -596.3170732\n3005  322.7073171\n3006  544.6097561\n3007 -645.0000000\n3008  607.9756098\n3009 -112.2682927\n3010 -644.5609756\n3011   19.2439024\n3012  -28.6585366\n3013  736.4634146\n3014  547.5853659\n3015 -841.5853659\n3016  595.0975610\n3017 -739.3902439\n3018 -574.3170732\n3019   32.3170732\n3020 -196.5609756\n3021 -245.1951220\n3022 -658.0243902\n3023  702.7073171\n3024  563.5853659\n3025  246.4634146\n3026  175.4390244\n3027 -698.6585366\n3028  472.6097561\n3029  -32.9512195\n3030  118.8048780\n3031 -427.4878049\n3032  761.3902439\n3033 -737.2926829\n3034 -641.4390244\n3035  627.5365854\n3036 -195.3902439\n3037  580.6097561\n3038 -469.9756098\n3039  180.3658537\n3040  477.0000000\n3041 -716.2195122\n3042   23.5853659\n3043 -117.6829268\n3044   -7.4390244\n3045   12.5609756\n3046  319.1463415\n3047 -602.1219512\n3048 -663.5853659\n3049  644.7560976\n3050  474.7073171\n3051  678.4634146\n3052 -477.4878049\n3053 -441.5365854\n3054 -601.0975610\n3055 -580.7560976\n3056 -472.5121951\n3057  -40.0243902\n3058  -71.5365854\n3059 -100.4634146\n3060  -80.2682927\n3061 -552.6097561\n3062 -388.2195122\n3063 -147.1951220\n3064   12.4634146\n3065  138.3170732\n3066  424.4146341\n3067 -246.4146341\n3068  541.7317073\n3069 -627.0975610\n3070 -391.8780488\n3071  308.0243902\n3072 -148.4146341\n3073 -542.7560976\n3074  -55.2439024\n3075 -111.0487805\n3076  501.0000000\n3077  117.6341463\n3078  308.1219512\n3079  625.5853659\n3080  486.3658537\n3081  200.9512195\n3082   51.5853659\n3083  274.6097561\n3084   32.6585366\n3085  282.2195122\n3086  540.9512195\n3087  -42.3170732\n3088 -719.2439024\n3089  529.2439024\n3090 -488.9512195\n3091 -654.7560976\n3092 -681.0000000\n3093   -4.6585366\n3094 -515.3902439\n3095 -771.7317073\n3096 -154.7560976\n3097   34.4634146\n3098  620.7560976\n3099  150.7073171\n3100  -12.3170732\n3101 -647.6829268\n3102   13.1951220\n3103   24.6097561\n3104   24.9512195\n3105  297.3902439\n3106 -101.7804878\n3107  161.1463415\n3108 -472.0731707\n3109  130.8536585\n3110 -236.9024390\n3111 -116.8536585\n3112 -177.1951220\n3113  598.3170732\n3114  247.3414634\n3115 -679.9756098\n3116 -489.9268293\n3117  640.0243902\n3118   86.3170732\n3119  -82.1707317\n3120 -124.9512195\n3121   25.7317073\n3122  119.1463415\n3123 -191.4878049\n3124   82.1707317\n3125  -73.3902439\n3126  341.2439024\n3127 -598.6097561\n3128 -677.9268293\n3129  157.4878049\n3130  640.0243902\n3131  752.2682927\n3132  -60.4146341\n3133   50.0243902\n3134  162.0243902\n3135  357.4390244\n3136  -38.7560976\n3137 -129.4390244\n3138  603.1951220\n3139  445.0975610\n3140 -134.5609756\n3141  771.5365854\n3142  567.3902439\n3143 -282.0731707\n3144  685.8292683\n3145 -451.7804878\n3146   -0.4146341\n3147  194.9512195\n3148 -529.4390244\n3149 -566.6097561\n3150  403.3414634\n3151 -554.0243902\n3152  167.0975610\n3153   88.6585366\n3154    9.0487805\n3155   42.0243902\n3156  -74.3170732\n3157  127.0487805\n3158  506.9512195\n3159  133.9268293\n3160 -534.8536585\n3161  -71.7804878\n3162    6.5121951\n3163 -648.8536585\n3164  -63.5365854\n3165  -80.2195122\n3166   41.9756098\n3167  384.0243902\n3168  760.5609756\n3169 -180.3658537\n3170  637.7804878\n3171 -306.7560976\n3172  421.4390244\n3173   33.5365854\n3174 -752.1707317\n3175  -10.5609756\n3176 -466.8048780\n3177  402.1219512\n3178  541.2926829\n3179  391.9756098\n3180 -608.6585366\n3181 -633.9756098\n3182   51.8780488\n3183 -616.3170732\n3184  109.8292683\n3185  -84.4634146\n3186  301.1463415\n3187 -167.1951220\n3188 -646.8048780\n3189  155.1951220\n3190 -509.7804878\n3191  586.8536585\n3192  -74.3170732\n3193  245.8292683\n3194 -223.9268293\n3195  301.7804878\n3196  -56.4146341\n3197 -418.2195122\n3198 -164.8536585\n3199 -519.3414634\n3200  -36.5609756\n3201  -61.3902439\n3202 -284.8536585\n3203 -565.6341463\n3204  179.8292683\n3205  189.6341463\n3206  597.5853659\n3207  483.1463415\n3208  320.0731707\n3209 -261.7317073\n3210 -357.5365854\n3211  659.0000000\n3212  569.4878049\n3213 -506.0243902\n3214 -299.0487805\n3215 -374.6585366\n3216  387.7804878\n3217 -149.9268293\n3218 -103.1951220\n3219 -124.0243902\n3220 -524.2682927\n3221  641.9756098\n3222 -620.9024390\n3223   99.2926829\n3224 -627.8780488\n3225 -722.7073171\n3226  805.4390244\n3227  641.6341463\n3228  625.8780488\n3229  665.5365854\n3230  479.9756098\n3231  198.0731707\n3232   25.3414634\n3233  633.4390244\n3234 -383.0487805\n3235  741.0975610\n3236  229.5853659\n3237   35.7317073\n3238  548.6097561\n3239  -93.6341463\n3240  -21.7804878\n3241  483.7804878\n3242   91.9756098\n3243  509.5365854\n3244  160.6585366\n3245 -528.4146341\n3246 -244.4146341\n3247 -695.8780488\n3248  -73.8780488\n3249 -121.4878049\n3250 -130.6585366\n3251 -159.5365854\n3252 -295.4390244\n3253  537.5853659\n3254   70.1707317\n3255    7.0000000\n3256 -624.3658537\n3257  124.7073171\n3258 -518.7560976\n3259 -451.4390244\n3260  527.4390244\n3261   60.9024390\n3262 -710.7560976\n3263 -115.4390244\n3264  717.5853659\n3265  165.2926829\n3266  643.2926829\n3267 -496.0731707\n3268  581.9268293\n3269  592.9024390\n3270   70.5609756\n3271  436.8536585\n3272 -535.6829268\n3273  137.1463415\n3274  293.0487805\n3275  638.0243902\n3276  703.4878049\n3277  -77.5853659\n3278 -392.0243902\n3279   50.8536585\n3280 -559.2926829\n3281  752.0731707\n3282  -16.1219512\n3283  120.0243902\n3284  812.4146341\n3285 -541.6829268\n3286  444.0731707\n3287   27.7804878\n3288  636.3170732\n3289   -6.4146341\n3290  224.9024390\n3291 -585.8780488\n3292  437.1951220\n3293 -672.5609756\n3294  -42.8048780\n3295 -424.6585366\n3296 -562.3170732\n3297 -253.8292683\n3298  656.1219512\n3299  -22.6585366\n3300  -84.4146341\n3301  281.4390244\n3302   53.8292683\n3303  131.9268293\n3304 -551.8780488\n3305 -211.8780488\n3306  633.8780488\n3307 -651.1463415\n3308 -228.8048780\n3309  192.2682927\n3310  133.8780488\n3311  -64.5609756\n3312 -658.8536585\n3313    6.7560976\n3314  594.2682927\n3315   11.7317073\n3316 -158.4634146\n3317 -130.5121951\n3318 -734.0243902\n3319 -409.6341463\n3320  -25.5853659\n3321  -84.3170732\n3322   24.9512195\n3323 -410.2682927\n3324 -437.0487805\n3325  120.3658537\n3326  -46.3658537\n3327   89.3902439\n3328 -378.5609756\n3329 -111.5853659\n3330   52.4146341\n3331  334.1707317\n3332  599.5365854\n3333  721.7317073\n3334 -680.8536585\n3335  276.6585366\n3336  116.6097561\n3337 -854.1707317\n3338  585.2439024\n3339  318.8536585\n3340    1.9268293\n3341  167.0487805\n3342 -488.2682927\n3343 -235.8292683\n3344  -89.9756098\n3345  304.2195122\n3346   23.3414634\n3347  327.0975610\n3348 -557.6829268\n3349 -321.5853659\n3350  582.7073171\n3351  164.0243902\n3352 -563.2926829\n3353  700.0731707\n3354  159.2926829\n3355  659.2926829\n3356 -202.3170732\n3357  488.8536585\n3358 -267.0487805\n3359  504.5121951\n3360  903.3414634\n3361  470.2195122\n3362 -660.0731707\n3363   13.8780488\n3364  548.7560976\n3365  -20.2682927\n3366 -546.7073171\n3367  -71.5365854\n3368 -409.9756098\n3369  230.8048780\n3370 -188.5609756\n3371  398.9512195\n3372  152.9024390\n3373  467.3414634\n3374  -41.8780488\n3375  -24.8048780\n3376  230.5121951\n3377 -164.7560976\n3378  518.7560976\n3379  176.7073171\n3380  242.1219512\n3381   80.4634146\n3382   64.3170732\n3383 -102.6585366\n3384 -200.1707317\n3385  -58.3170732\n3386 -332.4634146\n3387  204.1707317\n3388 -705.2926829\n3389  115.7317073\n3390   67.2926829\n3391  626.6097561\n3392   74.0731707\n3393 -423.9268293\n3394  163.5365854\n3395  -66.9024390\n3396 -881.2926829\n3397  458.5121951\n3398  775.7804878\n3399  -22.1707317\n3400  766.1219512\n3401  143.0000000\n3402  192.3170732\n3403  376.9512195\n3404  -86.3658537\n3405 -681.4390244\n3406  -73.1463415\n3407 -585.5853659\n3408 -462.1219512\n3409 -592.6097561\n3410  494.4146341\n3411  521.5853659\n3412   87.7317073\n3413  -54.5121951\n3414  304.9024390\n3415 -606.2682927\n3416  498.9512195\n3417 -169.9268293\n3418  115.0975610\n3419  433.6829268\n3420 -346.8536585\n3421 -488.9512195\n3422   46.0731707\n3423  -49.5853659\n3424  498.1707317\n3425  585.2439024\n3426 -397.5365854\n3427  -79.1463415\n3428   69.9756098\n3429 -651.3902439\n3430  536.3170732\n3431 -362.4634146\n3432  491.9756098\n3433  513.3902439\n3434 -157.7804878\n3435   60.9024390\n3436 -596.3658537\n3437  -17.1463415\n3438  567.7317073\n3439  -26.4146341\n3440  756.8536585\n3441 -630.0243902\n3442 -580.3658537\n3443    8.3658537\n3444  686.8048780\n3445  182.8048780\n3446  684.1219512\n3447   60.6097561\n3448 -115.2926829\n3449 -163.4878049\n3450 -632.3170732\n3451 -493.8780488\n3452  -41.4878049\n3453  -35.3902439\n3454   76.5121951\n3455 -673.3414634\n3456   -7.3902439\n3457  -82.7073171\n3458 -246.9512195\n3459  488.6097561\n3460  -17.6829268\n3461  -84.0243902\n3462  523.8780488\n3463  417.6829268\n3464  146.1707317\n3465   85.4878049\n3466  -86.6097561\n3467 -166.0243902\n3468 -237.3414634\n3469   44.5121951\n3470 -685.3414634\n3471 -102.0731707\n3472 -429.8292683\n3473  366.1707317\n3474   31.3902439\n3475  723.6829268\n3476 -279.6829268\n3477  382.1219512\n3478  107.8292683\n3479   65.3902439\n3480  -70.9512195\n3481 -696.0731707\n3482  -70.5121951\n3483 -456.7560976\n3484   13.8292683\n3485  391.9268293\n3486 -521.3902439\n3487  162.0243902\n3488 -532.0243902\n3489  -11.9268293\n3490  144.4146341\n3491  698.4634146\n3492 -340.5121951\n3493  -34.7073171\n3494 -479.8292683\n3495   51.3414634\n3496  -66.7073171\n3497 -614.8048780\n3498 -519.8292683\n3499 -200.5609756\n3500 -147.2439024\n3501 -511.0000000\n3502 -123.0000000\n3503  557.6341463\n3504 -133.2926829\n3505 -482.3658537\n3506  -98.2682927\n3507  510.3170732\n3508  165.1951220\n3509  645.9268293\n3510 -491.9756098\n3511 -319.3414634\n3512    2.9512195\n3513  853.8780488\n3514  -28.6097561\n3515 -450.8048780\n3516  402.0243902\n3517  247.6829268\n3518  -51.3414634\n3519 -129.1951220\n3520   -2.0731707\n3521  542.8048780\n3522   86.2682927\n3523  114.6097561\n3524 -393.4390244\n3525  465.0487805\n3526  215.0000000\n3527  391.4878049\n3528 -635.5365854\n3529   35.5365854\n3530 -147.8292683\n3531  651.7804878\n3532   50.2682927\n3533  217.8292683\n3534  189.1463415\n3535 -586.9512195\n3536 -219.6829268\n3537  245.3902439\n3538 -179.5853659\n3539 -341.2926829\n3540  254.7560976\n3541  -37.1463415\n3542 -702.4146341\n3543   -0.7560976\n3544 -200.6585366\n3545 -427.2439024\n3546  412.6585366\n3547 -525.6341463\n3548 -537.0975610\n3549  539.6341463\n3550 -662.2195122\n3551 -695.7317073\n3552  232.8048780\n3553  169.6341463\n3554 -148.8536585\n3555  615.8780488\n3556  413.0000000\n3557  -63.1951220\n3558  160.2195122\n3559  725.8780488\n3560  507.4878049\n3561   20.9024390\n3562   12.9512195\n3563   64.5121951\n3564 -524.4634146\n3565   40.8536585\n3566   37.7317073\n3567 -352.7073171\n3568   81.9756098\n3569 -366.6097561\n3570  211.5853659\n3571  235.1463415\n3572  384.6097561\n3573 -246.7073171\n3574  444.2682927\n3575 -588.2682927\n3576   57.6829268\n3577   90.8536585\n3578   90.2682927\n3579 -558.1219512\n3580 -479.5365854\n3581 -449.4390244\n3582 -330.8536585\n3583  681.4878049\n3584   36.5121951\n3585  588.3658537\n3586 -315.7317073\n3587  584.8536585\n3588  -19.9756098\n3589  500.0731707\n3590  217.7804878\n3591 -129.5853659\n3592 -634.1219512\n3593  468.7560976\n3594   96.1707317\n3595  678.2195122\n3596  370.1707317\n3597  -63.7317073\n3598  739.2926829\n3599  363.6829268\n3600 -128.7560976\n3601 -487.0000000\n3602  775.7317073\n3603 -463.5365854\n3604   11.0000000\n3605  -79.0975610\n3606 -594.0731707\n3607 -833.8292683\n3608 -203.1463415\n3609  -28.4146341\n3610  -24.9512195\n3611  537.6829268\n3612 -194.4634146\n3613  -50.3170732\n3614   40.3658537\n3615 -603.7317073\n3616 -757.3414634\n3617  629.2926829\n3618 -534.2682927\n3619  492.5121951\n3620 -646.8048780\n3621 -300.6585366\n3622  491.6341463\n3623 -515.7317073\n3624  542.3658537\n3625  -16.6585366\n3626   32.1707317\n3627  320.5609756\n3628 -161.2926829\n3629 -110.7560976\n3630  420.7560976\n3631 -594.6097561\n3632  -45.2439024\n3633  521.0975610\n3634  631.2926829\n3635  621.6829268\n3636   77.2926829\n3637  370.6097561\n3638 -441.5853659\n3639  143.0975610\n3640 -422.2195122\n3641  613.5365854\n3642  643.7317073\n3643  417.9268293\n3644 -348.5609756\n3645   25.5853659\n3646  201.5853659\n3647 -125.4878049\n3648  538.9512195\n3649 -582.9024390\n3650  735.0975610\n3651 -112.6097561\n3652 -315.2439024\n3653 -247.3902439\n3654  404.7560976\n3655  -85.9268293\n3656 -104.5121951\n3657  387.3902439\n3658 -167.5853659\n3659  534.6585366\n3660 -703.1463415\n3661  492.9024390\n3662 -530.4634146\n3663 -569.7317073\n3664 -272.0243902\n3665 -163.7804878\n3666   43.3414634\n3667 -679.1951220\n3668   -0.1707317\n3669 -236.3658537\n3670 -409.4878049\n3671  553.1951220\n3672  609.6829268\n3673  666.8048780\n3674 -137.8780488\n3675  -31.2926829\n3676 -436.2682927\n3677 -161.2926829\n3678  -50.4146341\n3679  208.5121951\n3680 -519.8292683\n3681 -588.2195122\n3682  616.6097561\n3683  300.7560976\n3684  107.6341463\n3685 -198.8536585\n3686  493.3414634\n3687  183.8292683\n3688  201.4390244\n3689  557.1463415\n3690 -825.0975610\n3691 -107.2439024\n3692  720.1219512\n3693 -158.5121951\n3694 -656.0243902\n3695 -104.6585366\n3696  375.3902439\n3697   -6.7073171\n3698  492.8536585\n3699  559.5365854\n3700 -549.1463415\n3701 -776.5609756\n3702 -562.3170732\n3703 -419.6829268\n3704 -735.8780488\n3705   77.0975610\n3706  136.6097561\n3707  558.1707317\n3708 -570.1219512\n3709  178.2195122\n3710 -659.0487805\n3711 -754.5121951\n3712  681.3414634\n3713  -47.5853659\n3714 -734.8048780\n3715  472.6097561\n3716  177.5853659\n3717 -547.2439024\n3718  150.5121951\n3719  -79.0000000\n3720 -188.1707317\n3721  597.7804878\n3722   10.9024390\n3723 -479.2926829\n3724 -146.5609756\n3725 -612.3658537\n3726  121.0000000\n3727  -19.2439024\n3728  237.1463415\n3729 -281.8780488\n3730 -582.9512195\n3731  426.4634146\n3732  225.4878049\n3733 -315.4878049\n3734  -54.3170732\n3735   84.0731707\n3736 -179.0487805\n3737    8.0243902\n3738 -134.6585366\n3739 -340.4146341\n3740   10.5609756\n3741 -145.3902439\n3742 -662.7073171\n3743  648.7073171\n3744  516.6097561\n3745  375.1951220\n3746 -559.5853659\n3747 -488.9024390\n3748   99.0000000\n3749  104.0243902\n3750 -549.1951220\n3751   34.6097561\n3752  374.1219512\n3753   93.2926829\n3754   17.0487805\n3755  -11.6829268\n3756 -636.0243902\n3757  531.3902439\n3758 -625.0487805\n3759  -51.0975610\n3760 -505.2926829\n3761  141.6341463\n3762 -180.9024390\n3763  341.6341463\n3764 -277.7804878\n3765   59.0975610\n3766  554.8048780\n3767  -70.4634146\n3768  156.4634146\n3769  664.7560976\n3770 -179.3414634\n3771  238.0731707\n3772  203.1951220\n3773  149.4878049\n3774  481.8780488\n3775  394.6097561\n3776   40.6585366\n3777  128.1707317\n3778   20.8536585\n3779  245.0487805\n3780  589.7317073\n3781    0.3658537\n3782 -388.4634146\n3783 -564.9024390\n3784  641.0000000\n3785  417.7317073\n3786  901.3902439\n3787 -162.0243902\n3788  564.1219512\n3789 -478.1219512\n3790  173.0975610\n3791 -676.3170732\n3792 -450.2195122\n3793  419.1951220\n3794  367.6829268\n3795   89.8292683\n3796  -89.0487805\n3797  -84.7560976\n3798  618.7073171\n3799 -477.9268293\n3800  -47.3414634\n3801 -807.3414634\n3802   80.5609756\n3803  -51.2926829\n3804 -224.1219512\n3805  335.9268293\n3806    1.6829268\n3807 -200.2195122\n3808  220.2195122\n3809  553.8780488\n3810 -125.5853659\n3811  161.6829268\n3812  344.3170732\n3813  315.8292683\n3814 -334.0731707\n3815   68.2195122\n3816 -202.3170732\n3817  248.1707317\n3818 -564.1707317\n3819  731.0000000\n3820 -124.7560976\n3821 -296.6097561\n3822 -103.7317073\n3823 -131.1463415\n3824  591.0000000\n3825 -500.9024390\n3826 -208.0243902\n3827 -492.8048780\n3828  650.8536585\n3829  541.9268293\n3830 -688.3658537\n3831 -273.1951220\n3832    7.4390244\n3833   83.9268293\n3834  -38.3170732\n3835   23.4390244\n3836  539.9268293\n3837   13.8292683\n3838 -560.8536585\n3839  121.8292683\n3840   66.4146341\n3841  529.6829268\n3842  593.4878049\n3843  585.5853659\n3844  467.9756098\n3845  154.2195122\n3846  -28.2195122\n3847  293.9756098\n3848  118.6585366\n3849 -396.7560976\n3850  457.3414634\n3851   -6.6585366\n3852  655.7317073\n3853  656.5121951\n3854  583.6829268\n3855  267.8292683\n3856 -448.9024390\n3857   36.1219512\n3858   59.9268293\n3859  618.5609756\n3860 -175.2926829\n3861 -234.0243902\n3862 -469.3414634\n3863  424.2195122\n3864 -362.1219512\n3865 -760.9512195\n3866  431.4878049\n3867 -618.8048780\n3868  -55.7317073\n3869   35.8780488\n3870 -777.8780488\n3871  -88.1707317\n3872 -471.1463415\n3873   55.9756098\n3874  765.8292683\n3875  112.4634146\n3876 -363.5853659\n3877 -473.0487805\n3878  119.6341463\n3879  -46.5609756\n3880  613.0975610\n3881   52.2195122\n3882   10.8536585\n3883  582.3658537\n3884   94.4634146\n3885  -10.2682927\n3886   73.0000000\n3887 -104.5609756\n3888  -73.5853659\n3889  594.6585366\n3890 -235.0487805\n3891  831.1463415\n3892 -412.6585366\n3893  860.2195122\n3894 -732.5121951\n3895  520.3658537\n3896  171.9268293\n3897 -440.0243902\n3898  -19.6341463\n3899 -123.7317073\n3900  426.1219512\n3901 -441.5365854\n3902  129.4390244\n3903  102.9024390\n3904   29.3414634\n3905 -478.1219512\n3906  403.3414634\n3907  561.6829268\n3908 -541.7804878\n3909 -169.0975610\n3910  467.5853659\n3911  658.5609756\n3912  640.5609756\n3913  -25.4390244\n3914   91.4390244\n3915 -338.3658537\n3916 -569.7804878\n3917  -96.9512195\n3918 -465.5365854\n3919 -557.7804878\n3920 -112.4146341\n3921   -0.1707317\n3922 -631.6829268\n3923 -723.8292683\n3924   38.3658537\n3925  -59.8780488\n3926 -627.9268293\n3927  -42.0243902\n3928  291.2926829\n3929 -115.5853659\n3930 -352.9024390\n3931 -235.0487805\n3932    2.5609756\n3933  374.8048780\n3934  -71.7317073\n3935 -104.5609756\n3936 -675.3414634\n3937 -665.7317073\n3938 -123.2926829\n3939  770.7073171\n3940   26.9024390\n3941 -116.6585366\n3942  765.3414634\n3943  294.7560976\n3944  194.4634146\n3945   -7.2926829\n3946 -690.8536585\n3947  506.1219512\n3948 -150.9024390\n3949 -148.1219512\n3950  350.9512195\n3951  577.1463415\n3952 -710.5121951\n3953 -480.1219512\n3954 -326.7073171\n3955  260.6585366\n3956 -444.8048780\n3957 -159.5365854\n3958 -240.1707317\n3959 -474.1707317\n3960 -285.6829268\n3961 -239.0487805\n3962 -160.4634146\n3963 -522.4634146\n3964  157.1951220\n3965  250.2682927\n3966 -241.7804878\n3967  603.1951220\n3968  463.4390244\n3969  288.9024390\n3970 -517.2926829\n3971  -15.6829268\n3972 -584.9512195\n3973   85.0000000\n3974  645.0975610\n3975 -859.2439024\n3976 -451.7804878\n3977  -18.8048780\n3978  359.2926829\n3979 -772.0731707\n3980  605.0487805\n3981  109.5853659\n3982 -109.9268293\n3983  343.0487805\n3984  -11.3414634\n3985 -119.3414634\n3986 -240.6097561\n3987  -39.6829268\n3988  520.2195122\n3989  -99.9756098\n3990 -319.7317073\n3991  233.3414634\n3992 -689.0487805\n3993  144.2195122\n3994  667.1951220\n3995   54.5609756\n3996 -693.4878049\n3997 -305.9756098\n3998 -588.8536585\n3999  142.1707317\n4000   68.2195122\n4001 -724.2682927\n4002  144.5609756\n4003 -550.0243902\n4004  -65.8292683\n4005  -52.3170732\n4006  576.3658537\n4007   53.2439024\n4008  220.5121951\n4009 -351.8292683\n4010 -132.7560976\n4011   12.7073171\n4012  288.8536585\n4013 -770.0243902\n4014 -461.4878049\n4015 -256.8048780\n4016   -7.0487805\n4017  -86.0243902\n4018  106.2195122\n4019  269.0487805\n4020 -165.0487805\n4021  560.1219512\n4022  407.4878049\n4023 -159.3414634\n4024 -116.6097561\n4025  -69.5365854\n4026  476.6585366\n4027 -286.7560976\n4028  471.3902439\n4029  -17.9268293\n4030 -486.5121951\n4031  565.0975610\n4032 -116.5121951\n4033  687.5365854\n4034  343.9268293\n4035  466.2682927\n4036  424.9024390\n4037 -147.5853659\n4038 -725.4390244\n4039   63.3414634\n4040 -540.0731707\n4041 -176.1707317\n4042  453.8780488\n4043   70.1707317\n4044 -497.0975610\n4045  -84.0731707\n4046  291.3414634\n4047  -80.2195122\n4048 -155.0487805\n4049  770.1707317\n4050  364.2195122\n4051 -392.0731707\n4052  199.1951220\n4053 -187.6341463\n4054 -515.0000000\n4055  505.9756098\n4056  203.6829268\n4057  454.0243902\n4058 -413.1951220\n4059  181.0975610\n4060  440.9024390\n4061  487.5365854\n4062  -18.4634146\n4063  198.3658537\n4064  -54.8048780\n4065 -558.4146341\n4066 -222.8536585\n4067 -176.7560976\n4068  260.0731707\n4069  477.6829268\n4070  469.2926829\n4071   -7.6829268\n4072 -109.2926829\n4073  207.5853659\n4074 -508.4146341\n4075 -437.4390244\n4076 -142.2195122\n4077 -246.0243902\n4078 -797.6341463\n4079  417.4878049\n4080  -42.6097561\n4081 -739.2926829\n4082  -89.2439024\n4083 -265.0975610\n4084  160.4634146\n4085 -670.9024390\n4086  -31.8780488\n4087   58.4634146\n4088 -271.3414634\n4089 -308.6097561\n4090    1.1463415\n4091 -580.9512195\n4092 -401.8780488\n4093  -37.5853659\n4094 -671.9268293\n4095  164.9512195\n4096 -471.7804878\n4097  555.1463415\n4098  804.7560976\n4099 -707.2926829\n4100  562.3658537\n4101   -8.4634146\n4102  414.4634146\n4103 -564.2195122\n4104  -53.6341463\n4105  798.8536585\n4106  559.8292683\n4107  480.7073171\n4108  -90.8536585\n4109 -421.2926829\n4110  405.7317073\n4111 -338.1219512\n4112  563.5853659\n4113 -642.4146341\n4114  528.4146341\n4115  442.7073171\n4116 -384.9024390\n4117 -654.2682927\n4118  -32.0731707\n4119  174.3170732\n4120 -320.6097561\n4121 -477.2926829\n4122  363.8292683\n4123  508.6585366\n4124  -26.1219512\n4125  463.7317073\n4126   -2.6097561\n4127  563.5365854\n4128 -167.8292683\n4129 -626.5609756\n4130  720.9512195\n4131   -2.0243902\n4132  -55.1951220\n4133   96.2682927\n4134  720.1707317\n4135  652.4634146\n4136  530.5609756\n4137  108.9024390\n4138   37.6829268\n4139  159.7317073\n4140  535.0487805\n4141  700.2682927\n4142   96.3170732\n4143   -7.1951220\n4144 -198.6585366\n4145  -53.6829268\n4146 -503.1951220\n4147  591.2439024\n4148 -437.9268293\n4149 -262.5609756\n4150 -541.1463415\n4151  394.1219512\n4152  593.0487805\n4153  111.3902439\n4154  564.0731707\n4155  584.4146341\n4156  353.1463415\n4157  -11.4878049\n4158  521.2926829\n4159 -335.6829268\n4160 -159.5365854\n4161 -236.5121951\n4162   59.5365854\n4163    8.0731707\n4164  247.6829268\n4165  163.0000000\n4166  -72.4634146\n4167  -88.4634146\n4168  576.6585366\n4169  687.4878049\n4170  542.4634146\n4171 -562.6097561\n4172   16.2682927\n4173  579.9268293\n4174  123.6341463\n4175  -28.4146341\n4176  -18.9512195\n4177  461.6829268\n4178  487.0487805\n4179  482.8048780\n4180  601.5365854\n4181  369.8292683\n4182  730.1219512\n4183 -299.8780488\n4184 -213.1951220\n4185 -481.3414634\n4186 -666.2195122\n4187 -398.0243902\n4188 -332.9512195\n4189   37.9268293\n4190   21.2439024\n4191 -715.2439024\n4192   34.1707317\n4193  -78.1707317\n4194  675.5853659\n4195   73.4878049\n4196  -53.1951220\n4197 -254.6585366\n4198  244.4634146\n4199   50.2682927\n4200 -472.7560976\n4201  114.4146341\n4202 -620.1707317\n4203  693.6829268\n4204  148.4634146\n4205  774.2682927\n4206  292.0731707\n4207   -4.9024390\n4208  151.4390244\n4209  319.6341463\n4210  201.6829268\n4211 -201.3902439\n4212 -420.2682927\n4213 -486.4634146\n4214 -178.6097561\n4215 -634.7073171\n4216 -172.2682927\n4217  752.1219512\n4218  -67.2926829\n4219 -183.2439024\n4220 -262.5121951\n4221 -625.7804878\n4222   62.6585366\n4223 -718.4634146\n4224  350.8536585\n4225  144.7073171\n4226   -5.8292683\n4227  475.0975610\n4228 -325.6829268\n4229  534.5609756\n4230 -815.6829268\n4231  169.5365854\n4232 -327.0975610\n4233 -470.2682927\n4234  176.4634146\n4235  628.4634146\n4236 -164.1707317\n4237 -607.8292683\n4238  -20.4146341\n4239 -485.1951220\n4240 -300.2682927\n4241 -233.2926829\n4242  218.2195122\n4243 -678.3658537\n4244  516.2682927\n4245 -569.2439024\n4246  463.1463415\n4247  481.4878049\n4248  780.7560976\n4249  -54.7073171\n4250 -557.4390244\n4251  503.3902439\n4252 -402.1219512\n4253 -642.0243902\n4254  -46.0243902\n4255  113.8780488\n4256  828.6585366\n4257  -28.9512195\n4258 -713.0487805\n4259  606.4634146\n4260  145.2439024\n4261 -463.5365854\n4262 -274.4146341\n4263 -164.8536585\n4264  465.1463415\n4265  460.8536585\n4266  246.7073171\n4267 -688.0731707\n4268   19.0975610\n4269 -134.9024390\n4270  541.8292683\n4271 -516.5121951\n4272 -124.1219512\n4273  -62.2195122\n4274   95.6829268\n4275 -833.0487805\n4276   79.5853659\n4277  435.5365854\n4278  281.9268293\n4279  421.7317073\n4280  -47.2926829\n4281  681.1951220\n4282   24.9024390\n4283  -49.5365854\n4284 -182.0731707\n4285   -8.5121951\n4286  -33.8780488\n4287  559.4390244\n4288  769.5365854\n4289 -582.4634146\n4290  205.1463415\n4291  542.5121951\n4292 -227.6829268\n4293 -137.5365854\n4294 -287.0487805\n4295   51.5853659\n4296 -387.4878049\n4297  -21.0487805\n4298  -86.1707317\n4299  504.2682927\n4300  -19.4390244\n4301 -359.1951220\n4302  567.9756098\n4303  180.2682927\n4304 -641.0487805\n4305 -555.7317073\n4306 -313.2439024\n4307 -488.9024390\n4308  -70.7073171\n4309 -562.3658537\n4310 -127.3902439\n4311  706.6097561\n4312  737.8780488\n4313 -512.7560976\n4314 -521.5853659\n4315  547.5853659\n4316  367.1463415\n4317 -288.8536585\n4318  -24.1707317\n4319  434.8536585\n4320  -44.3658537\n4321  684.9024390\n4322 -496.5121951\n4323  472.4146341\n4324   53.7317073\n4325 -544.9024390\n4326  -47.7317073\n4327  -56.0243902\n4328  -58.1219512\n4329  238.5609756\n4330  117.5853659\n4331   55.3414634\n4332 -464.4634146\n4333   18.5609756\n4334  204.6097561\n4335 -375.2926829\n4336 -588.0243902\n4337  -22.9024390\n4338  186.4634146\n4339  -33.8780488\n4340  195.6829268\n4341  -11.8780488\n4342   -8.0731707\n4343  -46.8048780\n4344  483.9756098\n4345  599.7804878\n4346   82.8048780\n4347   51.7804878\n4348 -515.8292683\n4349  262.2682927\n4350   78.2195122\n4351  -31.0000000\n4352  -69.5365854\n4353  610.9512195\n4354  128.9024390\n4355 -520.7073171\n4356  575.4390244\n4357  195.7804878\n4358  546.1219512\n4359 -105.6829268\n4360  135.2439024\n4361  -21.3414634\n4362  546.8048780\n4363 -204.3658537\n4364 -571.7804878\n4365 -669.4878049\n4366 -534.4146341\n4367  451.6341463\n4368   23.6829268\n4369   18.2195122\n4370 -429.3902439\n4371 -727.0000000\n4372  386.8536585\n4373  561.6341463\n4374  -89.1951220\n4375   98.2195122\n4376   35.0975610\n4377  499.2926829\n4378 -278.5121951\n4379  256.3658537\n4380  345.2439024\n4381   23.0487805\n4382   76.9024390\n4383   42.2682927\n4384   43.3414634\n4385 -640.4146341\n4386  -51.3902439\n4387  613.6829268\n4388   45.2439024\n4389  663.8780488\n4390 -435.9268293\n4391 -266.4634146\n4392  196.1707317\n4393 -257.0000000\n4394 -536.8048780\n4395 -713.4878049\n4396 -533.4390244\n4397  693.9268293\n4398  675.0487805\n4399  485.8292683\n4400  -67.2439024\n4401  753.8780488\n4402  547.9756098\n4403 -536.6097561\n4404  490.2682927\n4405 -660.8048780\n4406  -44.0731707\n4407  140.9512195\n4408  184.0731707\n4409 -193.0975610\n4410  -44.7560976\n4411 -133.8292683\n4412  439.1463415\n4413   17.3902439\n4414  -65.1463415\n4415 -587.0000000\n4416  -98.6097561\n4417  520.3658537\n4418 -244.8048780\n4419  678.1707317\n4420 -536.3170732\n4421    8.0731707\n4422  143.9268293\n4423  -85.0975610\n4424 -259.5853659\n4425  483.7804878\n4426 -326.1707317\n4427   70.7073171\n4428 -543.6341463\n4429  -70.9512195\n4430 -395.0000000\n4431  388.1219512\n4432 -293.4390244\n4433  811.5365854\n4434  157.1951220\n4435   12.4634146\n4436 -290.4634146\n4437   30.0731707\n4438 -180.7073171\n4439 -730.8536585\n4440  600.0243902\n4441 -487.5853659\n4442 -485.5853659\n4443   98.3658537\n4444   99.3902439\n4445   81.7317073\n4446 -635.6341463\n4447 -573.6341463\n4448 -398.1707317\n4449 -236.0731707\n4450   97.8292683\n4451 -444.0243902\n4452 -112.3170732\n4453  593.3902439\n4454 -550.8048780\n4455  139.3902439\n4456 -133.9268293\n4457   51.4390244\n4458 -116.1219512\n4459 -632.2682927\n4460 -450.2195122\n4461 -479.2439024\n4462  124.8048780\n4463  141.5853659\n4464  -40.0243902\n4465 -373.1463415\n4466  380.9512195\n4467 -546.4146341\n4468  114.4634146\n4469 -109.2926829\n4470  582.7560976\n4471  -97.3902439\n4472   44.0731707\n4473  411.3414634\n4474   -7.8780488\n4475 -675.5365854\n4476 -626.7560976\n4477  572.7560976\n4478 -478.5609756\n4479  144.1707317\n4480   19.4878049\n4481 -687.0975610\n4482 -838.6585366\n4483 -628.9024390\n4484 -556.8536585\n4485 -478.2195122\n4486  252.7073171\n4487 -617.1463415\n4488 -697.7317073\n4489  485.4390244\n4490  668.4634146\n4491  423.3414634\n4492 -121.8780488\n4493 -449.4878049\n4494  -38.0731707\n4495  160.6097561\n4496  550.5609756\n4497 -112.0243902\n4498    3.1463415\n4499  457.2926829\n4500  549.0000000\n4501  335.5853659\n4502  782.6097561\n4503 -121.6829268\n4504 -562.4634146\n4505 -675.0975610\n4506   -0.2195122\n4507  100.5609756\n4508 -564.8048780\n4509  486.0243902\n4510  -98.4146341\n4511 -166.2682927\n4512  193.8292683\n4513  415.2926829\n4514  136.3170732\n4515  177.5853659\n4516 -418.4634146\n4517 -123.3902439\n4518  434.0243902\n4519   26.3658537\n4520   -5.4878049\n4521 -235.4878049\n4522 -671.1951220\n4523  830.7073171\n4524 -668.8048780\n4525 -207.7317073\n4526 -100.2195122\n4527 -875.4878049\n4528  -23.3414634\n4529    1.8780488\n4530  226.3658537\n4531 -616.9512195\n4532 -558.8536585\n4533   79.5365854\n4534  229.8780488\n4535  542.6585366\n4536  250.9024390\n4537 -595.5365854\n4538  180.1219512\n4539 -748.2195122\n4540 -446.0243902\n4541  142.1707317\n4542   -4.1707317\n4543 -665.3414634\n4544 -139.7317073\n4545  -99.8780488\n4546 -374.0731707\n4547  391.0487805\n4548  258.0243902\n4549  -95.6341463\n4550  835.9268293\n4551  484.5609756\n4552   30.4634146\n4553  -13.7317073\n4554 -429.0000000\n4555  558.3170732\n4556  348.8048780\n4557 -601.5853659\n4558  595.0487805\n4559   43.4390244\n4560 -210.5121951\n4561 -373.6829268\n4562  543.0487805\n4563 -693.0000000\n4564  212.8536585\n4565   59.8780488\n4566 -302.8536585\n4567   67.5853659\n4568   95.3414634\n4569 -622.9024390\n4570  532.2195122\n4571 -349.5365854\n4572   69.2439024\n4573 -127.8780488\n4574  846.9512195\n4575 -116.1219512\n4576 -351.3902439\n4577  310.9512195\n4578 -104.5609756\n4579  766.3658537\n4580 -393.9268293\n4581  117.3414634\n4582  738.0731707\n4583  516.3658537\n4584 -626.7073171\n4585  665.5365854\n4586  457.0000000\n4587  738.0731707\n4588  363.7317073\n4589  240.2195122\n4590 -151.5853659\n4591  143.2926829\n4592  400.8536585\n4593  683.5365854\n4594  522.3658537\n4595  591.9756098\n4596  514.5121951\n4597  319.5853659\n4598 -148.3658537\n4599  494.7560976\n4600  269.9756098\n4601  233.0487805\n4602 -240.5121951\n4603 -427.0975610\n4604 -425.8780488\n4605 -401.9268293\n4606  242.6097561\n4607  689.8292683\n4608  -16.5121951\n4609 -545.1463415\n4610 -624.6097561\n4611 -497.5365854\n4612  373.5853659\n4613 -538.7073171\n4614  -58.5609756\n4615  267.3902439\n4616 -535.0487805\n4617 -315.8780488\n4618  547.4390244\n4619 -129.7317073\n4620 -686.0243902\n4621 -262.5121951\n4622   48.8536585\n4623 -723.5853659\n4624  182.9024390\n4625 -569.8292683\n4626  524.7560976\n4627  362.4634146\n4628  606.8536585\n4629  -31.3902439\n4630  256.5121951\n4631  -57.2926829\n4632 -335.7317073\n4633  -71.0975610\n4634  283.0487805\n4635  264.1219512\n4636 -567.5365854\n4637   44.9512195\n4638  -31.9756098\n4639 -597.0487805\n4640  484.8536585\n4641 -135.2926829\n4642  -98.0731707\n4643   70.8536585\n4644   49.0487805\n4645  550.8536585\n4646  524.1707317\n4647  339.4878049\n4648 -413.9756098\n4649  -71.7804878\n4650   51.7804878\n4651   31.5365854\n4652  -27.6341463\n4653 -160.2682927\n4654  462.4634146\n4655 -444.9512195\n4656   32.6585366\n4657  661.7317073\n4658  150.1219512\n4659 -655.7317073\n4660  -24.2195122\n4661 -207.7804878\n4662  432.8048780\n4663 -555.5365854\n4664 -289.7317073\n4665 -676.4146341\n4666   11.3902439\n4667  -71.5853659\n4668  130.9024390\n4669   87.3902439\n4670 -508.9024390\n4671 -519.0487805\n4672  301.2439024\n4673   40.4146341\n4674   79.0000000\n4675  -19.4878049\n4676 -314.3658537\n4677 -542.9512195\n4678  159.4878049\n4679 -462.8048780\n4680  526.2195122\n4681 -587.8292683\n4682  490.4146341\n4683 -767.1463415\n4684  -24.9024390\n4685  -52.3170732\n4686 -612.8536585\n4687 -122.0731707\n4688 -442.7560976\n4689 -152.7073171\n4690  705.8292683\n4691  793.4878049\n4692  -95.9268293\n4693  280.9512195\n4694 -409.8780488\n4695 -332.6097561\n4696  378.1219512\n4697  575.7317073\n4698  -48.4146341\n4699 -574.9024390\n4700 -679.8292683\n4701 -633.0975610\n4702  838.2195122\n4703  101.2926829\n4704 -290.8048780\n4705  103.7804878\n4706  599.8780488\n4707 -520.5609756\n4708   95.3414634\n4709  732.7073171\n4710  757.3902439\n4711 -458.6585366\n4712  608.7073171\n4713 -521.0975610\n4714  172.6097561\n4715  385.6829268\n4716 -179.6341463\n4717  400.1707317\n4718   41.5365854\n4719  674.1707317\n4720  126.7560976\n4721  641.8780488\n4722   65.7317073\n4723 -512.7560976\n4724   -6.7560976\n4725   90.5609756\n4726 -690.2682927\n4727  465.3902439\n4728   47.1951220\n4729  691.4390244\n4730 -495.4390244\n4731 -451.6829268\n4732 -169.1951220\n4733  239.3902439\n4734 -652.8536585\n4735  626.0731707\n4736 -574.3658537\n4737 -431.0000000\n4738 -100.6585366\n4739  750.1219512\n4740 -487.7804878\n4741   88.1219512\n4742 -190.4634146\n4743 -531.0487805\n4744 -676.4634146\n4745   42.2682927\n4746  770.0243902\n4747  567.0975610\n4748 -544.9512195\n4749  -30.1219512\n4750 -285.2926829\n4751  658.1219512\n4752  342.6097561\n4753  116.3170732\n4754  -53.1463415\n4755  442.7073171\n4756 -509.4390244\n4757 -720.9512195\n4758   49.7317073\n4759  437.7317073\n4760 -427.4878049\n4761  568.2682927\n4762 -638.8536585\n4763 -611.8292683\n4764 -347.2926829\n4765  -53.8780488\n4766  -45.3902439\n4767 -656.7073171\n4768  397.0487805\n4769 -243.3414634\n4770 -693.8292683\n4771 -623.9756098\n4772    5.1463415\n4773  407.3414634\n4774  203.8292683\n4775  533.2439024\n4776 -172.9024390\n4777  -24.0731707\n4778  629.0000000\n4779 -339.6341463\n4780  254.9024390\n4781   69.9268293\n4782 -806.1707317\n4783  282.5121951\n4784   35.1951220\n4785  568.6585366\n4786  703.9268293\n4787  118.3170732\n4788   48.9024390\n4789  768.3658537\n4790  135.0000000\n4791  431.9756098\n4792  469.8780488\n4793  -13.3902439\n4794 -594.3658537\n4795  618.1707317\n4796 -693.9268293\n4797  458.8536585\n4798   71.0487805\n4799 -622.7073171\n4800 -457.4390244\n4801  149.0975610\n4802 -162.9512195\n4803 -559.6341463\n4804  -22.4146341\n4805 -432.1707317\n4806  645.4878049\n4807  299.8292683\n4808 -408.8536585\n4809  833.6829268\n4810 -445.2439024\n4811 -448.7073171\n4812 -388.6585366\n4813 -614.3658537\n4814 -587.2926829\n4815  175.2926829\n4816  261.7804878\n4817  487.2926829\n4818  337.8780488\n4819  -66.1219512\n4820  134.4146341\n4821 -292.8536585\n4822   31.1951220\n4823  422.6585366\n4824  -60.8048780\n4825   -7.1463415\n4826  223.0975610\n4827   10.2682927\n4828  624.9024390\n4829 -166.1707317\n4830 -409.2926829\n4831 -137.9268293\n4832  738.6585366\n4833  -13.3902439\n4834   63.6829268\n4835  738.7073171\n4836  -19.4878049\n4837 -664.9024390\n4838 -459.0975610\n4839   71.2926829\n4840 -651.9268293\n4841 -764.3658537\n4842  -38.8536585\n4843 -743.1951220\n4844 -694.2682927\n4845 -232.4634146\n4846 -637.2439024\n4847  444.4146341\n4848  -52.9024390\n4849  540.9512195\n4850  716.9512195\n4851  126.9512195\n4852  179.6341463\n4853  146.9024390\n4854  866.1707317\n4855  444.0243902\n4856  612.0731707\n4857  285.5365854\n4858 -317.2439024\n4859  583.3414634\n4860 -387.9756098\n4861  655.3414634\n4862  436.1219512\n4863  208.6097561\n4864  310.8536585\n4865   51.7317073\n4866 -129.9268293\n4867  -30.8048780\n4868    6.4146341\n4869  562.5121951\n4870 -230.4146341\n4871  -92.5121951\n4872 -117.0975610\n4873  786.1219512\n4874  -76.6097561\n4875  650.1707317\n4876  216.6585366\n4877  420.3658537\n4878  -42.3170732\n4879 -134.4146341\n4880  534.3658537\n4881  -90.5121951\n4882 -473.2926829\n4883   -5.2439024\n4884   73.3902439\n4885 -575.0975610\n4886  -23.6829268\n4887 -199.8292683\n4888 -574.6585366\n4889 -692.9024390\n4890 -635.3902439\n4891  403.1463415\n4892  277.2926829\n4893   -8.6585366\n4894  440.5609756\n4895  349.3414634\n4896 -128.1219512\n4897   84.6097561\n4898  536.3170732\n4899  -56.2682927\n4900   97.5365854\n4901  772.4634146\n4902  665.5853659\n4903 -508.9024390\n4904  722.6097561\n4905   70.3170732\n4906  117.6829268\n4907 -307.3902439\n4908  238.3658537\n4909 -697.3414634\n4910  216.6097561\n4911  -26.8536585\n4912 -170.0731707\n4913 -860.2195122\n4914  157.5853659\n4915   90.0243902\n4916  232.4146341\n4917  373.4390244\n4918 -192.0243902\n4919  346.5121951\n4920  237.2926829\n4921  193.4878049\n4922 -753.7804878\n4923  -25.0487805\n4924 -188.7560976\n4925 -465.0975610\n4926  154.4146341\n4927 -141.2439024\n4928   51.1951220\n4929  241.8780488\n4930 -532.8536585\n4931  571.0975610\n4932  557.4390244\n4933  600.1707317\n4934   -9.2926829\n4935 -544.3170732\n4936 -284.1219512\n4937   90.4146341\n4938  -74.4634146\n4939 -262.7560976\n4940  -47.5853659\n4941   31.0975610\n4942 -705.7804878\n4943  624.2682927\n4944 -613.0975610\n4945 -356.7560976\n4946  106.3170732\n4947 -202.9024390\n4948  316.5609756\n4949 -448.3658537\n4950 -642.2195122\n4951  610.7073171\n4952   47.6829268\n4953 -700.9512195\n4954  -14.4146341\n4955   56.3170732\n4956  249.0000000\n4957 -546.6097561\n4958  139.8292683\n4959 -455.2926829\n4960 -416.2682927\n4961  -89.6341463\n4962  398.1219512\n4963   34.5609756\n4964  432.3170732\n4965 -292.1707317\n4966   99.9756098\n4967  203.3414634\n4968   44.6097561\n4969  503.6829268\n4970  845.4390244\n4971 -173.5365854\n4972   33.3414634\n4973  -53.4878049\n4974  674.8048780\n4975  164.5609756\n4976 -569.8780488\n4977  501.0975610\n4978  282.9024390\n4979 -419.4390244\n4980 -485.6829268\n4981 -388.9512195\n4982  -37.0487805\n4983 -455.4878049\n4984  -62.3658537\n4985  254.6585366\n4986 -564.6585366\n4987   30.8048780\n4988    4.0243902\n4989  522.2682927\n4990  564.7073171\n4991 -430.6585366\n4992  484.8048780\n4993  675.3902439\n4994  176.0243902\n4995  481.6341463\n4996 -152.7073171\n4997  913.2439024\n4998 -480.2682927\n4999  557.0487805\n\n\n.\n\nnull_dist_spend %&gt;%    \n  gf_histogram(~diffmean,                \n               bins = 25) %&gt;%      \n  gf_vline(xintercept = obs_diff_gender,              \n           color = \"red\",              \n           linewidth = 1,              \n           title = \"Null Distributtion by Permutation\",              \n           subtitle = \"Histogram\") %&gt;%    \n  gf_labs( x = \"Difference in Means\")  \n\n\n\n\n\n\n\n## \n\nnull_dist_spend %&gt;%  \n  gf_ecdf( ~ diffmean,          \n           linewidth = 1) %&gt;%   \n  gf_vline(xintercept = obs_diff_gender,             \n           colour = \"red\", linewidth = 1,            \n           title = \"Null Distribution by Permutation\",             \n           subtitle = \"Cumulative Density\") %&gt;%    \n  gf_labs(x = \"Difference in Means\")\n\n\n\n\n\n\n\n\n.\n\nprop1(~ diffmean &lt;= obs_diff_gender, data = null_dist_spend)\n\nprop_TRUE \n   0.5626 \n\n\n.\n.\n\n\nAll Tests Together\n.\n\nwilcox.test(expense ~ gender, data = spend,              \n            conf.int = TRUE,              \n            conf.level = 0.95) %&gt;%    \n  broom::tidy() %&gt;%    \n  gt() %&gt;%   \n  tab_style( style = list(cell_fill(color = \"violet\"), \n                          cell_text(weight = \"bold\")),     \n             locations = cells_body(columns = p.value)) %&gt;%    \n  tab_header(title = \"wilcox.test\")  \n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact confidence intervals with ties\n\n\n\n\n\n\n\n\nwilcox.test\n\n\nestimate\nstatistic\np.value\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-55.00002\n745.5\n0.3806576\n-180\n69.99998\nWilcoxon rank sum test with continuity correction\ntwo.sided\n\n\n\n\n\n\n##   \nlm(rank(expense) ~ gender,     \n   data = spend) %&gt;%    \n  broom::tidy(conf.int = TRUE,               \n              conf.level = 0.95) %&gt;%    \n  gt() %&gt;%   \n  tab_style(style = list(cell_fill(color = \"violet\"),\n                         cell_text(weight = \"bold\")),     \n            locations = cells_body(columns = p.value)) %&gt;%    \n  tab_header(title = \"Linear Model with Ranked Data\")\n\n\n\n\n\n\n\nLinear Model with Ranked Data\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n39.182927\n3.723269\n10.5237975\n9.296940e-17\n31.773386\n46.59247\n\n\ngenderMale\n4.634146\n5.265497\n0.8800966\n3.814432e-01\n-5.844527\n15.11282"
  },
  {
    "objectID": "posts/A3 - Gals vs Guys in Spending/index.html#conclusion",
    "href": "posts/A3 - Gals vs Guys in Spending/index.html#conclusion",
    "title": "A3 - Gals vs Guys in Spending",
    "section": "Conclusion",
    "text": "Conclusion"
  }
]